<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>长征部落格</title>
  
  <subtitle>保持怀疑，独立思考</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.cz5h.com/"/>
  <updated>2020-08-06T21:49:14.905Z</updated>
  <id>https://www.cz5h.com/</id>
  
  <author>
    <name>Tzloop</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>快速建站“新玩具”—glitch.me</title>
    <link href="https://www.cz5h.com/article/6868.html"/>
    <id>https://www.cz5h.com/article/6868.html</id>
    <published>2020-08-05T22:00:00.000Z</published>
    <updated>2020-08-06T21:49:14.905Z</updated>
    
    <content type="html"><![CDATA[<p>今天在 YouTube 看了一个谷歌的开发视频，里面主讲者用 Glitch.me 做了代码的演示平台，所以自然地通过视频下方的演示链接，接触到了 Glitch，初步使用过后，我觉得这和 now.sh 等功能差不多，专为Web静态页面提供快速发布服务。目前我看百度里对其介绍的文章基本没有，那我就来介绍一下它吧！</p><a id="more"></a><fancybox><img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200806194610.png"></fancybox><p>部分内容翻译自官方的说明，可不是我瞎编的！</p><h3 id="Glitch到能干啥？"><a href="#Glitch到能干啥？" class="headerlink" title="Glitch到能干啥？"></a><strong>Glitch到能干啥？</strong></h3><h4 id="创建Web应用的工具"><a href="#创建Web应用的工具" class="headerlink" title="创建Web应用的工具"></a><strong>创建Web应用的工具</strong></h4><ul><li><p>其可以让所有人都能够使用此“开发工具”，因此其足够简单、易用。完善的代码补全提醒、健全的团队管理功能是其基本功能。除此之外，Glitch其实是一个协作式编程环境，只需要使用浏览器的开发页面，就可以构建从静态网页到结合全栈Node框架的所有应用。</p></li><li><p>第二个令我惊讶的特性是“多人协作开发”的功能，Glitch在这里真正做到了实时多人在线开发，这个功能还是很吸引人的。</p></li><li><p>第三点则是应用的“即时上线”功能，这里要吐槽下国内的Coding，使用静态部署一小时只有十次配额，对于Glitch，这将是无限的、实时的、无需我们干预的过程，Glitch本质上没有部署或发布的概念，修改后即生效。</p></li><li><p>第四点黑科技则是“和已有IDE的无缝结合”，例如可以在VSCode中使用插件来将Glitch的web开发页面搬到VSCode中，其余操作完全无影响。再比如结合Github，直接导入已有的代码进行构建。</p></li></ul><h4 id="友好、创造性的社区"><a href="#友好、创造性的社区" class="headerlink" title="友好、创造性的社区"></a><strong>友好、创造性的社区</strong></h4><fancybox><img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200806223446.png"></fancybox><p>Glitch已经包含了非常多的有趣的项目，包含了各种分类的各种内容，以游戏为例，其允许我们直接看到、使用到游戏渲染后的内容，这也算是Glitch的黑科技吧，如果你对某个项目感兴趣，那么将其内化并加以完善在Glitch上也是非常容易就能实现的！</p><fancybox><img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200806223620.png"></fancybox><h3 id="Glitch怎么用？"><a href="#Glitch怎么用？" class="headerlink" title="Glitch怎么用？"></a><strong>Glitch怎么用？</strong></h3><p>详细讲解其用法是不现实的，这里就两个关键功能来对Glitch做个简单的讲解。</p><h4 id="快速发布静态页"><a href="#快速发布静态页" class="headerlink" title="快速发布静态页"></a><strong>快速发布静态页</strong></h4><p>有多快速呢？基本上就是“新建项目-&gt;编辑index.html-&gt;获得页面链接”就结束了。具体登陆时可以直接用Github登陆，其不会再有附加账号的要求。新建项目后会发现有个双栏的开发页面，所有工作都可以在这个页面完成，而且重点是左侧部分，功能基本都在这块。</p><p>以 <a href="https://github.com/iamcn/iamchinese" target="_blank" rel="external nofollow noopener noreferrer">iamchinese</a> 项目为例，修改完index.html后，随即打开左侧头像旁边的<code>Share</code>下拉框，选择<code>LiveAPP</code>，即可复制当前的页面链接，即：<a href="https://iamchinese.glitch.me" target="_blank" rel="external nofollow noopener noreferrer">https://iamchinese.glitch.me</a>，如果对默认名称不满意，可以直接修改一个可用的名称（即修改最左上角的项目名称）。</p><h4 id="绑定域名"><a href="#绑定域名" class="headerlink" title="绑定域名"></a><strong>绑定域名</strong></h4><fancybox><img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200806233316.png"></fancybox><p>左下角，点击 Tools -&gt; Custom Domains，输入你的域名，即可以获得进一步的绑定信息。你会发现以下内容，至此应该有域名的朋友就知道怎么做了。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">At your domain registrar </span><br><span class="line">you&#39;ll need to create a CNAME record </span><br><span class="line">for ihave.diedin.icu pointing to </span><br><span class="line">peyk2z9el29xvm93.preview.edgeapp.net</span><br></pre></td></tr></table></figure><fancybox><img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200806233419.png"></fancybox><p>需要注意的是，Glitch已说明如果你想直接访问<code>preview.edgeapp.net</code>这个链接，那么你只会得到<code>Not Found</code>。其只能在CNAME下生效。这里我用Dnspod，只需要添加一个CNAME即可。解析后即可访问 <a href="http://ihave.diedin.icu" target="_blank" rel="external nofollow noopener noreferrer">ihave.diedin.icu</a>。</p><p>至此，其主要功能“快速发布静态页面”就基本介绍完毕，各种扩展、功能大家可以自己去慢慢探索。</p><p><strong>不过据不可靠消息称，Glitch在国内无法访问，未验证。</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天在 YouTube 看了一个谷歌的开发视频，里面主讲者用 Glitch.me 做了代码的演示平台，所以自然地通过视频下方的演示链接，接触到了 Glitch，初步使用过后，我觉得这和 now.sh 等功能差不多，专为Web静态页面提供快速发布服务。目前我看百度里对其介绍的文章基本没有，那我就来介绍一下它吧！&lt;/p&gt;
    
    </summary>
    
    
      <category term="建站组网" scheme="https://www.cz5h.com/categories/%E5%BB%BA%E7%AB%99%E7%BB%84%E7%BD%91/"/>
    
    
      <category term="教程" scheme="https://www.cz5h.com/tags/%E6%95%99%E7%A8%8B/"/>
    
      <category term="Glitch" scheme="https://www.cz5h.com/tags/Glitch/"/>
    
  </entry>
  
  <entry>
    <title>Manual for reinstalling system</title>
    <link href="https://www.cz5h.com/article/cd23.html"/>
    <id>https://www.cz5h.com/article/cd23.html</id>
    <published>2020-07-27T22:00:00.000Z</published>
    <updated>2020-07-28T20:42:42.472Z</updated>
    
    <content type="html"><![CDATA[<p>This is a complete installation manual, the purpose is to quickly modify the ubuntu system to a usable state, including several parts such as coding environment and theme modification. This article has hidden images to highlight the text content. You can find the part you are interested in according to the catalog.</p><a id="more"></a><p><strong>Go to <a href="https://tianzonglin.github.io/Ubuntu-Installog" target="_blank" rel="external nofollow noopener noreferrer">Github version</a></strong> (This doc includes two parts of <a href="https://tianzonglin.github.io/Ubuntu-Installog/Installations.html" target="_blank" rel="external nofollow noopener noreferrer">Installations</a> and <a href="https://tianzonglin.github.io/Ubuntu-Installog/PersonalSettings.html" target="_blank" rel="external nofollow noopener noreferrer">PersonalSettings</a>)<br><br></p><hr><ul><li><p><a href="#0-laptop-info">0. laptop info</a></p></li><li><p><a href="#1-install-the-system">1. install the system</a></p><ul><li><a href="#1-1-prepare-a-USB-installer-with-another-computer">1.1 prepare a USB installer - with another computer</a></li><li><a href="#1-2-turn-off-the-secure-boot-in-BIOS">1.2 turn off the secure boot in BIOS</a></li><li><a href="#1-3-follow-and-finish-the-standard-installation-process">1.3 follow and finish the standard installation process</a></li><li><a href="#1-4-agree-the-1st-time-update-require-then-reboot">1.4 agree the 1st time update require, then reboot</a></li></ul></li><li><p><a href="#2-install-nvidia-dirver">2. install nvidia dirver</a></p><ul><li><a href="#2-1-add-repository-then-we-can-check-devices">2.1 add repository then we can check devices</a></li><li><a href="#2-2-install-drivers-in-APP-software-and-updates">2.2 install drivers in APP - Software and Updates</a></li><li><a href="#2-3-do-NOT-set-blacklist-of-nouveau-or-set-grub">2.3 do NOT set blacklist of nouveau or set grub.</a></li></ul></li><li><p><a href="#3-install-cuda-toolkit">3. install cuda-toolkit</a></p><ul><li><a href="#3-1-select-cuda-10-or-another-version">3.1 select cuda-10_* or another version</a></li><li><a href="#3-2-execute">3.2 execute</a></li><li><a href="#3-3-type-no-in-the-process">3.3 type NO in the process</a></li><li><a href="#3-4-test-samples">3.4 test samples</a></li><li><a href="#3-5-extra-important-config">3.5 extra IMPORTANT config</a></li></ul></li><li><p><a href="#4-install-GL-stuff">4. install GL stuff</a></p><ul><li><a href="#4-1-for-GL-gl-h-use">4.1 for GL/gl.h use</a></li><li><a href="#4-2-GL-gluh">4.2 GL/glu.h</a></li><li><a href="#4-3-others">4.3 others</a></li><li><a href="#4-4-just-use-all-in-one-command">4.4 just use all-in-one command</a></li></ul></li><li><p><a href="#5-install-project-stuff">5. install project stuff</a></p><ul><li><a href="#5-1-base-tools">5.1 base tools</a></li><li><a href="#5-2-rebuild-project">5.2 rebuild project</a></li></ul></li><li><p><a href="#6-install-personal-software">6. install personal software</a></p><ul><li><a href="#6-1-screenshot-flameshot">6.1 screenshot: flameshot</a></li><li><a href="#6-2-vscode">6.2 vscode</a></li></ul></li><li><p><a href="#7-change-the-theme-with-tweaks">7. change the theme with Tweaks</a></p><ul><li><a href="#7-1-install-tweaks-and-its-extensions">7.1 install tweaks and its extensions</a></li><li><a href="#7-2-change-menu-style">7.2 change menu style</a></li><li><a href="#7-3-change-the-wallpaper">7.3 change the wallpaper</a></li><li><a href="#7-4-change-the-panel-and-put-icons-on-the-desktop">7.4 change the panel and put icons on the desktop</a></li></ul></li><li><p><a href="#8-unimportant-changes">8. unimportant changes</a></p><ul><li><a href="#8-1-add-support-of-Chinese">8.1 add support of Chinese</a></li><li><a href="#8-2-change-screen-resolution">8.2 change screen resolution</a></li><li><a href="#8-3-add-support-of-windows-software">8.3 add support of Windows software</a></li><li><a href="#8-4-some-unessential-changes-with-tweaks">8.4 some unessential changes with Tweaks</a></li><li><a href="#8-5-other-useful-tools-and-settings">8.5 other useful tools and settings</a><ul><li><a href="#8-5-1-brightness-control">8.5.1 brightness control</a></li><li><a href="#8-5-2-vscode-preferances">8.5.2 vscode preferances</a></li><li><a href="#8-5-3-picgo">8.5.3 picgo</a></li><li><a href="#8-5-4-install-and-set-git">8.5.4 install and set git</a></li></ul></li></ul></li><li><p><a href="#X-Ubuntu-Using-Tips">X. Ubuntu Using Tips</a></p><ul><li><a href="#X-1-updates">X.1 updates</a></li><li><a href="#X-2-when-desktop-crash">X.2 when desktop crash</a></li></ul><br></li></ul><hr><h3 id="0-laptop-info"><a href="#0-laptop-info" class="headerlink" title="0. laptop info"></a>0. laptop info</h3><ul><li>MSI GE62 490, with an Nvidia GeForce 960M graphics card</li><li>the core is intel i7-6700HQ with an inside graphics card</li><li>single system (ubuntu-18.04-LTS)</li></ul><h3 id="1-install-the-system"><a href="#1-install-the-system" class="headerlink" title="1. install the system"></a>1. install the system</h3><h4 id="1-1-prepare-a-USB-installer-with-another-computer"><a href="#1-1-prepare-a-USB-installer-with-another-computer" class="headerlink" title="1.1 prepare a USB installer - with another computer"></a>1.1 prepare a USB installer - with another computer</h4><p>Note: official iso (<a href="https://releases.ubuntu.com/18.04/ubuntu-18.04.4-desktop-amd64.iso" target="_blank" rel="external nofollow noopener noreferrer">ubuntu-18.04.4-desktop-amd64.iso</a>)</p><h4 id="1-2-turn-off-the-secure-boot-in-BIOS"><a href="#1-2-turn-off-the-secure-boot-in-BIOS" class="headerlink" title="1.2 turn off the secure boot in BIOS"></a>1.2 turn off the secure boot in BIOS</h4><h4 id="1-3-follow-and-finish-the-standard-installation-process"><a href="#1-3-follow-and-finish-the-standard-installation-process" class="headerlink" title="1.3 follow and finish the standard installation process"></a>1.3 follow and finish the standard installation process</h4><p>Note: do NOT set grub (eg. nomodeset) if you can install smoothly. After setting ubuntu’s configuration, you can log into the new Ubuntu system (now, with the core graphics card and drivers)</p><h4 id="1-4-agree-the-1st-time-update-require-then-reboot"><a href="#1-4-agree-the-1st-time-update-require-then-reboot" class="headerlink" title="1.4 agree the 1st time update require, then reboot"></a>1.4 agree the 1st time update require, then reboot</h4><p>Note: when you first get into the Ubunutu, you may get a piece of update information, DO agree that, the principle is that we agree with all updates during the process of installation, but after we get a stable and complete system, then we stop update anything, try to keep the system having no change, if not, there might be some conflict between the new updates and the old drivers. </p><h3 id="2-install-nvidia-dirver"><a href="#2-install-nvidia-dirver" class="headerlink" title="2. install nvidia dirver"></a>2. install nvidia dirver</h3><h4 id="2-1-add-repository-then-we-can-check-devices"><a href="#2-1-add-repository-then-we-can-check-devices" class="headerlink" title="2.1 add repository then we can check devices"></a>2.1 add repository then we can check devices</h4><p>Note：we get the recommendation version here！</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ sudo add-apt-repository ppa:graphics-drivers&#x2F;ppa</span><br><span class="line">$ sudo apt-get update</span><br><span class="line">$ sudo ubuntu-drivers devices</span><br></pre></td></tr></table></figure><h4 id="2-2-install-drivers-in-APP-Software-and-Updates"><a href="#2-2-install-drivers-in-APP-Software-and-Updates" class="headerlink" title="2.2 install drivers in APP - Software and Updates"></a>2.2 install drivers in APP - Software and Updates</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Software and Updates -&gt;</span><br><span class="line">    additional drivers -&gt;</span><br><span class="line">        select the recommandation version -&gt;</span><br><span class="line">            apply</span><br></pre></td></tr></table></figure><h4 id="2-3-do-NOT-set-blacklist-of-nouveau-or-set-grub"><a href="#2-3-do-NOT-set-blacklist-of-nouveau-or-set-grub" class="headerlink" title="2.3 do NOT set blacklist of nouveau or set grub."></a>2.3 do NOT set blacklist of nouveau or set grub.</h4><p>Note: all stuff could be handled automatically by system if we use this way to install the drivers, we do nothing then it would be worked very well with Nvidia drivers!</p><p>Now, the installation of the Nvidia driver was finished. You can use <code>nvidia-smi</code> to test if it’s ok (screenshot:<a href="http://i.imgur.com/GgfSqCM.png" target="_blank" rel="external nofollow noopener noreferrer">http://i.imgur.com/GgfSqCM.png</a>) or just check the system information and see the drivers name. (screenshot: <a href="http://i.imgur.com/Euj6tQy.png" target="_blank" rel="external nofollow noopener noreferrer">http://i.imgur.com/Euj6tQy.png</a>)</p><h3 id="3-install-cuda-toolkit"><a href="#3-install-cuda-toolkit" class="headerlink" title="3. install cuda-toolkit"></a>3. install cuda-toolkit</h3><h4 id="3-1-select-cuda-10-or-another-version"><a href="#3-1-select-cuda-10-or-another-version" class="headerlink" title="3.1 select cuda-10_* or another version"></a>3.1 select cuda-10_* or another version</h4><p>(screenshot: <a href="http://i.imgur.com/6xPtxju.png" target="_blank" rel="external nofollow noopener noreferrer">http://i.imgur.com/6xPtxju.png</a>)</p><h4 id="3-2-execute"><a href="#3-2-execute" class="headerlink" title="3.2 execute"></a>3.2 execute</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo chmod 777 cuda-10_\*.run</span><br><span class="line">$ sudo sh cuda-10_\*.run</span><br></pre></td></tr></table></figure><h4 id="3-3-type-NO-in-the-process"><a href="#3-3-type-NO-in-the-process" class="headerlink" title="3.3 type NO in the process"></a>3.3 type NO in the process</h4><p>Note: we have installed the driver by ourselves, so here say no. </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Install NVIDIA Accelerated Graphics Driver for Linux-x86_64 410.48?</span><br><span class="line">(y)es&#x2F;(n)o&#x2F;(q)uit: n</span><br></pre></td></tr></table></figure><h4 id="3-4-test-samples"><a href="#3-4-test-samples" class="headerlink" title="3.4 test samples"></a>3.4 test samples</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ cd &#x2F;usr&#x2F;local&#x2F;cuda&#x2F;samples</span><br><span class="line">$ make</span><br><span class="line">  (10 minutes later)</span><br><span class="line">$ cd &#x2F;usr&#x2F;local&#x2F;cuda&#x2F;samples&#x2F;bin&#x2F;x86_64&#x2F;linux&#x2F;release</span><br><span class="line">$ .&#x2F;deviceQuery</span><br></pre></td></tr></table></figure><p>(screenshot: <a href="http://i.imgur.com/jJ7vpNw.png" target="_blank" rel="external nofollow noopener noreferrer">http://i.imgur.com/jJ7vpNw.png</a>)</p><h4 id="3-5-extra-IMPORTANT-config"><a href="#3-5-extra-IMPORTANT-config" class="headerlink" title="3.5 extra IMPORTANT config"></a>3.5 extra IMPORTANT config</h4><p>Note: add two environment params into /etc/profile, if not, maybe you could get the error says: libcudart.so.10.0: cannot open shared object file: No such file or directory</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">export PATH&#x3D;&#x2F;usr&#x2F;local&#x2F;cuda&#x2F;bin:$PATH </span><br><span class="line">export LD_LIBRARY_PATH&#x3D;&#x2F;usr&#x2F;local&#x2F;lib:&#x2F;usr&#x2F;local&#x2F;cuda&#x2F;lib64&#x2F;</span><br></pre></td></tr></table></figure><p>Now cuda installation is finished, actually, with samples’ test, we can also make sure that the GPU driver worked well.</p><h3 id="4-install-GL-stuff"><a href="#4-install-GL-stuff" class="headerlink" title="4. install GL stuff"></a>4. install GL stuff</h3><h4 id="4-1-for-GL-gl-h-use"><a href="#4-1-for-GL-gl-h-use" class="headerlink" title="4.1 for GL/gl.h use"></a>4.1 for GL/gl.h use</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install mesa-common-dev</span><br></pre></td></tr></table></figure><h4 id="4-2-GL-glu-h"><a href="#4-2-GL-glu-h" class="headerlink" title="4.2 GL/glu.h"></a>4.2 GL/glu.h</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install libglu1-mesa-dev freeglut3-dev</span><br></pre></td></tr></table></figure><h4 id="4-3-others"><a href="#4-3-others" class="headerlink" title="4.3 others"></a>4.3 others</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">libglfw3-dev libgles2-mesa-dev libglew-dev</span><br></pre></td></tr></table></figure><h4 id="4-4-just-use-all-in-one-command"><a href="#4-4-just-use-all-in-one-command" class="headerlink" title="4.4 just use all-in-one command"></a>4.4 just use all-in-one command</h4><p>Note: they are all necessary to install, and maybe you need to install more libs, it’s up to your code.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt install mesa-common-dev freeglut3-dev libglfw3-dev libgles2-mesa-dev libglew-dev</span><br></pre></td></tr></table></figure><h3 id="5-install-project-stuff"><a href="#5-install-project-stuff" class="headerlink" title="5. install project stuff"></a>5. install project stuff</h3><h4 id="5-1-base-tools"><a href="#5-1-base-tools" class="headerlink" title="5.1 base tools"></a>5.1 base tools</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt install vim</span><br><span class="line">$ sudo apt install cmake</span><br></pre></td></tr></table></figure><h4 id="5-2-rebuild-project"><a href="#5-2-rebuild-project" class="headerlink" title="5.2 rebuild project"></a>5.2 rebuild project</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ cd ProjectionExplain&#x2F;LIBRARY&#x2F;glui-master</span><br><span class="line">$ rm CMakeCache.txt</span><br><span class="line">$ make clean</span><br><span class="line">$ mkdir build &amp;&amp; cd build</span><br><span class="line">$ cmake ..</span><br><span class="line">$ make install</span><br><span class="line">$ cd ProjectionExplain&#x2F;</span><br><span class="line">$ make clean</span><br><span class="line">$ make </span><br><span class="line">$ .&#x2F;projwiz -f DATA&#x2F;segmentation lamp</span><br></pre></td></tr></table></figure><p>All stuff about GL-project has been done!<br> (screenshot: <a href="http://i.imgur.com/rDCtEId.png" target="_blank" rel="external nofollow noopener noreferrer">http://i.imgur.com/rDCtEId.png</a>)</p><h3 id="6-install-personal-software"><a href="#6-install-personal-software" class="headerlink" title="6. install personal software"></a>6. install personal software</h3><h4 id="6-1-screenshot-flameshot"><a href="#6-1-screenshot-flameshot" class="headerlink" title="6.1 screenshot: flameshot"></a>6.1 screenshot: flameshot</h4><p>use <code>sudo apt-get install flameshot</code></p><p>set the shortcut<br> (screenshot: <a href="http://i.imgur.com/id2PPYj.png" target="_blank" rel="external nofollow noopener noreferrer">http://i.imgur.com/id2PPYj.png</a>)</p><h4 id="6-2-vscode"><a href="#6-2-vscode" class="headerlink" title="6.2 vscode"></a>6.2 vscode</h4><p><strong>..more settings could be found in chapter 8.5..</strong></p><p>install it directly in APP (Ubuntu Software).<br> (screenshot: <a href="http://i.imgur.com/W971ERc.png" target="_blank" rel="external nofollow noopener noreferrer">http://i.imgur.com/W971ERc.png</a>)</p><p>then, we can program code with vsc</p><ul><li>open folder (ProjectionExplain)</li><li>Terminal-&gt;new terminal-&gt;make &amp;&amp; ./projwiz -f DATA/segmentation lamp</li></ul><h3 id="7-change-the-theme-with-Tweaks"><a href="#7-change-the-theme-with-Tweaks" class="headerlink" title="7. change the theme with Tweaks"></a>7. change the theme with Tweaks</h3><h4 id="7-1-install-tweaks-and-its-extensions"><a href="#7-1-install-tweaks-and-its-extensions" class="headerlink" title="7.1 install tweaks and its extensions"></a>7.1 install tweaks and its extensions</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt install gnome-shell-extensions gnome-shell-extension-dash-to-panel gnome-tweaks adwaita-icon-theme-full</span><br></pre></td></tr></table></figure><p>then logout and login system or reboot.</p><h4 id="7-2-change-menu-style"><a href="#7-2-change-menu-style" class="headerlink" title="7.2 change menu style"></a>7.2 change menu style</h4><p>(extension: applications menu) Note: turn on this extension could display the app manager like windows starting menu. Here I just changed the margin of the application and hide the application’s icon and show the desktop’s button (like windows).</p><h4 id="7-3-change-the-wallpaper"><a href="#7-3-change-the-wallpaper" class="headerlink" title="7.3 change the wallpaper"></a>7.3 change the wallpaper</h4><h4 id="7-4-change-the-panel-and-put-icons-on-the-desktop"><a href="#7-4-change-the-panel-and-put-icons-on-the-desktop" class="headerlink" title="7.4 change the panel and put icons on the desktop"></a>7.4 change the panel and put icons on the desktop</h4><p>The default style of the dock is not same as Windows, and the desktop is not very important while using Ubuntu, but here the idea is to change Ubuntu looks like Windows in every detailed area, so here, we still need to do two things: put icons onto the desktop and change the original style of dock.</p><p>There are several paths that could include installed applications, which means we need to go to different folders to find those icons. The paths below are some possible locations you need to check. Then just drag out and put the icon onto the desktop. You will see these icons become files like *.desktop, don’t worry, just double-click them and click ‘Trust and Launch’, then they could change back to the normal icons.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;usr&#x2F;share&#x2F;applications</span><br><span class="line">&#x2F;var&#x2F;lib&#x2F;snapd&#x2F;desktop&#x2F;applications</span><br><span class="line">~&#x2F;.local&#x2F;share&#x2F;applications</span><br></pre></td></tr></table></figure><p>Then we need to use Tweaks to change the panel/dock. </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">Open Tweaks -&gt; Extensions </span><br><span class="line">      -&gt; turn on the &#39;applications menu&#39; </span><br><span class="line">      -&gt; turn on the &#39;Dash to panel&#39; -&gt; open settings</span><br><span class="line">            -&gt; Location and Style</span><br><span class="line">                  -&gt; panel location -&gt; bottom</span><br><span class="line">                  -&gt; panel size -&gt; 45px</span><br><span class="line">                  -&gt; icons margin -&gt; 5px</span><br><span class="line">                  -&gt; indicator -&gt; open settings</span><br><span class="line">                        -&gt; height -&gt; 0px (we hide it by this)</span><br><span class="line">                  -&gt; clock location -&gt; right</span><br><span class="line">                  -&gt; task panels -&gt; left</span><br><span class="line">            -&gt; Behaviors</span><br><span class="line">                  -&gt; turn off &#39;favoriate applications&#39;</span><br><span class="line">                  -&gt; turn off &#39;applications icon&#39;</span><br><span class="line">                  -&gt; turn on &#39;show desktop&#39;</span><br><span class="line">                  -&gt; turn off &#39;cancel applications&#39; group&#39;</span><br></pre></td></tr></table></figure><p>Till now, the basic theme set has been finished, and the style now is very similar (98%) to the  Windows desktop.  (screenshot: <a href="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/2020-07-2823849238944.png" target="_blank" rel="external nofollow noopener noreferrer">http://i.imgur.com/y7safc9.png</a>)</p><h3 id="8-unimportant-changes"><a href="#8-unimportant-changes" class="headerlink" title="8. unimportant changes"></a>8. unimportant changes</h3><h4 id="8-1-add-support-of-Chinese"><a href="#8-1-add-support-of-Chinese" class="headerlink" title="8.1 add support of Chinese"></a>8.1 add support of Chinese</h4><ul><li><strong>add extra language in the system</strong></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Go to Settings </span><br><span class="line">-&gt; Region &amp; Languages</span><br><span class="line">    -&gt; manage installed language</span><br><span class="line">        -&gt; if get the message of &#39;installed not complete&#39; then just install</span><br><span class="line">            -&gt; click &#39;Install&#x2F;Remove Languages&#39; </span><br><span class="line">                -&gt; choose Chinese then install (maybe need double-click)</span><br><span class="line">            -&gt; then in &#39;Language for menu and windows&#39; </span><br><span class="line">                -&gt; drag Chinese up to the 1st position</span><br><span class="line">-&gt; now in &#39;Region &amp; Language&#39;, the Language has been changed to Chinese automatically.</span><br></pre></td></tr></table></figure><p>Note: After reboot, System now could be displayed by Chinese.  If you get the message about ‘change public folder names’ like Downloads, Pictures, Videos, then I suggest that let the system keep the old/English name, cause Chinese characters could be hard to use in terminal or code. </p><ul><li><strong>install SogouPinyin</strong></li></ul><p>Note:  Download the package from Browser, <a href="https://pinyin.sogou.com/linux/?r=pinyin" target="_blank" rel="external nofollow noopener noreferrer">Linux_64-bit.deb.</a> Then, just click the deb file and click ‘install’. If you use an old Ubuntu version, just follow <a href="https://pinyin.sogou.com/linux/help.php" target="_blank" rel="external nofollow noopener noreferrer">this page</a>. After that, you also need to reboot the system.</p><ul><li><strong>install fcitx and change the input source to SogouPinyin</strong></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt install fcitx</span><br><span class="line">then, go to Settings</span><br><span class="line">    -&gt; manage  installed language</span><br><span class="line">        -&gt; change the  &#39;Input System&#39;(default is IBus) to fictx</span><br><span class="line">        -&gt; then click  &#39;apply system-wild&#39;</span><br><span class="line">-&gt; Now , you&#39;d better to reboot, then</span><br><span class="line">    -&gt; find &#39;keybord icon&#39; in the task bar (default location is top-right corner)</span><br><span class="line">        -&gt; click &#39;configure current input method&#39;</span><br><span class="line">            -&gt; then you could see SogouPinyin has been there. </span><br><span class="line">                 We can delete that &#39;Wubi&#39; so that we just keep English and Pinyin for us.</span><br><span class="line"> Now we finished all stuff. The default change-key is the single click of &#39;Shift&#39;.</span><br></pre></td></tr></table></figure><p>Note: the above three parts are not the same thing, please set them one by one. And always remember to reboot the system or you maybe can’t see the additions. If you think the panel of SogouPinyin is too small to watch, then you can modify it in its settings.</p><p>With Chinese support, we can then set more slight changes with Tweaks (screenshot: <a href="http://i.imgur.com/l5sLZwZ.png" target="_blank" rel="external nofollow noopener noreferrer">http://i.imgur.com/l5sLZwZ.png</a>).</p><h4 id="8-2-change-screen-resolution"><a href="#8-2-change-screen-resolution" class="headerlink" title="8.2 change screen resolution"></a>8.2 change screen resolution</h4><ul><li>connect high-resolution (second) screen </li><li>make a command set with xrandr of high-resolution configuration, like 2k. There are 3 commands we can put them in *.sh file,  the 3rd line is to use xrandr to set primary monitor and turn off the laptop’s screen. </li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Firstly, we need to get some specific parameters.</span><br><span class="line"></span><br><span class="line">$ cvt 2560 1440</span><br><span class="line">&#x2F;&#x2F;the output here is what we used in xrandr below</span><br><span class="line">$ xrandr -q</span><br><span class="line">&#x2F;&#x2F;check display monitors, we need to make sure the ID of the primary and second screen, here are eDP-1-1(primary) and HDMI-1-2(second). </span><br><span class="line"></span><br><span class="line">(just 3 lines)：</span><br><span class="line"></span><br><span class="line">xrandr --newmode &quot;2560x1440_55.00&quot;  284.00  2560 2744 3016 3472  1440 1443 1448 1489 -hsync +vsync</span><br><span class="line">xrandr --addmode HDMI-1-2 &quot;2560x1440_55.00&quot;</span><br><span class="line">xrandr --output HDMI-1-2 --mode &quot;2560x1440_55.00&quot; --output eDP-1-1 --off</span><br></pre></td></tr></table></figure><ul><li>finally, just find a way to execute the 3 commands, you can run them with ‘sh *.sh’ or let them executed automatically after we login system.</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">quick way :</span><br><span class="line">    -&gt; just put these 3 lines into the end of &#x2F;etc&#x2F;profile,</span><br><span class="line">    -&gt; then, reboot, you could find the monitor was switched by itself.</span><br></pre></td></tr></table></figure><p>Note: the original system doesn’t support higher resolution more than 1080, so we need to add new resolution and trigger the change.</p><h4 id="8-3-add-support-of-Windows-software"><a href="#8-3-add-support-of-Windows-software" class="headerlink" title="8.3 add support of Windows software"></a>8.3 add support of Windows software</h4><p>like tencent qq, or redalert2, or other applications.</p><ul><li>method-1: install wine from Ubuntu-Software, then install windows apps with wine. With this, we could paly redalert2 or chat with windows-qq in ubuntu.</li><li>method-2: install an android simulator, I highly recommend this one (<a href="https://www.linzhuotech.com/index.php/home/index/download.html" target="_blank" rel="external nofollow noopener noreferrer">download link</a>), it’s stable and fast and could give us the same using-experience of the android pad, if you just want to use qq or wechat in ubuntu, you need to try this. (screenshot: <a href="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/Cache_32799f853a0e21fe..jpg" target="_blank" rel="external nofollow noopener noreferrer">https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/Cache_32799f853a0e21fe..jpg</a>)</li></ul><p>Note:  I found a quick way to use the wine qq in Ubuntu, even you DON’T need to install wine. To do this, you need to go to this Github page and download the *.AppImage file from its release. Then, just use two commands to run it. That’s all. this appimage includes a minimum wine inside and you just do nothing, download then use it! </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ chmod a+x TIM-x86_64.AppImage</span><br><span class="line">$ .&#x2F;TIM-x86_64.AppImage.AppImage</span><br></pre></td></tr></table></figure><p>(In my machine, the appimage of QQ can’t work well with some problems about showing characters, so I just use TIM instead.)</p><p>If you want to open it by icons, then you can make a *.desktop file by yourself, then put this file into <code>~/.local/share/applications</code>, after that, you can find your desktop icon in ‘applications’ (search it), right-click and add it to the favorite, then, you will find your own desktop icon appears in the dock.</p><p>Firstly, get qq.png and make your own desktop file (any path is ok, mine is Downloads/)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ wget https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;TianZonglin&#x2F;tuchuang&#x2F;img&#x2F;qq.png</span><br><span class="line">$ vim QQ.desktop</span><br></pre></td></tr></table></figure><p>Secondly, copy the content, save and quit.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[Desktop Entry]</span><br><span class="line">Name&#x3D;QQ</span><br><span class="line">Exec&#x3D;&#x2F;home&#x2F;tzloop&#x2F;Downloads&#x2F;TIM-x86_64.AppImage</span><br><span class="line">Icon&#x3D;&#x2F;home&#x2F;tzloop&#x2F;Downloads&#x2F;qq.png</span><br><span class="line">Type&#x3D;Application</span><br><span class="line">StartupNotify&#x3D;true</span><br></pre></td></tr></table></figure><p>Then, right-click the file, in permission page -&gt; allow it execute as application</p><p>Finally, copy it to your system applications’ folder.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo cp &#x2F;home&#x2F;tzloop&#x2F;Downloads&#x2F;QQ.desktop ~&#x2F;.local&#x2F;share&#x2F;applications</span><br></pre></td></tr></table></figure><h4 id="8-4-some-unessential-changes-with-Tweaks"><a href="#8-4-some-unessential-changes-with-Tweaks" class="headerlink" title="8.4 some unessential changes with Tweaks"></a>8.4 some unessential changes with Tweaks</h4><ul><li>theme -&gt;  Adwaita-dark</li><li>cursor -&gt; Adwaita-default</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">The default font family  (4 items) are :</span><br><span class="line">    Ubuntu&#x2F;11, Ubuntu Regular&#x2F;11, Sans Regular&#x2F;11, Ubuntu Mono Regular&#x2F;13.</span><br><span class="line">then I set 1-3&#39;s font family to Ubuntu Medium with the same font-szie but zoom ratio is 1.3.</span><br></pre></td></tr></table></figure><h4 id="8-5-other-useful-tools-and-settings"><a href="#8-5-other-useful-tools-and-settings" class="headerlink" title="8.5 other useful tools and settings"></a>8.5 other useful tools and settings</h4><h5 id="8-5-1-brightness-control"><a href="#8-5-1-brightness-control" class="headerlink" title="8.5.1 brightness control"></a>8.5.1 brightness control</h5><p>I use RedShift here, other similar software like F.lux is good as well. Using RedShift is simple:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-&gt; install it with &#96;sudo apt-get install redshift-gtk&#96;, gtk means visual version.</span><br><span class="line">-&gt; open location service: Settings -&gt; Privacy -&gt; Location service -&gt; open. (this step is ESSENTIAL)</span><br><span class="line">-&gt; open redshift, if you can&#39;t find the icon, just search it in &#39;applications&#39;.</span><br><span class="line">-&gt; then, brightness will be changed</span><br><span class="line">-&gt; finally, with its menu, you can set it open with your system.</span><br></pre></td></tr></table></figure><h5 id="8-5-2-vscode-preferances"><a href="#8-5-2-vscode-preferances" class="headerlink" title="8.5.2 vscode preferances"></a>8.5.2 vscode preferances</h5><p><strong>@theme</strong></p><p> File -&gt; Preferences -&gt; Color Theme, I’d like to use <code>Tomorrow Night Blue</code>, which is also a kind of dark theme but could also work well in the day time.</p><p><strong>@font</strong></p><p> File -&gt; Preferences -&gt; Settings, then we use ‘search’ (search ‘font’) to locate the items that we need to change, I’d like to set these parameters by JSON format, and the programming stuff settings are as below:</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;terminal.integrated.fontFamily&quot;: &quot;monospace&quot;,</span><br><span class="line">    &quot;editor.fontWeight&quot;: &quot;600&quot;,</span><br><span class="line">    &quot;editor.fontFamily&quot;: &quot;monospace&quot;,</span><br><span class="line">    &quot;editor.fontSize&quot;: 15.5,</span><br><span class="line">    &quot;terminal.integrated.fontSize&quot;: 12,</span><br><span class="line">    &quot;workbench.colorTheme&quot;: &quot;Tomorrow Night Blue&quot;</span><br><span class="line">&#125;</span><br><span class="line">I like this combination, it worked very well in my 2k screen.</span><br></pre></td></tr></table></figure><p>If you want to make the font same with vscode in Windows (specifically, it’s Consolas), then you need to install new fonts manually, you can’t use new fonts if you don’t install them at first.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ wget https:&#x2F;&#x2F;down.gloriousdays.pw&#x2F;Fonts&#x2F;Consolas.zip</span><br><span class="line">$ unzip Consolas.zip</span><br><span class="line">$ sudo mkdir -p &#x2F;usr&#x2F;share&#x2F;fonts&#x2F;consolas</span><br><span class="line">$ sudo cp consola*.ttf &#x2F;usr&#x2F;share&#x2F;fonts&#x2F;consolas&#x2F;</span><br><span class="line">$ sudo chmod 644 &#x2F;usr&#x2F;share&#x2F;fonts&#x2F;consolas&#x2F;consola*.ttf</span><br><span class="line">$ cd &#x2F;usr&#x2F;share&#x2F;fonts&#x2F;consolas</span><br><span class="line">$ sudo mkfontscale &amp;&amp; sudo mkfontdir &amp;&amp; sudo fc-cache -fv</span><br><span class="line">&#x2F;&#x2F;check the installed fonts</span><br><span class="line">$ fc-list</span><br></pre></td></tr></table></figure><p><strong>@terminal’s location</strong></p><p>Just search ‘location’ in settings and change <code>Workbench › Panel: Default Location</code> from bottom to left, because I want to have more vertical space to read long codes while we usually don’t write long sentences/codes in lines, so it has more free horizontal space that we can settle the terminal. </p><p><strong>@files display order in Explorer (left area)</strong></p><p>Just search ‘explorer.sortOrder’ in settings and set it sorted by ‘type’, it’s useful for some make/cmake projects, which has a lot of *.cpp or *.o files, they’re mixed with the default setting, but it should be sorted by type so that we can have a clear group of different files.</p><p>The final view of vscode in my Ubuntu like this: (screenshot: <a href="http://i.imgur.com/g7OehEL.png" target="_blank" rel="external nofollow noopener noreferrer">http://i.imgur.com/g7OehEL.png</a>)</p><h5 id="8-5-3-picgo"><a href="#8-5-3-picgo" class="headerlink" title="8.5.3 picgo"></a>8.5.3 picgo</h5><p>Everytime you want to share or publish your screenshot or othem images, then try to use PicGo. It’s a useful tool that includes many kind of image-bed, the usage of it in Ubuntu is similar to the  wine qq.</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">Firstly, get picgo.png and make your own desktop file (any path is ok, mine is Downloads&#x2F;)</span><br><span class="line"></span><br><span class="line">$ wget https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;TianZonglin&#x2F;tuchuang&#x2F;master&#x2F;img&#x2F;opic.png</span><br><span class="line">$ vim QQ.desktop</span><br><span class="line"></span><br><span class="line">Secondly, copy the content, save and quit.</span><br><span class="line"></span><br><span class="line">[Desktop Entry]</span><br><span class="line">Name&#x3D;PicGO</span><br><span class="line">Exec&#x3D;&#x2F;home&#x2F;tzloop&#x2F;Downloads&#x2F;PicGo.AppImage</span><br><span class="line">Icon&#x3D;&#x2F;home&#x2F;tzloop&#x2F;Downloads&#x2F;opic.png</span><br><span class="line">Type&#x3D;Application</span><br><span class="line">StartupNotify&#x3D;true</span><br><span class="line"></span><br><span class="line">Then, right-click the file, in permission page -&gt; allow it execute as application</span><br><span class="line">Finally, copy it to your system applications&#39; folder.</span><br></pre></td></tr></table></figure><p>If you want to upload images by clipboard, you need to use <code>sudo apt install xclip</code> to install xclip. The quick settings of Github’s image-bed are below.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">repository name -&gt; TianZonglin&#x2F;tuchuang</span><br><span class="line">branch name -&gt; master</span><br><span class="line">token -&gt; get a new one from Github (Settings -&gt; Developer Settings -&gt; Personal access tokens)</span><br><span class="line">storage path -&gt; img&#x2F;</span><br><span class="line">custom domain name -&gt; https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;TianZonglin&#x2F;tuchuang</span><br></pre></td></tr></table></figure><h5 id="8-5-4-install-and-set-git"><a href="#8-5-4-install-and-set-git" class="headerlink" title="8.5.4 install and set git"></a>8.5.4 install and set git</h5><ul><li>install</li><li>set and use with vscode (target: github)</li></ul><h3 id="X-Ubuntu-Using-Tips"><a href="#X-Ubuntu-Using-Tips" class="headerlink" title="X. Ubuntu Using Tips"></a>X. Ubuntu Using Tips</h3><h4 id="X-1-updates"><a href="#X-1-updates" class="headerlink" title="X.1 updates"></a>X.1 updates</h4><p>just delay the update checking (I don’t know how to stop it)! do NOT cancel the ‘update from’, or you would get errors when you install new packages/tools/…<br> (screenshot:<a href="http://i.imgur.com/w7Kvc7X.png" target="_blank" rel="external nofollow noopener noreferrer">http://i.imgur.com/w7Kvc7X.png</a>)</p><h4 id="X-2-when-desktop-crash"><a href="#X-2-when-desktop-crash" class="headerlink" title="X.2 when desktop crash"></a>X.2 when desktop crash</h4><p>like stucking when turning off some windows or stucking after running something for a long time. When this happened, do NOT shut down the system by cut down the power! that’s a dangerous behavior, system core may be ruined by this.</p><p>the right way is: Ctrl+Alt+F2/3/4, log into the tty2/3/4, then restart gdm/lightdm, or rollback the wrong options here if you remember. Or do nothing, just wait for the system rerun again, sometimes it could be reworked after waiting a while.</p><br><fancybox><img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/2020-07-28-22-24-15.png"></fancybox>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;This is a complete installation manual, the purpose is to quickly modify the ubuntu system to a usable state, including several parts such as coding environment and theme modification. This article has hidden images to highlight the text content. You can find the part you are interested in according to the catalog.&lt;/p&gt;
    
    </summary>
    
    
      <category term="研究方向" scheme="https://www.cz5h.com/categories/%E7%A0%94%E7%A9%B6%E6%96%B9%E5%90%91/"/>
    
    
      <category term="Summary" scheme="https://www.cz5h.com/tags/Summary/"/>
    
      <category term="Ubuntu" scheme="https://www.cz5h.com/tags/Ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>修改自定义站点监控页面的样式</title>
    <link href="https://www.cz5h.com/article/cf94.html"/>
    <id>https://www.cz5h.com/article/cf94.html</id>
    <published>2020-07-24T22:00:00.000Z</published>
    <updated>2020-07-28T18:59:11.223Z</updated>
    
    <content type="html"><![CDATA[<fancybox><img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200726001149.png"></fancybox><p>许久之前就开始使用 UptimeRobot 来监控站点的状态了，不过一直是使用默认的方式，即绑定域名后使用官方的默认模板，使用体验还算可以，但令人不爽的是只有最近一周的运行状态，而且感觉状态刷新频率也不高，时值近日 NAS 极不稳定（现在还没弄好），我非常想看看是有多不稳定，但官方的监控页面信息实在不足，因此换用基于官方API的自定义监控页面。</p><a id="more"></a><h3 id="官方默认模板"><a href="#官方默认模板" class="headerlink" title="官方默认模板"></a><strong>官方默认模板</strong></h3><p><strong>示例页面：</strong><a href="/monitor.html">绑定的二级域名</a></p><p><strong>不足之处：</strong></p><ul><li>只有七天状态信息可见</li><li>刷新频率未知（迟滞）</li><li>必须绑定域名，也就意味着无法作为网站内页（之前用iframe硬加进来的，其实监控页面是<a href="https://up.cz5h.com/" target="_blank" rel="external nofollow noopener noreferrer">up.cz5h.com</a>）</li><li>无法自由更改页面内容</li></ul><fancybox><img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200726012510.png"></fancybox><h3 id="自定义模板（原版）"><a href="#自定义模板（原版）" class="headerlink" title="自定义模板（原版）"></a><strong>自定义模板（原版）</strong></h3><p><strong>示例页面：</strong><a href="https://status.org.cn/" target="_blank" rel="external nofollow noopener noreferrer">原项目DEMO页</a></p><p>利用 UptimeRobot 的API开发的监控页面，很好的解决了上述不足：</p><ul><li>其实现方式意味着我们可以随心所欲的安排监控页面出现的位置，网站内页或者嵌入到某页面都是可以实现的；</li><li>其API允许查看90天（据说）的状态信息，简直不要太开心；</li><li>实现方便，只需引入几个文件夹即可；</li></ul><p><strong>搭建步骤：</strong></p><ol><li>申请 UptimeRobot 账号，配置自己的站点并监控，其网站做的很人性化，步骤不再赘述，至此我们在其网站上就可以查看服务/站点的状态了；</li><li>下载自定义模板的代码，<a href="https://github.com/yb/uptime-status/releases" target="_blank" rel="external nofollow noopener noreferrer">Github地址</a>，并将其解压到Hexo文件夹内，具体可以放在 theme -&gt; yourTheme -&gt; source -&gt; folderName文件夹内；</li><li>在 UptimeRobot 官网，通过 MySettings - API Settings -&gt; Monitor-Specific API Keys -&gt; Show/hide 中的搜索框，找到你已创建的监控站点，点击生成 API kEY 并复制;</li><li>将 Key 复制到 config.js 中的对应位置，每个监控任务对应一个 Key，比如你监控了十个站点/服务，那需要十个 Key；</li><li>部署 Hexo，此时访问 yourSite/folderName（例如我的[cz5h.com/up}(<a href="https://www.cz5h.com/up)），就可以看到监控信息了。">https://www.cz5h.com/up)），就可以看到监控信息了。</a></li></ol><p><strong>不足之处：</strong></p><p>样式太丑了，和我博客的风格很不搭，别的都很好，致敬作者。</p><fancybox><img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200726002402.png"></fancybox><h3 id="简单修改后样式"><a href="#简单修改后样式" class="headerlink" title="简单修改后样式"></a><strong>简单修改后样式</strong></h3><p><strong>示例页面：</strong><a href="https://www.cz5h.com/up">本站内页</a></p><p>修改过程非常简单，直接将以下CSS代码写入 index.html 中即可。注意几点：</p><ul><li>原页面有 footer 信息，这里直接用JS隐藏掉，之后你可以再覆写 footer，这样即使不修改源码也可以快速得到相要的样式；</li><li>样式名称还是很规范的，利用F12检查元素可以很快就完成修改；</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">script</span>&gt;</span><br><span class="line">    document.getElementById('footer').style.display = 'none';// 隐藏选择的元素</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;<span class="selector-tag">style</span>&gt;</span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#010012</span>;</span><br><span class="line">    <span class="attribute">background-image</span>: <span class="built_in">linear-gradient</span>(#<span class="number">010012</span>, #<span class="number">111</span>f4c, #<span class="number">010012</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#header</span> <span class="selector-class">.navi</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">15px</span>;</span><br><span class="line">    <span class="attribute">font-weight</span>: <span class="number">600</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#uptime</span> <span class="selector-class">.timeline</span> <span class="selector-tag">i</span><span class="selector-class">.ok</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#2195f3bb</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#uptime</span> <span class="selector-class">.timeline</span> <span class="selector-tag">i</span><span class="selector-class">.down</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#f34539bb</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#uptime</span> <span class="selector-class">.timeline</span> <span class="selector-tag">i</span><span class="selector-class">.none</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#2196f326</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#uptime</span> <span class="selector-class">.meta</span> <span class="selector-class">.status</span><span class="selector-class">.down</span> &#123;</span><br><span class="line">    <span class="attribute">background-image</span>: <span class="built_in">url</span>();</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#f34539bb</span>;</span><br><span class="line">    <span class="attribute">font-weight</span>: <span class="number">600</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#uptime</span> <span class="selector-class">.timeline</span> <span class="selector-tag">i</span> &#123;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#uptime</span> <span class="selector-class">.meta</span> <span class="selector-class">.status</span><span class="selector-class">.ok</span> &#123;</span><br><span class="line">    <span class="attribute">background-image</span>: <span class="built_in">url</span>();</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#2195f3bb</span>;</span><br><span class="line">    <span class="attribute">font-weight</span>: <span class="number">600</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#uptime</span> <span class="selector-class">.meta</span> <span class="selector-class">.name</span> &#123;</span><br><span class="line">    <span class="attribute">font-weight</span>: <span class="number">600</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#uptime</span> <span class="selector-class">.foot</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#757a80</span>;</span><br><span class="line">    <span class="attribute">font-weight</span>: <span class="number">600</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#uptime</span> <span class="selector-class">.timeline</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">55px</span>;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">justify-content</span>: space-between;</span><br><span class="line">    <span class="attribute">margin-bottom</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#footer</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#999fa6</span>;</span><br><span class="line">    <span class="attribute">font-weight</span>: <span class="number">700</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#header</span> <span class="selector-class">.logo</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">18px</span>;</span><br><span class="line">    <span class="attribute">font-weight</span>: <span class="number">700</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#2195f3</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#uptime</span> <span class="selector-class">.item</span> &#123;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">18px</span> <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="number">#c5def6</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#uptime</span> &#123;</span><br><span class="line"> </span><br><span class="line">    <span class="attribute">border</span>: <span class="number">0px</span> solid <span class="number">#e3e4e6</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#uptime</span> <span class="selector-class">.item</span> &#123;</span><br><span class="line">     </span><br><span class="line">    <span class="attribute">border-bottom</span>: <span class="number">15px</span> solid <span class="number">#060923</span>;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p><strong>最终效果：</strong></p><fancybox><img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200726002233.png"></fancybox>]]></content>
    
    <summary type="html">
    
      &lt;fancybox&gt;
&lt;img src=&quot;https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200726001149.png&quot;&gt;
&lt;/fancybox&gt;

&lt;p&gt;许久之前就开始使用 UptimeRobot 来监控站点的状态了，不过一直是使用默认的方式，即绑定域名后使用官方的默认模板，使用体验还算可以，但令人不爽的是只有最近一周的运行状态，而且感觉状态刷新频率也不高，时值近日 NAS 极不稳定（现在还没弄好），我非常想看看是有多不稳定，但官方的监控页面信息实在不足，因此换用基于官方API的自定义监控页面。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Hexo相关" scheme="https://www.cz5h.com/categories/Hexo%E7%9B%B8%E5%85%B3/"/>
    
    
      <category term="Hexo" scheme="https://www.cz5h.com/tags/Hexo/"/>
    
      <category term="UptimeRobot" scheme="https://www.cz5h.com/tags/UptimeRobot/"/>
    
      <category term="CSS" scheme="https://www.cz5h.com/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>快速重置乌班图和GL开发环境</title>
    <link href="https://www.cz5h.com/article/483a.html"/>
    <id>https://www.cz5h.com/article/483a.html</id>
    <published>2020-07-22T22:00:00.000Z</published>
    <updated>2020-07-24T12:11:41.583Z</updated>
    
    <content type="html"><![CDATA[<fancybox><img src="http://i.imgur.com/oTrlDQ9.png"></fancybox><p>在经历过一次死机强制关机后，我的Nvidia显卡就无法在Ubuntu正常工作了，为此我重装了大约二十次显卡驱动，禁用nouveau或者修改grub等等方法组合拳一一尝试过后均以失败告终，我一度以为我的显卡烧了！但，转念一想，果断重装系统，并且这次详细记录了重装及配置GL开发环境的全部过程，此文在手，只要代码和数据不丢，系统和环境分分钟就装回来，再重装一百次也不怕！！</p><a id="more"></a><br><p><strong>全文已开源在Github持续更新，</strong><a href="https://github.com/TianZonglin/Ubuntu-Installog" target="_blank" rel="external nofollow noopener noreferrer"><strong>英文版传送门</strong></a> </p><h3 id="Ubuntu安装的完整步骤-GL-CUDA环境"><a href="#Ubuntu安装的完整步骤-GL-CUDA环境" class="headerlink" title="Ubuntu安装的完整步骤(GL/CUDA环境)"></a><strong>Ubuntu安装的完整步骤(GL/CUDA环境)</strong></h3><h4 id="A-笔记本配置"><a href="#A-笔记本配置" class="headerlink" title="A. 笔记本配置"></a><strong>A. 笔记本配置</strong></h4><ul><li>MSI GE62 490，Nvidia Gefore 960M 显卡</li><li>Intel i7-6700HQ 带核显</li><li>单系统(ubuntu)</li></ul><h4 id="B-安装系统"><a href="#B-安装系统" class="headerlink" title="B. 安装系统"></a><strong>B. 安装系统</strong></h4><ol><li><p><strong>准备USB启动盘(自备)</strong><br>注意：官方ISO(<a href="https://releases.ubuntu.com/18.04/ubuntu-18.04.4-desktop-amd64.iso" target="_blank" rel="external nofollow noopener noreferrer">ubuntu-18.04.4-desktop-amd64.iso</a>)</p></li><li><p><strong>关闭BIOS中的“安全启动”</strong></p></li><li><p><strong>按标准安装过程进行安装</strong><br>注意：如果可以顺利安装，请勿设置grub(例如nomodeset)。至此，我们已经可以登录到新的Ubuntu系统(现在使用的是核显和相关驱动)</p></li><li><p><strong>同意第一次进入系统后的Update更新要求</strong><br>注意：初次进入Ubunutu时，可能会弹出更新信息，请务必同意。原则是：同意在安装过程中弹出的所有更新，但是在获得稳定而完整的系统和开发环境之后，记得去软件中心将更新选项更改为推迟，尽量减少弹出更新的频次，即使弹出也不要更新。尽量使系统保持不变，否则，新更新的内容和旧驱动程序之间可能会发生一些冲突。</p></li><li><p><strong>重启</strong></p></li></ol><h4 id="C-安装nvidia驱动程序"><a href="#C-安装nvidia驱动程序" class="headerlink" title="C. 安装nvidia驱动程序"></a><strong>C. 安装nvidia驱动程序</strong></h4><ol><li><strong>添加源，然后我们才可以刷新出可安装的驱动</strong></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ sudo add-apt-repository ppa:graphics-drivers&#x2F;ppa</span><br><span class="line">$ sudo apt-get update</span><br><span class="line">$ sudo ubuntu-drivers device</span><br><span class="line">注意：这里会显示系统推荐安装的驱动版本！</span><br></pre></td></tr></table></figure><ol start="2"><li><strong>在APP(软件和更新)中安装驱动程序</strong></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">软件和更新-&gt;</span><br><span class="line">    附加驱动程序-&gt;</span><br><span class="line">        选择推荐版本-&gt;</span><br><span class="line">            应用（Apply）</span><br></pre></td></tr></table></figure><ol start="3"><li><p><strong>重启</strong></p></li><li><p><strong>请勿设置禁用nouveau的黑名单或设置grub的启动项</strong><br>注意：如果我们使用这种方式安装显卡驱动，则所有内容都可以由系统自动处理，我们什么也不做即可！</p></li></ol><p>现在，Nvidia驱动程序的安装完成。你可以使用 <code>nvidia-smi</code>来测试它是否正常或查看设置里能否识别出当前的Nvidia显卡。 </p><p><fancybox><img src="http://i.imgur.com/Euj6tQy.png"></fancybox></p><h4 id="D-安装cuda-toolkit"><a href="#D-安装cuda-toolkit" class="headerlink" title="D. 安装cuda-toolkit"></a><strong>D. 安装cuda-toolkit</strong></h4><ol><li><p><strong>选择cuda-10_*或其他版本(此处我选择10.0)</strong><br><fancybox><img src="http://i.imgur.com/6xPtxju.png"></fancybox></p></li><li><p><strong>执行</strong></p></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo chmod 777 cuda-10_\*.run</span><br><span class="line">$ sudo sh cuda-10_\*.run</span><br></pre></td></tr></table></figure><ol start="3"><li><strong>在此过程中</strong><br>注意：我们已经自行安装了驱动程序，因此这里输入NO。</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Install NVIDIA Accelerated Graphics Driver for Linux-x86_64 410.48?</span><br><span class="line">(y)es&#x2F;(n)o&#x2F;(q)uit: n</span><br></pre></td></tr></table></figure><ol start="4"><li><strong>测试Samples</strong></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ cd&#x2F;usr&#x2F;local&#x2F;cuda&#x2F;samples</span><br><span class="line">$ make</span><br><span class="line">  (大约10分钟后)</span><br><span class="line">$ cd&#x2F;usr&#x2F;local&#x2F;cuda&#x2F;samples&#x2F;bin&#x2F;x86_64&#x2F;linux&#x2F;release</span><br><span class="line">$ .&#x2F;deviceQuery</span><br></pre></td></tr></table></figure><p><fancybox><img src="http://i.imgur.com/jJ7vpNw.png"></fancybox></p><ol start="5"><li><strong>额外的重要配置</strong><br>注意：在/etc/profile中添加两个环境变量，如果没有添加这些变量，也许你的程序运行时会出错：libcudart.so.10.0: cannot open shared object file: No such file or directory</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">export PATH &#x3D;&#x2F;usr&#x2F;local&#x2F;cuda&#x2F;bin:$PATH</span><br><span class="line">export LD_LIBRARY_PATH &#x3D;&#x2F;usr&#x2F;local&#x2F;lib:&#x2F;usr&#x2F;local&#x2F;cuda&#x2F;lib64&#x2F;</span><br></pre></td></tr></table></figure><p>现在cuda安装完成，实际上通过Samples的测试，我们还可以得到GPU驱动程序运行良好的结论。</p><h4 id="E-安装GL的依赖库"><a href="#E-安装GL的依赖库" class="headerlink" title="E. 安装GL的依赖库"></a><strong>E. 安装GL的依赖库</strong></h4><ol><li><p><strong>对于GL/gl.h：</strong><br>sudo apt安装mesa-common-dev</p></li><li><p><strong>GL/glu.h：</strong><br>sudo apt安装libglu1-mesa-dev freeglut3-dev</p></li><li><p><strong>其他：</strong><br>libglfw3-dev libgles2-mesa-dev libglew-dev</p></li><li><p><strong>汇总在一起：</strong><br>注意：它们都是GL所必需的，也许你需要安装更多的库，这取决于你的代码。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt install mesa-common-dev freeglut3-dev libglfw3-dev libgles2-mesa-dev libglew-dev</span><br></pre></td></tr></table></figure></li></ol><h4 id="F-安装项目的东西"><a href="#F-安装项目的东西" class="headerlink" title="F. 安装项目的东西"></a><strong>F. 安装项目的东西</strong></h4><p>1.安装基础工具</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt install vim</span><br><span class="line">$ sudo apt install cmake</span><br></pre></td></tr></table></figure><p>2.重建项目</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ cd ProjectionExplain&#x2F;LIBRARY&#x2F;glui-master</span><br><span class="line">$ rm CMakeCache.txt</span><br><span class="line">$ make clean</span><br><span class="line">$ mkdir build &amp;&amp; cd build</span><br><span class="line">$ cmake ..</span><br><span class="line">$ make install</span><br><span class="line">$ cd ProjectionExplain&#x2F;</span><br><span class="line">$ make clean &amp;&amp; make</span><br><span class="line">$ .&#x2F;projwiz -f DATA&#x2F;segmentation lamp</span><br></pre></td></tr></table></figure><p>至此，关于GL项目的所有配置和测试都已完成！</p><p><fancybox><img src="http://i.imgur.com/rDCtEId.png"></fancybox></p><h4 id="G-安装个人软件"><a href="#G-安装个人软件" class="headerlink" title="G. 安装个人软件"></a><strong>G. 安装个人软件</strong></h4><ul><li><p><strong>屏幕截图：flameshot</strong><br>使用 <code>sudo apt-get install flameshot</code> 安装<br>设置快捷键<br><fancybox><img src="http://i.imgur.com/id2PPYj.png"></fancybox></p></li><li><p><strong>vscode</strong></p><ul><li>直接在APP(Ubuntu Software)中安装。<br><fancybox><img src="http://i.imgur.com/W971ERc.png"></fancybox></li><li>然后，我们可以使用vsc来编写代码啦<ul><li>打开文件夹(ProjectionExplain)</li><li>终端-&gt;new终端-&gt; make &amp;&amp; ./projwiz -f DATA/segmentation lamp</li></ul></li></ul></li></ul><h4 id="H-通过Tweaks调整主题"><a href="#H-通过Tweaks调整主题" class="headerlink" title="H. 通过Tweaks调整主题"></a><strong>H. 通过Tweaks调整主题</strong></h4><ol><li><strong>安装Tweaks及其扩展</strong></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt install gnome-shell-extensions gnome-shell-extension-dash-to-panel gnome-tweaks adwaita-icon-theme-full</span><br></pre></td></tr></table></figure><ol start="2"><li><strong>注销系统或重启</strong></li><li><strong>配置面板样式</strong></li></ol><p>扩展：dash to panel<br>注意：右键单击，可以唤醒面板设置窗口，并且可以在此处进行一些细微更改。<br><fancybox><img src="https://i.imgur.com/OKrQ67r.png"></fancybox></p><ol start="4"><li><strong>配置菜单样式</strong></li></ol><p>扩展：applications menu<br>注意：打开此扩展会添加像Windows的开始菜单一样的程序管理器。在此，我只通过Tweaks更改了菜单栏位置及其应用程序的边距，并隐藏了原来的启动按钮，用仿windows的菜单替换之。</p><ol start="5"><li><strong>更换壁纸</strong></li></ol><p>到现在为止，基本主题设置已经完成，并且样式与我的Windows桌面非常相似（除了图标）。</p><p><fancybox><img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/fjdsuiohoviwe23424.png"></fancybox></p><h4 id="I-非必要的修改"><a href="#I-非必要的修改" class="headerlink" title="I. 非必要的修改"></a><strong>I. 非必要的修改</strong></h4><ol><li><strong>添加中文支持</strong></li></ol><ul><li>在系统中添加中文语言包</li><li>安装搜狗拼音</li></ul><ol start="2"><li><strong>修改副屏输出分辨率</strong></li></ol><ul><li>连接高分辨率屏幕（不连接高分屏无需此配置）</li><li>创建一个sh文件，使用xrandr新建高分辨率方案</li><li>登录系统后执行sh<br>注意：原始系统不支持高于1080的更高解决方案，因此我们需要添加新解决方案并触发更改，最好不要将其纳入启动配置，因为这可能会导致在初始屏幕上显示不高时导致崩溃解决方案显示屏。</li></ul><p>获取分辨率方案（准备工作）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ cvt 2560 1440</span><br><span class="line">&#x2F;&#x2F;此处输出结果就是sh中的第一行</span><br><span class="line">$ xrandr -q</span><br><span class="line">&#x2F;&#x2F;查看现有连接设备，例如 HDMI-1-2，这个就是sh中第二三行中间的设备名称</span><br></pre></td></tr></table></figure><p>resolution.sh内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">xrandr --newmode &quot;2560x1440_55.00&quot;  284.00  2560 2744 3016 3472  1440 1443 1448 1489 -hsync +vsync</span><br><span class="line">xrandr --addmode HDMI-1-2 &quot;2560x1440_55.00&quot;</span><br><span class="line">xrandr --output HDMI-1-2 --mode &quot;2560x1440_55.00&quot;</span><br></pre></td></tr></table></figure><ol start="3"><li><strong>添加对特定软件的支持</strong><br>如腾讯QQ，红色警戒2或其他应用程序。</li></ol><ul><li><p><strong>方法1：</strong>从Ubuntu软件中心安装wine，然后使用wine安装Windows应用程序。这样，我们就可以在Ubuntu玩红警或在Ubuntu中用QQ聊天。</p></li><li><p><strong>方法2：</strong>安装一个Android模拟器，我强烈推荐麟卓（<a href="https://www.linzhuotech.com/index.php/home/index/download.html" target="_blank" rel="external nofollow noopener noreferrer">下载链接</a>），其稳定且快速，可以为我们提供相当于安卓平板的使用体验，如果你只想在Ubuntu中使用qq或微信，那么可以试试这个。</p><p><fancybox><img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/Cache_32799f853a0e21fe..jpg"></fancybox></p></li></ul><h4 id="X-Ubuntu使用技巧"><a href="#X-Ubuntu使用技巧" class="headerlink" title="X. Ubuntu使用技巧"></a><strong>X. Ubuntu使用技巧</strong></h4><ul><li><p><strong>更新</strong><br>要做的只是延迟更新(如果有办法关掉最好了)！不要取消“update from”，否则在安装新的软件包/工具时会出现错误。<br><fancybox><img src="http://i.imgur.com/w7Kvc7X.png"></fancybox></p></li><li><p><strong>桌面崩溃/死机时</strong><br>例如关闭一些窗口时卡住或长时间运行某些东西后卡住。发生这种情况时，请勿通过切断电源来关闭系统！这是一种危险的行为，系统核心可能因此而遭到损坏。<br><strong>正确的方法是：</strong>Ctrl+Alt+F2/3/4，登录到tty2/3/4，然后重新启动gdm/lightdm，或者如果记得先前的误操作的话，可以在此处回滚导致出错的命令。或者干脆什么也不做，等系统自己响应，有时可能需要等好一会儿才能重新进入正常状态。</p></li></ul><br><p><strong>全文已开源在Github持续更新，</strong><a href="https://github.com/TianZonglin/Ubuntu-Installog" target="_blank" rel="external nofollow noopener noreferrer"><strong>英文版传送门</strong></a> </p>]]></content>
    
    <summary type="html">
    
      &lt;fancybox&gt;
&lt;img src=&quot;http://i.imgur.com/oTrlDQ9.png&quot;&gt;
&lt;/fancybox&gt;

&lt;p&gt;在经历过一次死机强制关机后，我的Nvidia显卡就无法在Ubuntu正常工作了，为此我重装了大约二十次显卡驱动，禁用nouveau或者修改grub等等方法组合拳一一尝试过后均以失败告终，我一度以为我的显卡烧了！但，转念一想，果断重装系统，并且这次详细记录了重装及配置GL开发环境的全部过程，此文在手，只要代码和数据不丢，系统和环境分分钟就装回来，再重装一百次也不怕！！&lt;/p&gt;
    
    </summary>
    
    
      <category term="研究方向" scheme="https://www.cz5h.com/categories/%E7%A0%94%E7%A9%B6%E6%96%B9%E5%90%91/"/>
    
    
      <category term="Ubuntu" scheme="https://www.cz5h.com/tags/Ubuntu/"/>
    
      <category term="显卡" scheme="https://www.cz5h.com/tags/%E6%98%BE%E5%8D%A1/"/>
    
      <category term="CUDA" scheme="https://www.cz5h.com/tags/CUDA/"/>
    
  </entry>
  
  <entry>
    <title>十分钟搭建自己的Q&amp;A问答社区</title>
    <link href="https://www.cz5h.com/article/614d.html"/>
    <id>https://www.cz5h.com/article/614d.html</id>
    <published>2020-06-27T22:00:00.000Z</published>
    <updated>2020-06-27T22:04:09.405Z</updated>
    
    <content type="html"><![CDATA[<p>开源问答社区一直是一种社区形式，而且已经形成了诸如 Stack Overflow 和国内 SegmentFault 等一众问答社区。这些问答型社区的初衷都是旨在围绕特定的主题（编程）来对相关知识进行发问和探讨，区别于 Quarta 和知乎这类问答，其目标更明确，答案更清晰，整体上更像一个特定的知识库，通过问题来了解某一特定领域我认为也是个不错的选择。那么现在，围绕前段时间的CSC申请，在专栏已经积累了大量问答的材料，已经有必要专为其构建一个清晰、可用的问答自主系统了，<strong>Question2Answer</strong> 无疑对此非常合适！</p><a id="more"></a><fancybox><img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200627232744.png"></fancybox><p>注意：类似的框架/网站，还有不少，选择 Q2A 的主要原因还是因为它的易用性，搭建下来确实是非常的简单。</p><h3 id="安装教程"><a href="#安装教程" class="headerlink" title="安装教程"></a><strong>安装教程</strong></h3><p>安装 Question2Answer 系统是非常非常简单（dead easy）的，官方教程比较啰嗦，这里直接总结干货。</p><h4 id="环境需求"><a href="#环境需求" class="headerlink" title="环境需求"></a><strong>环境需求</strong></h4><p>首先选择自己的 Server，这里直接以 Apache 为例；然后还需要 PHP 和 Mysql，相关的软件环境版本的要求如下。更具体来说，直接安装 phpstudy（6.5以上版本均可）就完事儿了，全都是符合要求的。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Apache or Nginx 无版本要求</span><br><span class="line">PHP &gt;&#x3D; 5.2 需要带MySQLi扩展（默认不用管）</span><br><span class="line">MySQL &gt;&#x3D; 5.x</span><br></pre></td></tr></table></figure><p>安装完 phpstudy 后，启动 Apache+Mysql，然后用其自带的 mysql-front 工具打开数据库，创建一个数据库，或者选择一个默认的数据库也可以，设置用户名密码（如果你需要密码），到此基本就完成配置了，后面需要给其提供数据库地址（localhost）、登录用户名、登录密码、数据库名称，即可。</p><h4 id="下载Q2A文件"><a href="#下载Q2A文件" class="headerlink" title="下载Q2A文件"></a><strong>下载Q2A文件</strong></h4><p>首先，去其Github的release下载最新版本，<a href>点击前往</a>。下载之后，将这个压缩包解压，然后全部放入 Apache 的网站根目录（WWW目录）。注意，在此处需要修改两个文件，<code>qa-config-example.php</code> 和 <code>.htaccess-example</code>，分别修改成 <code>qa-config.php</code> 和 <code>.htaccess</code>，对于后着可能会出现无法修改文件名的问题，自己想办法吧哈。（至此就能访问了，但我们还要引入一个中文包）</p><fancybox><img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200627230727.png"></fancybox><p>然后，在 <a href="https://github.com/yinhongbo/q2a-lang-cn/archive/master.zip" target="_blank" rel="external nofollow noopener noreferrer">这里</a> 下载其中文语言包。将解压出的语言文件（就一个zh文件夹），放入 WWW 目录下的 qa-lang 文件夹，和初始的英语语言文件夹并列。到此就结束了，后面在网页上可以自动识别并加载语言包。</p><fancybox><img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200627230841.png"></fancybox><p>最后，打开浏览器，访问 localhost:80 可以看到一个初始页面，上面有个 <code>很长的按钮</code>（初始化的按钮），点击一下稍作配置（设置超级管理员、语言）即可进入 Q2A 系统。</p><h4 id="修改系统的配置项"><a href="#修改系统的配置项" class="headerlink" title="修改系统的配置项"></a><strong>修改系统的配置项</strong></h4><p>初始系统的主题叫 SnowFlat，样子还是不错的，整体的论坛功能分区也很简单，所有的操作都集中在顶栏，点击其中的管理，进入配置页面，在此页面的内页顶栏又分了许多子项（大概十几项）。没必要每个都拿出胡来说一遍，如果你正确的配置了中文环境，</p><p>那么其实每一页的功能就很明了了，你需要做的就是阅读每一页，并且尝试修改这些功能，然后查看效果（都是修改提交后即可生效的）。</p><p>在我这段时间的使用过程中，觉得主要的修改集中在以下几个方面：</p><ul><li>普通：主体配置。</li><li>布局：修改各位置的html内容。</li><li>列表：关于显示条数。</li><li>权限：关于提问或者回答问题。</li><li>页面：关于导航栏的显示。</li><li>插件：开启标签云、快速提问等。</li></ul><p>再次强调，都是很简单的配置项，基本上自己尝试一遍就可以迅速的把相关内容修改到理想的状态了，多试试就OK啦。</p><h3 id="最终效果"><a href="#最终效果" class="headerlink" title="最终效果"></a><strong>最终效果</strong></h3><p>演示地址：<a href="http://asus.myds.me:7000/" target="_blank" rel="external nofollow noopener noreferrer">点击前往</a></p><fancybox><img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200627234122.png"></fancybox>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;开源问答社区一直是一种社区形式，而且已经形成了诸如 Stack Overflow 和国内 SegmentFault 等一众问答社区。这些问答型社区的初衷都是旨在围绕特定的主题（编程）来对相关知识进行发问和探讨，区别于 Quarta 和知乎这类问答，其目标更明确，答案更清晰，整体上更像一个特定的知识库，通过问题来了解某一特定领域我认为也是个不错的选择。那么现在，围绕前段时间的CSC申请，在专栏已经积累了大量问答的材料，已经有必要专为其构建一个清晰、可用的问答自主系统了，&lt;strong&gt;Question2Answer&lt;/strong&gt; 无疑对此非常合适！&lt;/p&gt;
    
    </summary>
    
    
      <category term="建站组网" scheme="https://www.cz5h.com/categories/%E5%BB%BA%E7%AB%99%E7%BB%84%E7%BD%91/"/>
    
    
      <category term="总结" scheme="https://www.cz5h.com/tags/%E6%80%BB%E7%BB%93/"/>
    
      <category term="建站" scheme="https://www.cz5h.com/tags/%E5%BB%BA%E7%AB%99/"/>
    
      <category term="教程" scheme="https://www.cz5h.com/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>体验1Gbps的上下行对等网络</title>
    <link href="https://www.cz5h.com/article/cbd8.html"/>
    <id>https://www.cz5h.com/article/cbd8.html</id>
    <published>2020-06-25T22:00:00.000Z</published>
    <updated>2020-06-26T22:20:37.557Z</updated>
    
    <content type="html"><![CDATA[<fancybox><img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200627002026.png"></fancybox><p>由于新冠疫情的消退，关闭了许久的校园终于开始逐步开放，又坐回熟悉的位子，打开熟悉的电脑，一顿操作后一切如旧。也许是我心血来潮，毫无征兆的就想测一下网速，不测不知道，一测吓一跳，阔别了几个月的网络，今天一测居然达到了<strong>1Gbps（1000Mbps）</strong>，而且还是上下行对等！瞬间惊掉了我的下巴…在此简单记录一下初次开车上高速的心情。</p><a id="more"></a><h3 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h3><p>曾几何时，百兆光纤还是写在网吧门口的标语，作为重大卖点吸引顾客。而现在，百兆（100Mbps）网络早已飞入寻常百姓家，据我所知，下到城镇上至城市，200M光纤、500M光纤已成为大家的普遍选择。需要注意的是，这里的百兆，通通指的是下行带宽，对于上行带宽，不论国内还是国外，通常只有下行的十分之一，上下行对等网络由于费用问题，一般难以推广。随着5G时代的到来，越来越多的国内运营商开始吹捧1Gbps的超大网络带宽，但以目前能检索到的资讯来看，即便是目前试行的标称1Gbps的网络，速度往往也只有600-800Mbps，水分还是存在的。</p><p>那么，我们学校现在的网络到底是怎么回事儿呢？从原来的中等生一跃成为尖子生，到底发生了什么，我也不知道，<strong>或许是整合了华为的5G？</strong>这谁又知道呢。</p><h3 id="1Gbps初体验"><a href="#1Gbps初体验" class="headerlink" title="1Gbps初体验"></a>1Gbps初体验</h3><p>话不多说了，开车，看一下风景！</p><h4 id="一般的网络资源下载"><a href="#一般的网络资源下载" class="headerlink" title="一般的网络资源下载"></a>一般的网络资源下载</h4><p>如我所预料，看到这个<strong>106M/s</strong>的下载速度，心简直要飞出来了，活这么大还没体验过这下载速度噢。。这瞬间让我有点期待5G的来临了，虽然我不知道这个速度是不是5G来的。。</p><fancybox><img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200626234707.png"></fancybox><h4 id="YouTube-8K-60FPS"><a href="#YouTube-8K-60FPS" class="headerlink" title="YouTube 8K 60FPS"></a>YouTube 8K 60FPS</h4><p>连接速度居然达到了惊人的<strong>41万kbps</strong>，要知道普通的海外百兆（100）带宽的连接速度也只有十几万，国内翻Q发烧友们看YouTube的发烧水准也只停留在20万，因为二十万左右8K视频就可以流畅（Buffer Health，超前缓冲）观看了。私以为这个速度还可以更快更恐怖，只不过我找不到合适的测试视频了，汗颜。</p><fancybox><img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/W@N48_G1TCV}ZKP}R({@B77.png"></fancybox><h4 id="更新LOL客户端"><a href="#更新LOL客户端" class="headerlink" title="更新LOL客户端"></a>更新LOL客户端</h4><p>几个月没有打开的LOL，打开之后没注意的功夫，已经进入主界面了，真的是一种毫无迟滞感的体验。</p><fancybox><img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/3AHBL}79)7PE0RZP9_5Y4`V.png"></fancybox><h3 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h3><p>不得不说，网络速度是这个网络时代影响人们体验网络的最最重要的因素之一，通过我的使用经历，我只能说网速的提升确实可以给我带来不一样的体验：</p><ul><li>想到、找到，即可以下载到；</li><li>想到、上传，即可以云端看到。</li></ul><p>这是从百兆到千兆的跳跃，也是改变人们网络使用习惯的一个转折，或许在可预见的未来，网速已失去其标量意义，超大带宽让人们忽略传输时间，那种生活的方方面面或许我们还不能够想象，但可以肯定的是，它正在向我们走来。</p>]]></content>
    
    <summary type="html">
    
      &lt;fancybox&gt;
&lt;img src=&quot;https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200627002026.png&quot;&gt;
&lt;/fancybox&gt;

&lt;p&gt;由于新冠疫情的消退，关闭了许久的校园终于开始逐步开放，又坐回熟悉的位子，打开熟悉的电脑，一顿操作后一切如旧。也许是我心血来潮，毫无征兆的就想测一下网速，不测不知道，一测吓一跳，阔别了几个月的网络，今天一测居然达到了&lt;strong&gt;1Gbps（1000Mbps）&lt;/strong&gt;，而且还是上下行对等！瞬间惊掉了我的下巴…在此简单记录一下初次开车上高速的心情。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Daily_Life" scheme="https://www.cz5h.com/categories/Daily-Life/"/>
    
    
      <category term="联网" scheme="https://www.cz5h.com/tags/%E8%81%94%E7%BD%91/"/>
    
      <category term="初体验" scheme="https://www.cz5h.com/tags/%E5%88%9D%E4%BD%93%E9%AA%8C/"/>
    
  </entry>
  
  <entry>
    <title>将群晖相册嵌入到Hexo博客中</title>
    <link href="https://www.cz5h.com/article/1c44.html"/>
    <id>https://www.cz5h.com/article/1c44.html</id>
    <published>2020-06-20T22:00:00.000Z</published>
    <updated>2020-08-01T07:39:13.861Z</updated>
    
    <content type="html"><![CDATA[<p>如何高效便捷的在博客中更新自己的动态是困扰很多人的问题，简单的方案就是另起炉灶在博客重新发布一份，但这种方法耗时耗力，因此不建议这样做。从原po平台同步到博客的某个位置应该是最理想的解决方案。对于照片来说，群晖的相册给我提供了一个来源库，那么如果我想让访客浏览我的近照，那么如何把照片从群晖相册同步到博客中就成了实现这一想法的核心问题。</p><a id="more"></a><br> <style>    iframe{        pointer-events: none;    }</style>  <script type="text/javascript">    function changeFrameHeight(){      var iframe= document.getElementById("myiframe");      var wid = document.getElementById('father').clientWidth;      if (wid>900) iframe.height = wid/2.19;      else if (wid>551) iframe.height = wid/2.21;      else if (wid>470) iframe.height = wid/2.165;      else iframe.height = wid/2.26;    }    function changeFrameHeight2(){      var iframe= document.getElementById("myiframe2");      var wid = document.getElementById('father').clientWidth;      if (wid>900) iframe.height = wid/1.59;      else if (wid>551) iframe.height = wid/2.01;      else if (wid>470) iframe.height = wid/1.965;      else iframe.height = wid/2.06;    }    window.οnresize=function(){      changeFrameHeight();      changeFrameHeight2();    }  </script><div style="background-color: rgb(0, 0, 0);padding-top: 7px;" id="father"><iframe width="100%" id="myiframe" frameborder="0" onload="changeFrameHeight()" src="https://nas.cz5h.com:5443/photo/embed/embed.html?album=album_5745425f414c42554d&autoplay=1&lightbox=1" photostation></iframe><!--<iframe width="100%" id="myiframe2" frameborder="0" onload="changeFrameHeight2()" src="https://nas.cz5h.com:5443/photo/embed/embed.html?album=album_e5a381e7bab8&autoplay=1" photostation></iframe>--></div><br><p><strong>拍摄设备：</strong>HUAWEI P30<br><strong>同步来源：</strong>群晖 <a href="https://nas.cz5h.com:5443/photo/#!Albums/album_5745425f414c42554d" target="_blank" rel="external nofollow noopener noreferrer">PhotoStation Album</a><br><strong>扩展详情：</strong>关于如何放置在主页，详见 <a href="/links/logs.html">更新日志</a></p><h3 id="实现思路"><a href="#实现思路" class="headerlink" title="实现思路"></a>实现思路</h3><p>可以查证的、群晖官方提供的嵌入相册的方法，主要就是使用<code>iframe</code>进行嵌入。注意这里说的群晖相册，特指 <strong>Photo Station</strong>，而不是Moments等套件、在使用 Photo Station 的过程中，比较好的地方在于照片的地图模式、缩略图加载速度以及丰富的配置设置项。Moments我没有用过，但由于其关联套件太多，所以不在我的考虑范围之内，要知道我是个连Drive都不用的群晖用户。</p><p>采用<code>iframe</code>嵌入的另一个好处是，异步加载，基本对原站加载速度没什么影响。</p><h3 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h3><h4 id="iframe的大小自适应"><a href="#iframe的大小自适应" class="headerlink" title="iframe的大小自适应"></a>iframe的大小自适应</h4><p>这是个老生常谈的问题，但其实每次遇到其详细情况又都不尽相同，这里使用日常解决方案：JS控制。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">changeFrameHeight</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> iframe= <span class="built_in">document</span>.getElementById(<span class="string">"myiframe"</span>);</span><br><span class="line">    <span class="keyword">var</span> wid = <span class="built_in">document</span>.getElementById(<span class="string">'father'</span>).clientWidth;</span><br><span class="line">    <span class="keyword">if</span> (wid&gt;<span class="number">900</span>) iframe.height = wid/<span class="number">2.19</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (wid&gt;<span class="number">551</span>) iframe.height = wid/<span class="number">2.21</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (wid&gt;<span class="number">470</span>) iframe.height = wid/<span class="number">2.165</span>;</span><br><span class="line">    <span class="keyword">else</span> iframe.height = wid/<span class="number">2.26</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;div style="background-color: rgb(0, 0, 0);padding-top: 7px;" id="father"&gt;</span></span><br><span class="line"><span class="regexp">  &lt;iframe width="100%" id="myiframe" frameborder="0" onload="changeFrameHeight()" </span></span><br><span class="line"><span class="regexp">    src="https:/</span><span class="regexp">/nas.cz5h.com:5443/</span>photo/embed/embed.html?album=album_5745425f414c42554d&amp;autoplay=<span class="number">1</span>&amp;lightbox=<span class="number">1</span><span class="string">" photostation&gt;</span></span><br><span class="line"><span class="string">  &lt;/iframe&gt;</span></span><br><span class="line"><span class="string">&lt;/div&gt;</span></span><br></pre></td></tr></table></figure><p>巧妙之处在于包裹在iframe之上的div，正式利用这个父级div标签来获得iframe可以“撑起来”的最大宽度，如果直接拿原主题文件的类去获取宽度，那需要复杂的选择器实现。</p><p>得到父级标签的宽度之后就很容易通过当前宽度来配置iframe的高度了（宽度就是div的宽度）。</p><h4 id="嵌入的链接为http而被禁止"><a href="#嵌入的链接为http而被禁止" class="headerlink" title="嵌入的链接为http而被禁止"></a>嵌入的链接为http而被禁止</h4><blockquote><p><code>Mixed Content: The page at &#39;https://www.cz5h.com/&#39; was loaded over HTTPS, but requested an insecure frame &#39;http://asus.myds.me:5080/photo/embed/embed.html?album=album_5745425f414c42554d&amp;autoplay=1&amp;lightbox=1&#39;. This request has been blocked; the content must be served over HTTPS.</code></p></blockquote><p>这也是个令人头痛的问题，基本上如果Server不是自己手写的代码，那就没法解决，只能换用https的安全链接。为此，我终于在群晖上把https的证书搞好了（之前一直拖着没弄）。</p><p><img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200621161332.png" alt></p><p>之后通过https访问5001是可以了，但群晖相册却怎么也打不开了，在经过了一大堆尝试（端口映射、相册设置等等）之后，终于解决了这个问题。</p><p><img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200621162243.png" alt></p><p>需要注意的是，群晖的相册默认是使用80端口，在内网是直接以  的形式访问，当然如果在外网，需要配置一个端口映射到80，在http时代，我使用5080-&gt;80，即访问地址是：<a href="http://nas.cz5h.com:5080/photo/#Albums" target="_blank" rel="external nofollow noopener noreferrer">http://nas.cz5h.com:5080/photo/#Albums</a></p><p>在https时代，相应的，应该再用一个端口映射到443（！非常重要），也就是这里的5443-&gt;443，之后访问地址应该是:<a href="https://nas.cz5h.com:5443/photo/#Albums" target="_blank" rel="external nofollow noopener noreferrer">https://nas.cz5h.com:5443/photo/#Albums</a></p><p>至此，iframe采用新的https链接，问题解决。</p><h4 id="群晖相册的灯箱模式失效"><a href="#群晖相册的灯箱模式失效" class="headerlink" title="群晖相册的灯箱模式失效"></a>群晖相册的灯箱模式失效</h4><p>经验证，引入如下的JavaScript源是会出现错误的，而且导致允许连接到群晖相册和单机进入灯箱模式的失效，解决方法就是简单地取消第一、三项的勾选，只保留基本的幻灯片模式。</p><p><img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200621162942.png" alt></p><h3 id="其他可能的引入方法"><a href="#其他可能的引入方法" class="headerlink" title="其他可能的引入方法"></a>其他可能的引入方法</h3><h4 id="RSS订阅"><a href="#RSS订阅" class="headerlink" title="RSS订阅"></a>RSS订阅</h4><p>这是一个比较通用的解决方案，缺点是好像群晖相册的RSS源只包含了有限张照片，并没有将同一相册的全部照片都涵盖其中，亟待寻求解决方案。</p><fancybox><img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200621164917.png"></fancybox><p>如果一切正常的话，通过RSS解析到图片，然后再通过自己的想法构造页面就可以了，这种方法是最贴合的嵌入方式，但暂时还不知道如何获得包含全部图片的订阅源。</p><h4 id="待补充"><a href="#待补充" class="headerlink" title="待补充"></a>待补充</h4><p>…</p><h3 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h3><p>我已经将群晖相册做了整理并公开了部分相册，欢迎访问直接访问我的群晖相册。<br><a href="http://nas.cz5h.com:5080/photo/#Albums/album_5745425f414c42554d" target="_blank" rel="external nofollow noopener noreferrer">http://nas.cz5h.com:5080/photo/#Albums</a></p><fancybox><img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200621163923.png"></fancybox><p>群晖相册点开图片后还可以<strong>留言</strong>，简直不要太方便！<br>另外，PhotoStation还允许你批量添加（显示层面的）自定义水印！</p><fancybox><img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200621164216.png"></fancybox>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;如何高效便捷的在博客中更新自己的动态是困扰很多人的问题，简单的方案就是另起炉灶在博客重新发布一份，但这种方法耗时耗力，因此不建议这样做。从原po平台同步到博客的某个位置应该是最理想的解决方案。对于照片来说，群晖的相册给我提供了一个来源库，那么如果我想让访客浏览我的近照，那么如何把照片从群晖相册同步到博客中就成了实现这一想法的核心问题。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Hexo相关" scheme="https://www.cz5h.com/categories/Hexo%E7%9B%B8%E5%85%B3/"/>
    
    
      <category term="Hexo" scheme="https://www.cz5h.com/tags/Hexo/"/>
    
      <category term="插件" scheme="https://www.cz5h.com/tags/%E6%8F%92%E4%BB%B6/"/>
    
      <category term="群晖" scheme="https://www.cz5h.com/tags/%E7%BE%A4%E6%99%96/"/>
    
  </entry>
  
  <entry>
    <title>使用R语言转存Excel到MySQL</title>
    <link href="https://www.cz5h.com/article/528.html"/>
    <id>https://www.cz5h.com/article/528.html</id>
    <published>2020-06-18T22:00:00.000Z</published>
    <updated>2020-06-27T22:26:49.584Z</updated>
    
    <content type="html"><![CDATA[<p>花了两天时间写了一个Excel数据转换脚本，原需求除了要把数据转存到Mysql中，还要对每一条数据进行拆分和重组，并不容易。最终我利用R语言完成了这个小需求，本着总结学习的想法，在此处将多余逻辑删除，抽离出了最基本的Excel转存Mysql的功能，这样也可以算一个小轮子了。（仅做学习用，Navicat等工具可以直接导入Excel）</p><a id="more"></a><p><strong>本项目已开源至Github，地址：</strong><a href="https://github.com/TianZonglin/transferExcelbyR" target="_blank" rel="external nofollow noopener noreferrer">https://github.com/TianZonglin/transferExcelbyR</a></p><fancybox><img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200621141106.png"></fancybox><h3 id="适用场景和使用要求（暂）"><a href="#适用场景和使用要求（暂）" class="headerlink" title="适用场景和使用要求（暂）"></a>适用场景和使用要求（暂）</h3><ul><li>需要处理的表文件以文件夹形式存储</li><li>全部的数据表均必须包含相同的列格式，切忌无关表的污染</li><li>每个表文件中只有一个Sheet</li><li>数据表必须在第三级目录（单文件亦是如此），例如</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ecProject\io_Input_Excel_Folder\simples\ORGDATA.XLS</span><br><span class="line"># 分别是：工作目录 -&gt; 输入文件夹(1st) -&gt; 内部自定义的文件夹(2nd) -&gt; 真正的表文件(3rd)</span><br></pre></td></tr></table></figure><h3 id="此脚本的特点"><a href="#此脚本的特点" class="headerlink" title="此脚本的特点"></a>此脚本的特点</h3><ul><li>批量处理全部输入文件夹下二级文件夹的全部Excel表文件</li><li>自动根据所需要转换的Excel表文件在Mysql中创建表</li><li>自动检测Excel表文件的数据边界</li><li>详细的debug统计信息</li><li>合并全部Excel表文件到单一的Mysql数据表</li><li>默认不需要对数据库进行操作</li></ul><h3 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h3><h4 id="使用对象"><a href="#使用对象" class="headerlink" title="使用对象"></a>使用对象</h4><p><strong>tool_excel2mysql.R</strong>，这是通用的转换工具，其他脚本面向特殊的需求。推荐使用** R Studio **运行此代码。</p><h4 id="所需要的软件和开发环境"><a href="#所需要的软件和开发环境" class="headerlink" title="所需要的软件和开发环境"></a>所需要的软件和开发环境</h4><fancybox><img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200621115758.png"></fancybox><p>即需要Mysql的环境+Mysql的可视化工具+R环境+R可视化开发工具，上述所有软件均可在网上找到。</p><p><strong>注意：更新使用 Navicat 11 premium，原版本太过老旧。百度网盘：<a href="https://pan.baidu.com/s/18zg6NNogRVRHHD-fEj9UCg" target="_blank" rel="external nofollow noopener noreferrer">https://pan.baidu.com/s/18zg6NNogRVRHHD-fEj9UCg</a>  提取码：cbkj</strong></p><h4 id="安装所需要的程序包"><a href="#安装所需要的程序包" class="headerlink" title="安装所需要的程序包"></a>安装所需要的程序包</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 注意这部分仅运行一次即可</span><br><span class="line"># near line 8</span><br><span class="line">#install.packages(&quot;RMySQL&quot;)</span><br><span class="line">#install.packages(&quot;stringr&quot;)</span><br><span class="line">#install.packages(&quot;readxl&quot;)</span><br><span class="line">#install.packages(&quot;readr&quot;)</span><br></pre></td></tr></table></figure><h4 id="修改工作路径"><a href="#修改工作路径" class="headerlink" title="修改工作路径"></a>修改工作路径</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># near line 14</span><br><span class="line">setwd(&quot;C:\\Users\\zonglin\\OneDrive - Universiteit Utrecht\\Desktop\\ecProject\\&quot;)</span><br></pre></td></tr></table></figure><h4 id="修改Mysql配置"><a href="#修改Mysql配置" class="headerlink" title="修改Mysql配置"></a>修改Mysql配置</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 默认数据库名称: test</span><br><span class="line"># near line 17</span><br><span class="line">conn &#x3D; dbConnect(MySQL(), user &#x3D; &#39;root&#39;, password &#x3D; &#39;root&#39;, dbname &#x3D; &#39;test&#39;,host &#x3D; &#39;localhost&#39;)</span><br><span class="line"></span><br><span class="line"># 默认生成的表名称: tb_from_excel</span><br><span class="line"># 如果需要修改，可以直接在代码中全局替换这个字段</span><br><span class="line"># use editor&#39;s find&#x2F;replace function to replace it all.</span><br></pre></td></tr></table></figure><h4 id="选择合适的起始列"><a href="#选择合适的起始列" class="headerlink" title="选择合适的起始列"></a>选择合适的起始列</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 默认起始列数: 1</span><br><span class="line"># 可以自由设置转存的起始列</span><br><span class="line"># near line 222</span><br><span class="line">tmp &#x3D; transExcel2MysqlDB(tmpPath, cnt, startmark &#x3D; 1)</span><br></pre></td></tr></table></figure><h4 id="设置仅测试部分数据"><a href="#设置仅测试部分数据" class="headerlink" title="设置仅测试部分数据"></a>设置仅测试部分数据</h4><p>如果你有大量的Excel文件，且你只想测试此代码或使用日志中的<code>errinfo with finally</code>来捕获Excel的调试信息（可以打开或打不开），则可以修改以下部分。 其只加载有限的表数据。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># near line 85</span><br><span class="line">edata &lt;- edata[30:35,]</span><br></pre></td></tr></table></figure><h3 id="日志-processRecord-csv"><a href="#日志-processRecord-csv" class="headerlink" title="日志 (processRecord.csv)"></a>日志 (processRecord.csv)</h3><fancybox><img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200621113612.png"></fancybox><h4 id="errinfo-with-summary"><a href="#errinfo-with-summary" class="headerlink" title="errinfo with summary"></a>errinfo with summary</h4><p>这是插入SQL失败的记录。如果使用文件夹包含多个Excel，则每个Excel都可以输出单独的<code>errinfo with summary</code>。 使用此缓存信息，我们可以在Navicat的帮助下自动的找到错误的sql位置。</p><fancybox><img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200621114705.png"></fancybox><p>然后你可以修改 <code>tool_excel2mysql</code> 的代码内容来修复或者直接给我相关反馈。 </p><h4 id="errinfo-with-finally"><a href="#errinfo-with-finally" class="headerlink" title="errinfo with finally"></a>errinfo with finally</h4><p>这部分是全局信息，包含无法读取的Excel表信息和最终的统计数据。 如果此处显示了某个excel，那你需要手动检查此文件以查找真正的问题。 有时重新保存（打开然后保存）就可以解决不能读取的问题。</p><p>基本上来说，该工具可以顺利地将数据从我的xls、xlsx文件转存到mysql，并且成功率几乎达到100％。 （上面的截图是为了演示errinfo的例子）</p><hr><p><a href="https://github.com/TianZonglin/transferExcelbyR/blob/master/README.md" target="_blank" rel="external nofollow noopener noreferrer">English Version</a></p><hr><p><strong>赶紧使用一下吧…</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;花了两天时间写了一个Excel数据转换脚本，原需求除了要把数据转存到Mysql中，还要对每一条数据进行拆分和重组，并不容易。最终我利用R语言完成了这个小需求，本着总结学习的想法，在此处将多余逻辑删除，抽离出了最基本的Excel转存Mysql的功能，这样也可以算一个小轮子了。（仅做学习用，Navicat等工具可以直接导入Excel）&lt;/p&gt;
    
    </summary>
    
    
      <category term="ML/R学习笔记" scheme="https://www.cz5h.com/categories/ML-R%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="R语言" scheme="https://www.cz5h.com/tags/R%E8%AF%AD%E8%A8%80/"/>
    
      <category term="SQL插入" scheme="https://www.cz5h.com/tags/SQL%E6%8F%92%E5%85%A5/"/>
    
      <category term="数据处理" scheme="https://www.cz5h.com/tags/%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>那些年令人记忆深刻的电视剧</title>
    <link href="https://www.cz5h.com/article/d24e.html"/>
    <id>https://www.cz5h.com/article/d24e.html</id>
    <published>2020-04-29T22:00:00.000Z</published>
    <updated>2020-06-18T12:19:02.143Z</updated>
    
    <content type="html"><![CDATA[<p>二十年不长不短，刚好积攒一点人生阅历。面对那些年看过的电视剧，彼时孩童的我们满头雾水，而现在，深刻的、内在的、隐晦的暗示，会在我们重温时不断涌现，好的作品需要时间的沉淀，需要阅历的解读。温故方可知新，当越来越多的人认可当下电视传媒的荒芜时，不妨停下脚步，回头看看，看看那些儿时看过的老剧，同样会给你深刻的感悟：好剧如酒，历久弥香。</p><p><img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200430201027.png" alt></p><a id="more"></a><hr><p><br><br></p><h4 id="2002《黑洞》"><a href="#2002《黑洞》" class="headerlink" title="2002《黑洞》"></a><strong>2002《黑洞》</strong></h4><p><img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200430202457.png" alt></p><p><strong>简介：</strong> 副市长聂大海之子、天都市龙腾集团董事长、闻名全省的青年企业家，这些都是加诸在聂明宇（陈道明 饰）身上的称呼。但他最重要的身份则是天都市最大的地下黑社会的头目。平日里一表人才、斯文有礼的聂明宇实则道貌岸然。他利用其四通发达的人际网，收买海关人员，走私货物，牟取暴利。而他的左右手也能力非凡，手段毒辣。在他们的经营下，龙腾集团的业绩步步高升。但世上没有不透风的墙。一封匿名检举信被递到了省委组织部。聂明宇及龙腾集团的勾当引起了省委方面的高度警觉，责令天都市迅速查明原因。但聂明宇的势力早已覆盖整个天都市。市委把聂明宇的义兄，刑警队队长刘振汉（陶泽如 饰）安排调查此事，想继续掩盖聂明宇的罪恶事迹。一场关于亲情和正义的较量在刘振汉身上展开。邪与正的角逐，究竟谁胜谁负…</p><p><strong>观看：</strong> <a href="https://www.youtube.com/playlist?list=PLRWT6lKXUm2kHuqw0LJyIO04xdAbItS1e" target="_blank" rel="external nofollow noopener noreferrer">Youtube合集</a></p><p><strong>短评：刘振汉和聂明宇的战争非黑即白：正义必将战胜邪恶；庞天岳和聂大海的较量却讳莫如深：胜者为王败者寇。（这是《名义》的爸爸）</strong> </p><br><h4 id="2004《冬至》"><a href="#2004《冬至》" class="headerlink" title="2004《冬至》"></a><strong>2004《冬至》</strong></h4><p><img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200430202711.png" alt></p><p><strong>简介：</strong> 齐州银行和平区支行柜台会计陈一平，妻子戴嘉和十二岁的女儿幼幼有一个不怎么富裕但是还算美满的三口之家。而身为北京市局刑侦处长的蒋寒比较起来生活可谓差强人意：虽然工作业绩突出，但是婚姻生活很不幸福。一个是平凡的银行小职员，一个是警察，他们的生活本是两条永不会相交的平行线。可是一场较量却在不知不觉中展开了。一宗看似平淡的银行库款失窃案这两位主人公的命运连在了一起…</p><p><strong>观看：</strong> <a href="https://www.youtube.com/playlist?list=PLRWT6lKXUm2kQxBz5zd4Ow1dxM6IOvpOJ" target="_blank" rel="external nofollow noopener noreferrer">Youtube合集</a></p><p><strong>短评：“好人”的堕落，往往只需要一个邪念；家破人亡，也只需要一纸支票。</strong> </p><br><h4 id="1999《一级恐惧-黑菌》"><a href="#1999《一级恐惧-黑菌》" class="headerlink" title="1999《一级恐惧/黑菌》"></a><strong>1999《一级恐惧/黑菌》</strong></h4><p><img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200430202827.png" alt></p><p><strong>简介：</strong> 村外那条大清河早在几年前就已成了干涸的河床，在布满卵石的河床上往来劳作的农民 们绝对没有想到在他们脚步下的某个地方有一只深埋了半个世纪的罪恶的铁盒，那盒子将给他们、给生活在这个地球上的所有生命带来一场巨大的灾难。不幸的是，他们的铁锹碰到了那个盒子，他们的双手打开了那个瓶口，黑色的液体象当年日本军队肮脏的黑爪一样，伸向了每个人宝贵的生命…十八里坡倾刻间面临灭顶之灾。</p><p><strong>观看：</strong> <a href="https://www.youtube.com/playlist?list=PLQwmsL4wzIwQLcIY4D94NVp7yBCu2OOkN" target="_blank" rel="external nofollow noopener noreferrer">Youtube合集</a></p><p><strong>短评：人物脸谱化的登峰造极；讽刺官派的出神入化；天灾还是人祸，二十年前就已经开始了讨论。</strong> </p><br><h4 id="1997《雍正王朝》"><a href="#1997《雍正王朝》" class="headerlink" title="1997《雍正王朝》"></a><strong>1997《雍正王朝》</strong></h4><p><img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200430202913.png" alt></p><p><strong>简介：</strong> 康熙皇帝驾崩，继位者四阿哥胤禛，在当政后出现的“摊丁入亩、火耗归公”、“士绅一体当差一体纳粮”、“河南罢考案”、“铁帽子亲王大殿发难逼宫”、“含泪杀亲子”等一系列旨在推行新政、抑制官绅敛财和宫廷内部党争、挤压的历史事件贯穿雍正的一生和雍正王朝。</p><p><strong>观看：</strong> <a href="https://www.youtube.com/playlist?list=PL4U9STbe5zoITXpG8WRbloB2W0TmKZ0yG" target="_blank" rel="external nofollow noopener noreferrer">Youtube合集</a></p><p><strong>短评：羸弱帝国的苦皇帝，低开高走雍正王朝。皇帝不再高高在上，而更像是一位从群众中来的无产阶级领袖。</strong> </p><br><h4 id="2001《康熙王朝》"><a href="#2001《康熙王朝》" class="headerlink" title="2001《康熙王朝》"></a><strong>2001《康熙王朝》</strong></h4><p><img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200430203006.png" alt></p><p><strong>简介：</strong> 基于二月河小说《康熙大帝》改编，其背景故事是清朝世祖顺治帝的末年和圣祖康熙帝在位时的事迹。该剧从顺治皇帝哀痛爱妃董鄂妃病故时讲起，直至康熙在位61年驾崩而止。第一次以正剧的角度浓墨重彩刻画了清朝初期康熙皇帝充满传奇的一生。</p><p><strong>观看：</strong> <a href="https://www.youtube.com/playlist?list=PLIj4BzSwQ-_v9n6qabRS2C1b1aGRwZbP4" target="_blank" rel="external nofollow noopener noreferrer">Youtube合集</a></p><p><strong>短评：准确的演绎出了大清帝国皇帝的王道之气和阴柔诡谲的心性。在位六十载无人能敌，统一华夏功德无量。</strong> </p><br><h4 id="2000《上车走吧》"><a href="#2000《上车走吧》" class="headerlink" title="2000《上车走吧》"></a><strong>2000《上车走吧》</strong></h4><p><img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200501224115.png" alt></p><p><strong>简介：（这个是电影哦）</strong> 98年，山东青年刘承强（高虎 饰）和同乡高明（黄渤 饰）相约来到首都北京。成为了小巴302线的司乘人员。同在一条营运线的大头和大英子出于利益的关系，处处与强子和小明作对，双方为此曾大打出手。在此期间，高明更与同住一个院子的四川女孩小辫子日久生情，而强子则喜欢上了小巴上的常客丽娟。北京，这座城市的人和事，给了这两个外地青年终身难忘的记忆。</p><p><strong>观看：</strong> <a href="https://www.youtube.com/watch?v=6IC64XGJ2xo&t=328s" target="_blank" rel="external nofollow noopener noreferrer">Youtube地址</a></p><p><strong>短评：见微知著，北京的丑陋面，多年过去，并没有多少改变。每个人都在纷纷扰扰中找到自己的位置，等级森严、不可僭越，即使相识相知也终将平行向前。</strong> </p><br><h4 id="2005《生存之民工-春天里》"><a href="#2005《生存之民工-春天里》" class="headerlink" title="2005《生存之民工/春天里》"></a><strong>2005《生存之民工/春天里》</strong></h4><p><img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200512232436.png" alt></p><p><strong>简介：</strong> 松江市，一个东北边陲的小城，一群来自全国各地的农民工为了生存，来到了这里，他们把汗水浸透在这个城市的建筑工地上。而上百名民工们的血汗工资无情地被非法挪用，民工们养家糊口的工钱被无期限地拖延，为了生计他们被迫集体追讨，可是讨来的却是暴力威胁和致命的恐吓，这群缺乏人文关怀的弱势群体的生命骤然间危在旦夕。。</p><p><strong>观看：</strong> <a href="https://www.youtube.com/playlist?list=PL5MEeGH4X3Kl-0Qkv4t-FmvZqIqTHsnTz" target="_blank" rel="external nofollow noopener noreferrer">Youtube地址</a></p><p><strong>短评：谢老大的无奈、王家才的窝囊、王家慧的没人性、杨志刚的鲁莽、陆长发的自以为是…极尽农民工之散漫、无用、甚至有些废物，但正是这种氛围的营造，让剧情无限接近真实生活，他们就是那样的无知、那样的天真、那样的愚昧，导演巧妙的插入了栓子这样一个新时代农民工的形象，隐晦的代表了希望、代表了农民工的明天。本剧音效也是一大亮点，没有浮夸的配乐，只有深沉的伴奏。</strong> </p><br><h4 id="2010《外乡人》"><a href="#2010《外乡人》" class="headerlink" title="2010《外乡人》"></a><strong>2010《外乡人》</strong></h4><p><img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200512230927.png" alt></p><p><strong>简介：</strong> 讲述七八个外乡人，为了各自理想汇聚到上海，历经坎坷最终实现自我的悲喜人生。该剧围绕着小人物平凡琐碎的生活故事及情感纠葛，细致入微地刻画了人们熟知或陌生人们的内心世界。该剧以一种平实亲切的风格，以平民的视角，印证着都市乃至当今中国最近十年的发展脉络，是一幅反映中国社会进步、经济发展的市井风情画。</p><p><strong>观看：</strong> <a href="https://www.youtube.com/playlist?list=PLA77ed283ovhUnF02_bvmabgLnlv2A5mo" target="_blank" rel="external nofollow noopener noreferrer">Youtube地址</a></p><p><strong>短评：本剧的点睛之笔是电视机，从南斯拉夫大使馆被炸开始，穿插了包括911恐怖袭击、五十年国庆、2003年非典、北京申奥成功、08年地震、雪灾、到最后全国取消农业税等等事件，把整个剧情牢牢的贴合在真实历史的轨迹之上，让每个人物的悲欢离合同祖国的发展同呼吸、共命运，把艺术源于生活演绎的淋漓尽致。</strong> </p><br><h4 id="2008《国家形象》"><a href="#2008《国家形象》" class="headerlink" title="2008《国家形象》"></a><strong>2008《国家形象》</strong></h4><p><img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200618133922.png" alt></p><p><strong>简介：</strong> 为了纪念国际禁毒日，主创团队决定拍摄一部缉毒禁毒的电视剧。该剧取材于公安部门缉拿的刘招华、谭晓林、陈炳锡、张启生四位毒枭的案例。编剧在公安部门的协助下，才从数以万计的资料中，把他们的关系捋出来，重新创作出看点极佳的故事情节。剧组先后来到厦门、西双版纳、北京、西安及泰国等地取景拍摄。</p><p><strong>观看：</strong> <a href="https://www.youtube.com/playlist?list=PLRWT6lKXUm2l8WRmLTNvKvUKrB9Iu6h8i" target="_blank" rel="external nofollow noopener noreferrer">Youtube地址</a></p><p><strong>短评：毒贩的尔虞我诈、卧底的步步惊心，以及缉毒战士的无所畏惧，交织在一起还原了一段精彩的缉毒故事。</strong> </p><br><h4 id="2005《使命》"><a href="#2005《使命》" class="headerlink" title="2005《使命》"></a><strong>2005《使命》</strong></h4><p><img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200618135113.png" alt></p><p><strong>简介：</strong> 根据朱维坚长篇小说《使命：黑白道前传》改编的电视剧，是一部综合反黑、纪检、刑侦的电视剧。讲述了清水市公安局长林荫，铲除黑恶势力，扫除百姓心中的阴霾的故事。</p><p><strong>观看：</strong> <a href="https://www.youtube.com/playlist?list=PLHOMQ6tK7YueCgko2kWENKSjHwL6a_WIK" target="_blank" rel="external nofollow noopener noreferrer">Youtube地址</a></p><p><strong>短评：当一个城市被黑恶势力所浸淫，执法机关被外部势力所渗透时，试想公安局长如何能够扭转局势、反客为主。对金钱的贪婪是堕落的根源，守住底线的根本就是牢记自己的‘使命’</strong> </p><br><h4 id="2009《沉默》"><a href="#2009《沉默》" class="headerlink" title="2009《沉默》"></a><strong>2009《沉默》</strong></h4><p><img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200618140116.png" alt></p><p><strong>简介：</strong> 依旧是根据朱维坚创作的小说《黑白道：终结篇·沉默》改编，不同的是林荫来到了春城市春城分局做局长，相比较清水市，这里的权力交织更为盘根错节，甚至出现了枪杀警队人员的恶性事件，真相虚无缥缈，凶手亦敌亦友，在权力面前，选择沉默还是奋起反抗，这是一个值得深思的问题。</p><p><strong>观看：</strong> <a href="https://www.youtube.com/playlist?list=PLHOMQ6tK7Yud2RQ38_eF35BtpFY5Hz7qY" target="_blank" rel="external nofollow noopener noreferrer">Youtube地址</a></p><p><strong>短评：极度压抑的观看体验，几乎全程被升任的前任公安局长玩弄于手掌内，不同的是，除了忍气吞声外，林荫一直没有放弃对黑恶势力证据的收集，最终，拨云见日，成功的揪出了隐藏在警队内部的罪魁祸首，同时配合政法委一举肃清了执政队伍。看到结尾时，心中那种全程压抑的情感才得以集中释放。林荫再一次不负众望，凯旋而归。</strong> </p><br><h4 id="未完待续。。"><a href="#未完待续。。" class="headerlink" title="未完待续。。"></a><strong>未完待续。。</strong></h4>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;二十年不长不短，刚好积攒一点人生阅历。面对那些年看过的电视剧，彼时孩童的我们满头雾水，而现在，深刻的、内在的、隐晦的暗示，会在我们重温时不断涌现，好的作品需要时间的沉淀，需要阅历的解读。温故方可知新，当越来越多的人认可当下电视传媒的荒芜时，不妨停下脚步，回头看看，看看那些儿时看过的老剧，同样会给你深刻的感悟：好剧如酒，历久弥香。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200430201027.png&quot; alt&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Daily_Life" scheme="https://www.cz5h.com/categories/Daily-Life/"/>
    
    
      <category term="总结" scheme="https://www.cz5h.com/tags/%E6%80%BB%E7%BB%93/"/>
    
      <category term="生活" scheme="https://www.cz5h.com/tags/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title>你有没有「厌网」情节？</title>
    <link href="https://www.cz5h.com/article/73f8.html"/>
    <id>https://www.cz5h.com/article/73f8.html</id>
    <published>2020-04-22T22:00:00.000Z</published>
    <updated>2020-04-23T17:11:59.896Z</updated>
    
    <content type="html"><![CDATA[<p>曾几何时，互联网的沟通方式是单调的，但人与人的沟通却是真诚的，但近年来网民数量直逼人口数量，互联网再也不是从前那一汪清泉，或许用波涛汹涌的汪洋大海来比喻比较贴切，太多人厌倦了、疲惫了，选择退网了，在他们眼中，当下互联网环境早已是恶臭漫天，烂的一发不可收拾，但事实如此吗？我想每个人有每个人的理解。</p><a id="more"></a><h4 id="先导"><a href="#先导" class="headerlink" title="先导"></a><strong>先导</strong></h4><p>写此文章的缘由是我看到了不止一个朋友、或朋友的朋友的退网经历，虽然我不知道事实如何，但我也理解他们的行为。互联网的膨胀，带来的是无穷无尽的话题和随之而来的讨论或争论。而恰恰是建立在互联网之上的<strong>「</strong>讨论<strong>」</strong>，是构成互联网生活的重要一环，也是影响人们体验的最重要因素。</p><p>因此，以下所述的互联网环境，特指<strong>「</strong>言论/舆论环境<strong>」</strong>，这也是导致人们对互联网产生厌烦情绪甚至退网的直接和最主要因素。</p><h4 id="互联网环境的发展"><a href="#互联网环境的发展" class="headerlink" title="互联网环境的发展"></a><strong>互联网环境的发展</strong></h4><p>如果用一句话概括现如今的互联网环境，那就是<strong>「</strong>整体杂乱有序、个体多维度交叉<strong>」</strong>。如果从互联网诞生之时说起，那么大概可以描绘出以下这么几个阶段：</p><p><strong>1. 混沌时代的个体觉醒：产生公知。</strong>起初的互联网由于在人们生活中的参与度非常有限，几乎不会对人们现实社会的决策产生影响。到了后来，国内第一批意见领袖出现，此时大多数人基本都是边缘OB大神输出，意见领袖/公知，很大程度上就是公信力的代名词。</p><p><img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200423011737.png" alt></p><p><strong>2. 初生代网民和新生代网民的先后加入。</strong>这一过程从最初开始，延续到现在。看惯了神仙（公知）打架的初生代网民的加入，迅速使得互联网活跃起来，一系列优质的社区产生。由于初生代网民的骨子里是<strong>「</strong>问题导向<strong>」</strong>（公知打架）的，所以平均素质自然比较高，那时的互联网环境也自然比较好，那段时间也成了众多网友追忆的<strong>「</strong>黄金时代<strong>」</strong>。<br>后来，新生代（尤其是00后）的加入，彻底打破了这一美梦。有人说新生代网民的素质堪忧，究其原因可能有二：</p><ul><li><strong>一是经历：</strong>初生代网民看着公知打架过来的，而新生代呢，是看着粉丝互怼过来的。</li><li><strong>二是时间：</strong>初生代参与网络的（平均）年龄必然比新生代大的多，这直接导致了新生代网民过早的接触、参与、实施。</li></ul><p>总之，以微博为载体、粉丝为高地的新型互联网舆论战场已经在新生代的影响下形成规模，现在每天都有大大小小的<strong>「</strong>战争<strong>」</strong>爆发，并且实实在在的在影响人们的现实生活。</p><p><img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200423011813.png" alt></p><p><strong>3. 新生代力量的侵蚀和导致的群体分裂。</strong>续上。在新生代加入之后，除了上述的<strong>「</strong>自家战场<strong>」</strong>，他们还迅速洗劫其他<strong>「</strong>高龄<strong>」</strong>战场，凡无门槛可进入的地方，全部被低龄化所影响。新老的对立和互相嫌弃说到底，是老一代网民的错，错就错在自己没管好自己的娃，让他年纪轻轻（初中尤甚）就跑到网上参军。</p><p><img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200423011848.png" alt></p><p><strong>4. 重回混沌，但是更高水平的混沌。</strong>终于说到了现在。现在是个什么形式呢，个人更倾向于重回混沌状态：没有所谓的公知领袖，即便有也通常最后会死的很惨；人人都有粉丝效应，人人都可能是舆论中心。<br>至于这种混沌是更高质量还是更低质量，我觉得是前者，至少有思辨能力的人是越来越多的。不过恰恰是这些产生出思辨能力的人，往往是退网急先锋，因为他们受不了无脑的拥护，受不了不分青红皂白的辱骂，可转念一想，谁又不是这样过来的呢？</p><p><img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200423011909.png" alt></p><p>前半段的最后说到了现今的互联网环境和退网人士，下面直接就他们为什么对现今的互联网环境心生厌恶做一下简要分析。</p><ul><li><strong>根本原因：个人觉醒和「同质化」的矛盾。</strong></li><li><strong>直接原因：「拥护者效应」的加害。</strong></li></ul><h4 id="从「意见垄断」说起"><a href="#从「意见垄断」说起" class="headerlink" title="从「意见垄断」说起"></a><strong>从「意见垄断」说起</strong></h4><p>字面来看，意见垄断就是发表意见的权力掌握在少数人手里，在公知时期确实是这样，那时的公知或者大V，需要很长时间的积累、或运营，新手入场难度很大，因此那时虽然少数人掌握发言权，但环境还算说得过去。</p><p>但自新生代加入后，伴随互联网的爆炸式发展，自媒体井喷、营销平民化都在刺激着言论的扁平化蜕变，言论场从原先的群峰矗立，变成了现在的丘陵起伏，由此，言论更亲民了，但也更杂乱无章了。</p><p>不过聚焦在某一问题，其又有一番景象：站队思维越来越严重。究其原因，我认为是言论的扁平化，致使个人言论地位的提升，加之个体意识的觉醒，导致<strong>「</strong>希望他人认同自己<strong>」</strong>的想法越发强烈，从而导致<strong>「</strong>站队互喷<strong>」</strong>。久而久之，<strong>「</strong>表明立场<strong>」</strong>便成了必修课，在不断地、重复地、多次地表明立场后，必然有部分人会疲倦、会厌恶，究其原因，便是个体意识过于强烈，缺少包容度，一次次的站队，一次次的参加战斗，直到自己发现，原来在另一场战斗中，战友赫然站立在自己最恶心的阵营中。</p><h4 id="何为「群体同质化」"><a href="#何为「群体同质化」" class="headerlink" title="何为「群体同质化」"></a><strong>何为「群体同质化」</strong></h4><p>当上述这种需要表明立场的话题构成一类话题，那么经过如此<strong>「</strong>训练<strong>」</strong>的网民，便会出奇的言论一致（这就是所谓的同质化），例如明星的脑残粉，爱guo的粉红等等，当这种<strong>「</strong>同质化<strong>」</strong>表现在某些反常识的话题（例如对日系车打砸）中时，往往就会令有<strong>「</strong>独立思维<strong>」</strong>的人心生厌恶，长此以往，或许某天他们就会大喊一声失望，然后悻然退网。如果他们忍辱负重下来，那么等待他们的还有<strong>「</strong>拥护者<strong>」</strong>的加害。</p><h4 id="副产物「拥护者效应」"><a href="#副产物「拥护者效应」" class="headerlink" title="副产物「拥护者效应」"></a><strong>副产物「拥护者效应」</strong></h4><p>前面说的<strong>「</strong>群体同质化<strong>」</strong>本身并没有什么害处，但坏就坏在其会催生出一类<strong>「</strong>拥护者<strong>」</strong>，这又是<strong>「</strong>潜在退网用户<strong>」</strong>最为恶心的一类人。往往自身并不十分拥护，但仍会借其外衣攻击自己的<strong>「</strong>敌人<strong>」</strong>。最典型的，自然就是“乱咬人”的<strong>「</strong>脑残粉<strong>」</strong>对路人的<strong>「</strong>无差别攻击<strong>」</strong>。</p><h4 id="参与者素质"><a href="#参与者素质" class="headerlink" title="参与者素质"></a><strong>参与者素质</strong></h4><p>这是个老生常谈的问题，但其实却又包含鲜明的时代色彩。由第一部分可知，十年前的互联网参与者和十年后的参与者（主力），已完全不同。如今的玩家，除了传统角色，更多的还有各色的<strong>「</strong>营销力量<strong>」</strong>，从本质上说，我认为当下的爱豆和粉丝，也应归类于媒体营销的一种。如果从营销的角度来看，那么参与者素质就显得不是那么重要，而流量导向才是根本目的，所以至此，互联网的新时代特性也凸显了出来，那就是<strong>「</strong>流量为王<strong>」</strong>，在此指导思想之下，内容的质量、提问者的素质、言论的真实性等等因素的重要性急剧下降，自然地，互联网的环境也随之越来越恶化。这也是构成部分人厌网情节的重要因素。</p><p>综上，可以发现，<strong>「</strong>潜在退网用户<strong>」</strong>的伤心地大多都是舆论场，是他们自己过于认真，从而让自己饱受<strong>「</strong>真实伤害<strong>」</strong>，实际呢，网络上的互相伤害比比皆是，不让自己深陷其中，才是面对如此环境的根本方法。</p><h4 id="后记"><a href="#后记" class="headerlink" title="后记"></a><strong>后记</strong></h4><p>在现如今的互联网（言论环境），如果事事较真，那么你将寸步难行。自己接受不了的就远离，自己热爱的就去捍卫；不要让互联网世界影响现实中的自己，也不要把现实世界的事物过多的带入到互联网中去，保持合适的远距离，才能让互联网为我们所用。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;曾几何时，互联网的沟通方式是单调的，但人与人的沟通却是真诚的，但近年来网民数量直逼人口数量，互联网再也不是从前那一汪清泉，或许用波涛汹涌的汪洋大海来比喻比较贴切，太多人厌倦了、疲惫了，选择退网了，在他们眼中，当下互联网环境早已是恶臭漫天，烂的一发不可收拾，但事实如此吗？我想每个人有每个人的理解。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Daily_Life" scheme="https://www.cz5h.com/categories/Daily-Life/"/>
    
    
      <category term="总结" scheme="https://www.cz5h.com/tags/%E6%80%BB%E7%BB%93/"/>
    
      <category term="生活" scheme="https://www.cz5h.com/tags/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title>来自千里之外祖国的关爱</title>
    <link href="https://www.cz5h.com/article/c24c.html"/>
    <id>https://www.cz5h.com/article/c24c.html</id>
    <published>2020-04-20T22:00:00.000Z</published>
    <updated>2020-04-22T20:03:42.328Z</updated>
    
    <content type="html"><![CDATA[<p>盼星星盼月亮，终于把“健康包”给盼来了，大约一周前就在网上填了表格，没想到今天才送到手里，更没想到的是居然用的是顺丰快递，原来荷兰也是有顺丰的。虽然远在千里之外，但此健康包还是领自己深深的感受到了来自祖国的关爱，特此记录一下。</p><a id="more"></a><h4 id="健康包"><a href="#健康包" class="headerlink" title="健康包"></a><strong>健康包</strong></h4><p>根据荷兰大使馆的说法，这一次荷兰国内发来的健康包一共有四千份，内有消毒湿巾、口罩以及湖北1号方、湖北2号方等防疫药品。通过全荷学联组织发放，顺丰荷兰负责投递，整个申请过程总计有4750人报名申领。对于首次没有领到的750人，大使馆后续又筹措了750份健康包。也就是说，只要成功完成申请的留学生，全都被包含在此次健康包的投递对象中。</p><h4 id="申请一波三折"><a href="#申请一波三折" class="headerlink" title="申请一波三折"></a><strong>申请一波三折</strong></h4><p>由于一开始被告知的是健康包数量有限，并不能覆盖全部的申请者，所以一周前的那天晚上，我们全都准备好了准备抢填，结果到点一登录，表格居然崩溃了。事后我们分析，是因为学联使用了谷歌多人协作表格的锅。众所周知，这类协作表格，对并发的支持很差，几百人就不行了。由第一节可知当天总共有接近五千人申请，使用谷歌协作表格，那妥妥的是不行的，因此在等待了一个多小时之后，学联才又重新开通了申请渠道，这次采用的是调查问卷的方式，这种方法就好的多了，从技术上说，这种方式的并发支持要好的多，只需要一般性能的数据库，就可以轻松的支持几百上千的并发提交，所以后面我们就轻轻松松完成了表格填写。值得高兴的是，隔天的第一批确认名单中，就找到了我的名字！（田氏家族ohaha）</p><p><img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200422205636.png" alt></p><h4 id="送货送到天荒地老"><a href="#送货送到天荒地老" class="headerlink" title="送货送到天荒地老"></a><strong>送货送到天荒地老</strong></h4><p>就在出名单的隔天，也就是填完表格后的第二天，就有同学晒出收到的健康包了，结果呢，我是等到了一周之后，也就是今天，才收到的，期间我还一度认为自己的健康包被放到了暂存点（因为收到了张暂存的单子），事后才知道那是室友的快递。</p><h4 id="晒晒里面的东东"><a href="#晒晒里面的东东" class="headerlink" title="晒晒里面的东东"></a><strong>晒晒里面的东东</strong></h4><p><code>卫生湿巾和防疫小册子：</code></p><p><img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/ETRE7W73HONT9JBU4KK@TYC.jpg" alt></p><p><code>KN95和一般医用口罩（2+20），以及中药预防方（六剂）：</code></p><p><img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200422211625.png" alt></p><p><code>还有一封“家信”：</code></p><p><img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/QQ%E5%9B%BE%E7%89%8720200422212059_%E5%89%AF%E6%9C%AC.jpg" alt></p><h4 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a><strong>写在最后</strong></h4><p><img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200422214447.png" alt></p><p>到此为止已经度过了一个多月的居家隔离生活，疫情也逐渐的从每日生活的主旋律变成了配菜，虽然情势不容乐观，尤其是害人的天气（先前没隔离的时候天天下雨，我甚至因为淋雨都感冒过，但自从开始了居家隔离的政策，这天气就变得异常的好），这蓝天白云直接导致出去一趟外面全是出来玩的。但终究整体社会氛围还比较稳定，这些Coronavirus在乐观的荷兰人眼里都不是事儿。</p><p>不过即便如此，在此时节，能收到祖国寄来的救助包裹，心里也是热乎乎的，轻轻的包裹载着重重的情谊，不远万里从国内送到我的手中，除了说句感谢，更多的还有对祖国认同感和自豪感的提升。这让我不由的想起了《战狼2》结尾的那句话（也是护照反面的那句话）：</p><blockquote><p><strong>“中华人民共和国公民：当你在海外遭遇危险，不要放弃！请记住，在你身后，有一个强大的祖国！”</strong></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;盼星星盼月亮，终于把“健康包”给盼来了，大约一周前就在网上填了表格，没想到今天才送到手里，更没想到的是居然用的是顺丰快递，原来荷兰也是有顺丰的。虽然远在千里之外，但此健康包还是领自己深深的感受到了来自祖国的关爱，特此记录一下。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Daily_Life" scheme="https://www.cz5h.com/categories/Daily-Life/"/>
    
    
      <category term="生活" scheme="https://www.cz5h.com/tags/%E7%94%9F%E6%B4%BB/"/>
    
      <category term="荷兰" scheme="https://www.cz5h.com/tags/%E8%8D%B7%E5%85%B0/"/>
    
      <category term="CSC" scheme="https://www.cz5h.com/tags/CSC/"/>
    
  </entry>
  
  <entry>
    <title>站点访问概况（近两月 2.29-4.29）</title>
    <link href="https://www.cz5h.com/article/ac94.html"/>
    <id>https://www.cz5h.com/article/ac94.html</id>
    <published>2020-03-31T22:00:00.000Z</published>
    <updated>2020-04-30T21:33:34.779Z</updated>
    
    <content type="html"><![CDATA[<p><strong>马上五一了，数据已更新至建站来的两个月。</strong> 以下为原文：终于告别三月，迎来了四月，在二月的最后一天，我把主题换成了Volantis，并且最近一段时间一直在对其进行美化和微调，现在是四月的第一天，整整一个月过去了，博客运行的如何呢？让我来借助统计分析来给大家康康。</p><a id="more"></a><h4 id="日均访客"><a href="#日均访客" class="headerlink" title="日均访客"></a><strong>日均访客</strong></h4><p>由下图可以看出，本博客还是个微型小站，每天基本也就几十个访客/IP，网页被浏览一百次左右（已排除本地调试干扰）。而且对于流量比较大的几天，其实都是知乎带来的流量。剩下的基本盘流量，基本是在 Hexo 水群时群友访问的，当然，现在不排除已经有部分老用户了，数据显示的是现在的访问量有 30% 是老用户/访客。</p><p>重要的一点是，从后面的分析可以得知，本博客站点的 <strong>UV : PV &lt; 1 : 3</strong>，个人认为这是十分正常的数据，如果 PV 是 UV 的四倍以上，那我一般认为就有水分了。</p><p><strong><code>第一个月（2.29-3.29）：</code></strong><br><fancybox><br><img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200401015241.png"><br></fancybox></p><p><strong><code>第二个月（3.29-4.29）：</code></strong><br><fancybox><br><img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200430204047.png"><br></fancybox></p><h4 id="总量和来源地区"><a href="#总量和来源地区" class="headerlink" title="总量和来源地区"></a><strong>总量和来源地区</strong></h4><p>可以看出，部署在 Coding 的新加坡机房，基本全球访问畅通，主要流量都来源于亚洲、欧洲和美国。这其中的国外访问量，我猜也基本是知乎带过来的，后面的对知乎的分析也会提及。对于中国的部分，我比较困惑的1是好像有大量访问的来源都是重叠在一起的，比如河南的访问量是最高的，我怀疑这些来源地区有运营商的根路由。关于具体来源的访客数，可以参照以下图示。</p><p><strong><code>第一个月（2.29-3.29）：</code></strong><br><fancybox><br><img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200401010349.png"><br></fancybox></p><p><strong><code>第二个月（3.29-4.29）：</code></strong><br><fancybox><br><img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200430204559.png"><br></fancybox></p><br>下面可以更直观的看出来访问来源地的总访问时长。可以看出大部分访问并不是蜻蜓点水，停留时间比未改版以前的旧博客要好了不少。<p><strong><code>第一个月（2.29-3.29）：</code></strong><br><fancybox><br><img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200401014215.png"><br></fancybox></p><p><strong><code>第二个月（3.29-4.29）：</code></strong><br><fancybox><br><img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200430205029.png"><br></fancybox></p><h4 id="高光时刻"><a href="#高光时刻" class="headerlink" title="高光时刻"></a><strong>高光时刻</strong></h4><p>下面是昨天下午的时候，博客被访问的情况，同时（五分钟内）被 8 人访问，可以称得上是高光时刻了。</p><fancybox><img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200331163105.png"></fancybox><h4 id="来源分析"><a href="#来源分析" class="headerlink" title="来源分析"></a><strong>来源分析</strong></h4><p>下面可以看出来，主要的来源除了直接访问，就三个：知乎、十年之约和 Zonelyn.com。</p><ul><li>最后的域名是由于在知乎留的链接没及时换成新域名导致的访问跳转，到后面更换了就降下来了；</li><li>十年之约就是个博客汇总网站，贡献了小部分访问；</li><li>最后就是知乎了，可以说域名那部分也基本是知乎来的，可能直接的访问贡献了 570+ 的浏览。这基本算六分之一的访问量了。请记住蓝色折线的曲线，基本和知乎上的文章阅读量保持相同的趋势。</li></ul><p><strong><code>第一个月（2.29-3.29）：</code></strong><br><fancybox><br><img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200401011958.png"><br></fancybox></p><p><strong><code>第二个月（3.29-4.29）：</code></strong><br><fancybox><br><img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200430205500.png"><br></fancybox></p><h4 id="受众最多的页面"><a href="#受众最多的页面" class="headerlink" title="受众最多的页面"></a><strong>受众最多的页面</strong></h4><p>非<a href="/csc/index.html">工具页</a>莫属了，这个小工具创建于三月初，此页面九成的访客来自于知乎的文章，下面顺带把知乎的近两个月的数据分析一下。由上面分析，剩下 100+ 的流量应该来自直接访问，因为这个链接被我放在主页顶部按钮中了，十分明显。</p><p><strong><code>第一个月（2.29-3.29）：</code></strong><br><fancybox><br><img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200401012615.png"><br></fancybox></p><p><strong><code>第二个月（3.29-4.29）：</code></strong><br><fancybox><br><img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200430205844.png"><br></fancybox></p><h4 id="知乎近俩月的分析"><a href="#知乎近俩月的分析" class="headerlink" title="知乎近俩月的分析"></a><strong>知乎近俩月的分析</strong></h4><p>自从二月中旬开始，我陆陆续续的整理了下自己去年的申请材料，放到了知乎上，还搞了个专栏，事实证明，我这次的无心插柳，已经产生不小的影响了。主要的几篇文章，收藏率超过 10%，并且专栏的关注人数已经四百多人，传播效应已经开始，预计在近一个月还会继续增多，因为前天又把剩余的几份材料整理了一下放到专栏了，申请正好用到。</p><p><strong><code>第一个月（2.29-3.29）：</code></strong><br><fancybox><br><img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200401013613.png"><br></fancybox></p><p><strong><code>第二个月（3.29-4.29）：</code></strong><br><fancybox><br><img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200430233223.png"><br></fancybox></p><br>对于这几篇介绍经验的文章，在前期（那时只有两篇）曾经一度异常火爆，每天的单篇收藏都能一两百，评论都有十几二十条。不过现在稳定了，基本上每天就几个提问，不会占据我太多时间。<p><strong><code>第一个月（2.29-3.29）：</code></strong><br><fancybox><br><img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200401013222.png"><br></fancybox></p><p><strong><code>第二个月（3.29-4.29）：</code></strong><br><fancybox><br><img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200430210307.png"><br></fancybox></p><br>目前的状态是专栏里的东西基本齐全了，我已经想不到还有什么能分享的了，借助这个专栏和这几篇文章，我也收获了几百关注，但就是没有爆款回答就是了（没精力回答那种细致的问题），赞同数还是少的可怜的，基本都来自专栏文章。后续的想法是，把我最近他们问我的问题和回答，大概得有两三百个问题（知乎文章和私信以及QQ上问的），搞一个问答系统，这样我就不用每次都回答了，构思中。<p><strong><code>第一个月（2.29-3.29）:</code></strong><br><fancybox><br><img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200401013939.png"><br></fancybox></p><p><strong><code>第二个月（3.29-4.29）:</code></strong><br><fancybox><br><img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200430232451.png"><br></fancybox></p><h4 id="结识朋友"><a href="#结识朋友" class="headerlink" title="结识朋友"></a><strong>结识朋友</strong></h4><p>在文章数据统计中的大约 400 条的留言里，大约有一半是我的回复。大概就是解答一下疑惑而已，而且大部分问题都可以被解决掉，但也有部分人加了我的QQ好友，为此，近一个月的时间里我收获了四十多位新朋友，当然最终有部分人问完问题之后还成了好朋友，里面又有几个是可能会来我这里的，到时候请我吃饭也说不定（偷笑。</p><p>总之，虽然是我给他们解答，但也非常感谢他们问我，他们基本上全都是很优秀的，除了一些TOP的大佬，还有些“明星”，比如里面竟然有一位是“<a href="https://www.baidu.com/s?wd=90%E5%90%8E%E9%A9%AC%E5%85%8B+%C2%B7%E5%90%90%E6%B8%A9&rsv_spt=1&rsv_iqid=0xb69b4625006da6cb&issp=1&f=8&rsv_bp=0&rsv_idx=2&ie=utf-8&rqlang=&tn=baiduhome_pg&ch=" target="_blank" rel="external nofollow noopener noreferrer">90后马克 ·吐温</a>”的老哥，我当时都惊到了，他们倒还是都很平易近人的，和他们交流起来也没什么，光环褪去，大家都是普通人。</p><p><strong><code>第一个月（44人）:</code></strong><br><fancybox><br><img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200401023931.png"><br></fancybox></p><p><strong><code>第二个月（188人）:</code></strong><br><fancybox><br><img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200430231712.png"><br></fancybox></p><h4 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a><strong>写在最后</strong></h4><p>今天是愚人节，但却没心情愚人，还是希望疫情快点过去，好让正常的学习和生活重新回归。不过目前看来还是遥遥无期啊，什么时候出门大街上有人戴口罩了，疫情估计就快结束了。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;马上五一了，数据已更新至建站来的两个月。&lt;/strong&gt; 以下为原文：终于告别三月，迎来了四月，在二月的最后一天，我把主题换成了Volantis，并且最近一段时间一直在对其进行美化和微调，现在是四月的第一天，整整一个月过去了，博客运行的如何呢？让我来借助统计分析来给大家康康。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Daily_Life" scheme="https://www.cz5h.com/categories/Daily-Life/"/>
    
    
      <category term="总结" scheme="https://www.cz5h.com/tags/%E6%80%BB%E7%BB%93/"/>
    
      <category term="知乎" scheme="https://www.cz5h.com/tags/%E7%9F%A5%E4%B9%8E/"/>
    
      <category term="站点统计" scheme="https://www.cz5h.com/tags/%E7%AB%99%E7%82%B9%E7%BB%9F%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>引入基于LCloud的页面访问统计</title>
    <link href="https://www.cz5h.com/article/4e53.html"/>
    <id>https://www.cz5h.com/article/4e53.html</id>
    <published>2020-03-24T23:00:00.000Z</published>
    <updated>2020-03-28T04:24:14.757Z</updated>
    
    <content type="html"><![CDATA[<p>由于本主题（Volantis）使用的 Valine 暂时仍然无法正常开启 Counter 页面计数，所以，在单一页面上展示出该页面的访问量就成了一个问题。不蒜子是个解决方式，但其加载巨慢而且仍属于个人维护、并不稳定。所以综合到最后，选择采用 LeanCloud 来完成这一功能。其主要思路就是访问页面时到对应的 LeanCloud 数据表中更新访问次数。不过暂时只能记录PV值。</p><a id="more"></a><h3 id="从零开始引入计数代码"><a href="#从零开始引入计数代码" class="headerlink" title="从零开始引入计数代码"></a><strong>从零开始引入计数代码</strong></h3><h4 id="第一步"><a href="#第一步" class="headerlink" title="第一步"></a><strong>第一步</strong></h4><p>新增leancloud代码主体（lc_visitors.ejs），主要实现的是访问页面时leancloud访问数+1，并且返回该页面已有的访问量。</p><figure class="highlight javascript"><figcaption><span>~\volantis\_third-party\lc_visitors.ejs</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line">  </span><br><span class="line">&lt;!--由于主题包含valine.js，所以只引入av.js--&gt;</span><br><span class="line">&lt;script src=<span class="string">"//cdn1.lncld.net/static/js/2.5.0/av-min.js"</span>&gt;&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;script type="text/</span>javascript<span class="string">"&gt;</span></span><br><span class="line"><span class="string">if(true)&#123;</span></span><br><span class="line"><span class="string">    var leancloud_app_id  = 'WbLE88***********gzGzoHsz';  //y=偷懒直接硬写了</span></span><br><span class="line"><span class="string">    var leancloud_app_key = 'ycqjmt***********RkrdO';</span></span><br><span class="line"><span class="string">    AV.init(&#123;</span></span><br><span class="line"><span class="string">        appId: leancloud_app_id,</span></span><br><span class="line"><span class="string">        appKey: leancloud_app_key</span></span><br><span class="line"><span class="string">    &#125;);</span></span><br><span class="line"><span class="string">    var pageViewsLength = $("</span>.pageViews<span class="string">").length;</span></span><br><span class="line"><span class="string">    var isIndex = $("</span>.pageViews<span class="string">").length &gt; 1 ?true:false;</span></span><br><span class="line"><span class="string">    function showTime() &#123;</span></span><br><span class="line"><span class="string">        var Pageview = AV.Object.extend("</span>Pageview<span class="string">");</span></span><br><span class="line"><span class="string">        if(isIndex)&#123;</span></span><br><span class="line"><span class="string">            $("</span>.pageViews<span class="string">").each(function()&#123;</span></span><br><span class="line"><span class="string">                showPageViewsNum($(this), Pageview);</span></span><br><span class="line"><span class="string">            &#125;);</span></span><br><span class="line"><span class="string">        &#125;else&#123;</span></span><br><span class="line"><span class="string">            addPageViewsNum($("</span>.pageViews<span class="string">"));</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    //仅显示阅读量</span></span><br><span class="line"><span class="string">    function showPageViewsNum(ele, Pageview)&#123;</span></span><br><span class="line"><span class="string">        var id = ele.attr('id').trim();</span></span><br><span class="line"><span class="string">        var query = new AV.Query("</span>Pageview<span class="string">");</span></span><br><span class="line"><span class="string">        query.equalTo("</span>post_id<span class="string">", id);</span></span><br><span class="line"><span class="string">        query.descending('createdAt');</span></span><br><span class="line"><span class="string">        query.limit(1);</span></span><br><span class="line"><span class="string">        query.find().then(function (results) &#123;</span></span><br><span class="line"><span class="string">            $(document.getElementById(id)).text(results &amp;&amp; results.length &gt; 0?  results[0].get("</span>count<span class="string">") : '0');</span></span><br><span class="line"><span class="string">        &#125;, function (error) &#123;</span></span><br><span class="line"><span class="string">             $(document.getElementById(id)).text('0');</span></span><br><span class="line"><span class="string">        &#125;);</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    //追加并显示阅读量</span></span><br><span class="line"><span class="string">    function addPageViewsNum(ele)&#123;</span></span><br><span class="line"><span class="string">        var id = ele.attr('id').trim();</span></span><br><span class="line"><span class="string">        var title = ele.attr('data-flag-title').trim();</span></span><br><span class="line"><span class="string">        var query = new AV.Query("</span>Pageview<span class="string">");</span></span><br><span class="line"><span class="string">        query.equalTo("</span>post_id<span class="string">", id);</span></span><br><span class="line"><span class="string">        query.descending('createdAt');</span></span><br><span class="line"><span class="string">        query.limit(1);</span></span><br><span class="line"><span class="string">        query.find().then(function (results) &#123;</span></span><br><span class="line"><span class="string">            if (results.length == 0) &#123;</span></span><br><span class="line"><span class="string">               saveNewPageview(id, title);</span></span><br><span class="line"><span class="string">               return;</span></span><br><span class="line"><span class="string">            &#125;</span></span><br><span class="line"><span class="string">            var pageview = results[0];</span></span><br><span class="line"><span class="string">            var count = pageview.get("</span>count<span class="string">");</span></span><br><span class="line"><span class="string">            count++;</span></span><br><span class="line"><span class="string">            pageview.set("</span>count<span class="string">", count);</span></span><br><span class="line"><span class="string">            pageview.set("</span>title<span class="string">", title);</span></span><br><span class="line"><span class="string">            pageview.save().then(function (pageview) &#123;</span></span><br><span class="line"><span class="string">                $(document.getElementById(id)).text(count);</span></span><br><span class="line"><span class="string">            &#125;)</span></span><br><span class="line"><span class="string">        &#125;, function (error) &#123;</span></span><br><span class="line"><span class="string">            saveNewPageview(id, title);</span></span><br><span class="line"><span class="string">        &#125;)</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    function saveNewPageview(id, title) &#123;</span></span><br><span class="line"><span class="string">       var Pageview = AV.Object.extend("</span>Pageview<span class="string">");</span></span><br><span class="line"><span class="string">       var query = new Pageview;</span></span><br><span class="line"><span class="string">       query.save(&#123;</span></span><br><span class="line"><span class="string">           post_id: id,</span></span><br><span class="line"><span class="string">           title: title,</span></span><br><span class="line"><span class="string">           count: 1</span></span><br><span class="line"><span class="string">       &#125;).then(function (pageview) &#123;</span></span><br><span class="line"><span class="string">           $(document.getElementById(id)).text(pageview.count);</span></span><br><span class="line"><span class="string">       &#125;, function (error) &#123;</span></span><br><span class="line"><span class="string">       &#125;);</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    if(pageViewsLength)&#123; //此处判断等于 1 在执行 可去除循环</span></span><br><span class="line"><span class="string">        showTime();</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&lt;/script&gt;</span></span><br></pre></td></tr></table></figure><h4 id="第二步"><a href="#第二步" class="headerlink" title="第二步"></a><strong>第二步</strong></h4><p>将leancloud代码主体（lc_visitors.ejs）引入到原来的主题模板中，紧跟在jquery的后面。</p><figure class="highlight javascript"><figcaption><span>~\volantis\layout\_partial\scripts.ejs</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">  </span><br><span class="line">&lt;%- js(theme.plugins.jquery) %&gt;</span><br><span class="line">&lt;!--引入代码--&gt;</span><br><span class="line">&lt;%- partial(<span class="string">'_third-party/lc_visitors'</span>) %&gt;</span><br><span class="line">&lt;% <span class="keyword">if</span> (theme.search &amp;&amp; theme.search.enable) &#123; %&gt;</span><br><span class="line">  ... ...</span><br><span class="line">&lt;% &#125; %&gt;</span><br><span class="line">... ...</span><br></pre></td></tr></table></figure><h4 id="第三步"><a href="#第三步" class="headerlink" title="第三步"></a><strong>第三步</strong></h4><p>在原页面中插入显示访问量的代码段，这里我直接紧跟在meta信息的阅读时长统计后面了。</p><figure class="highlight javascript"><figcaption><span>~\volantis\_meta\wordcount.ejs</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">  </span><br><span class="line">&lt;% <span class="keyword">if</span> (theme.plugins.wordcount) &#123; %&gt;</span><br><span class="line">  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"new-meta-item wordcount"</span>&gt;</span><br><span class="line">    &lt;a <span class="class"><span class="keyword">class</span></span>=<span class="string">'notlink'</span>&gt;</span><br><span class="line">      &lt;i <span class="class"><span class="keyword">class</span></span>=<span class="string">"&lt;%- theme.meta.wordcount.icon_wordcount %&gt;"</span> aria-hidden=<span class="string">"true"</span>&gt;&lt;<span class="regexp">/i&gt;</span></span><br><span class="line"><span class="regexp">      &lt;p&gt;&lt;%- __('post.wordcount', wordcount(post.content))%&gt;&lt;/</span>p&gt;</span><br><span class="line">    &lt;<span class="regexp">/a&gt;</span></span><br><span class="line"><span class="regexp">  &lt;/</span>div&gt;</span><br><span class="line">  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"new-meta-item readtime"</span>&gt;</span><br><span class="line">    &lt;a <span class="class"><span class="keyword">class</span></span>=<span class="string">'notlink'</span>&gt;</span><br><span class="line">      &lt;i <span class="class"><span class="keyword">class</span></span>=<span class="string">"&lt;%- theme.meta.wordcount.icon_duration %&gt;"</span> aria-hidden=<span class="string">"true"</span>&gt;&lt;<span class="regexp">/i&gt;</span></span><br><span class="line"><span class="regexp">      &lt;p&gt;&lt;%- __('post.duration', min2read(post.content))%&gt;&lt;/</span>p&gt;</span><br><span class="line">    &lt;<span class="regexp">/a&gt;</span></span><br><span class="line"><span class="regexp">  &lt;/</span>div&gt;</span><br><span class="line">  &lt;!--添加显示访问量的代码（火焰图标+℃）--&gt;</span><br><span class="line">  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"new-meta-item readtime"</span>&gt;</span><br><span class="line">    &lt;a <span class="class"><span class="keyword">class</span></span>=<span class="string">'notlink'</span>&gt;</span><br><span class="line">      &lt;i <span class="class"><span class="keyword">class</span></span>=<span class="string">"fas fa-fire"</span> aria-hidden=<span class="string">"true"</span>&gt;&lt;<span class="regexp">/i&gt;</span></span><br><span class="line"><span class="regexp">      &lt;p&gt;&lt;span id="&lt;%= post.path %&gt;" class="pageViews" data-flag-title="&lt;%= post.title || post.path %&gt;"&gt;&lt;/</span>span&gt;&lt;<span class="regexp">/p&gt;</span></span><br><span class="line"><span class="regexp">    &lt;/</span>a&gt;</span><br><span class="line">  &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;% &#125; %&gt;</span></span><br></pre></td></tr></table></figure><p><strong>注意：</strong>以上只有部署后访问才有作用，在本地访问无效果。</p><h3 id="LeanCloud并发查询429错误"><a href="#LeanCloud并发查询429错误" class="headerlink" title="LeanCloud并发查询429错误"></a><strong>LeanCloud并发查询429错误</strong></h3><p>这是第二次遇到了，每次鼓捣LeanCloud都会出现这个问题，主要还是其对访问做了限制。错误主要出现在列表页面，因为会同时查询多篇文章的访问量，所以会导致触发429错误。</p><p><strong>我上次的解决方案：</strong><a href="https://www.cz5h.com/article/502d.html#%E5%9C%A8each%E5%BE%AA%E7%8E%AF%E4%B8%AD%E8%BF%9B%E8%A1%8C%E5%BB%B6%E6%97%B6%E6%93%8D%E4%BD%9C">应对LeanCloud对于查询性能的限制</a></p><p>具体只需修改以下代码：</p><figure class="highlight javascript"><figcaption><span>~\volantis\_third-party\lc_visitors.ejs</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">  </span><br><span class="line">&lt;!--循环间隔地控制查询的触发--&gt;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">showTime</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(isIndex)&#123;</span><br><span class="line"><span class="keyword">var</span> cnt = $(<span class="string">".pageViews"</span>).length;</span><br><span class="line"><span class="keyword">var</span> i = <span class="number">0</span>; </span><br><span class="line"><span class="keyword">var</span> interval = setInterval(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(i &gt;= cnt) </span><br><span class="line">clearInterval(interval);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">showPageViewsNum($($(<span class="string">".pageViews"</span>)[i++]), AV.Object.extend(<span class="string">"Pageview"</span>));</span><br><span class="line">&#125;,<span class="number">500</span>);</span><br><span class="line"></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">addPageViewsNum($(<span class="string">".pageViews"</span>));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">... ...</span><br></pre></td></tr></table></figure><p><strong>最终效果：</strong></p><p><img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200328050502.png" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;由于本主题（Volantis）使用的 Valine 暂时仍然无法正常开启 Counter 页面计数，所以，在单一页面上展示出该页面的访问量就成了一个问题。不蒜子是个解决方式，但其加载巨慢而且仍属于个人维护、并不稳定。所以综合到最后，选择采用 LeanCloud 来完成这一功能。其主要思路就是访问页面时到对应的 LeanCloud 数据表中更新访问次数。不过暂时只能记录PV值。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Hexo相关" scheme="https://www.cz5h.com/categories/Hexo%E7%9B%B8%E5%85%B3/"/>
    
    
      <category term="JavaScript" scheme="https://www.cz5h.com/tags/JavaScript/"/>
    
      <category term="JQuery" scheme="https://www.cz5h.com/tags/JQuery/"/>
    
      <category term="LeanCloud" scheme="https://www.cz5h.com/tags/LeanCloud/"/>
    
  </entry>
  
  <entry>
    <title>使用ValineAdmin完善评论系统</title>
    <link href="https://www.cz5h.com/article/269.html"/>
    <id>https://www.cz5h.com/article/269.html</id>
    <published>2020-03-20T23:00:00.000Z</published>
    <updated>2020-03-28T03:50:51.625Z</updated>
    
    <content type="html"><![CDATA[<p>在更换主题后的这一段时间里，博客运行良好，内容我也在不断完善，评论自然是继承原来的 Valine 也运行正常，但是，其实从上个主题开始，我就没有配置邮件的评论系统，所以对于评论的查看，我一直都是登陆 LeanCloud 后台来完成的。当然，默认的邮件提醒我是配置了的，但那个太简陋了，几乎没有使用价值。关于 ValineAdmin，群友早就配置过了，这次终于轮到自己来配一下了。</p><a id="more"></a><h3 id="为什么我现在才配"><a href="#为什么我现在才配" class="headerlink" title="为什么我现在才配"></a><strong>为什么我现在才配</strong></h3><p>因为我一直有个误区，那就是完成该配置需要在LeanCloud完成实名认证，但实际是不需要的！<strong>配置 ValineAdmin 是不需要 LeanCloud 实名认证的！</strong>（目前我仍然没有进行实名认证）</p><p>而且依托于Valine使用的应用/仓库即可，完全没有其他要求。</p><h3 id="添加-ValineAdmin-步骤"><a href="#添加-ValineAdmin-步骤" class="headerlink" title="添加 ValineAdmin 步骤"></a><strong>添加 ValineAdmin 步骤</strong></h3><p><strong>明确：</strong></p><p>这里用的是“添加”，也就是说，ValineAdmin 和原来的 Valine 完全可以共存，互不影响，不需要重新配置。</p><h4 id="1-遵循-Valine-官方教程完成-Valine-的配置"><a href="#1-遵循-Valine-官方教程完成-Valine-的配置" class="headerlink" title="1. 遵循 Valine 官方教程完成 Valine 的配置"></a><strong>1. 遵循 Valine 官方教程完成 Valine 的配置</strong></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;valine.js.org&#x2F;quickstart.html</span><br></pre></td></tr></table></figure><h4 id="2-进入配置页面"><a href="#2-进入配置页面" class="headerlink" title="2. 进入配置页面"></a><strong>2. 进入配置页面</strong></h4><fancybox><img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200325221024.png"></fancybox><h4 id="3-源码部署填写以下仓库"><a href="#3-源码部署填写以下仓库" class="headerlink" title="3. 源码部署填写以下仓库"></a><strong>3. 源码部署填写以下仓库</strong></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;github.com&#x2F;DesertsP&#x2F;Valine-Admin.git</span><br></pre></td></tr></table></figure><h4 id="4-填写16个自定义变量"><a href="#4-填写16个自定义变量" class="headerlink" title="4. 填写16个自定义变量"></a><strong>4. 填写16个自定义变量</strong></h4><fancybox><img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200325223141.png"></fancybox><p>注意事项：</p><ul><li>务必确认已开通SMTP服务，以QQ为例需要发送短信来获得授权码；</li><li>SMTP_USER 和 SENDER_EMAIL 务必正确<fancybox><img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200325224019.png"></fancybox></li><li><strong>AKISMET_KEY</strong> 请到<a href="https://akismet.com/" target="_blank" rel="external nofollow noopener noreferrer">akismet.com</a>注册并选择<strong>免费版</strong>获得秘钥，否则在LeanCloud实例日志内会出现“Akismet key 异常!”的错误。</li></ul><h4 id="5-给博主通知的邮件模板"><a href="#5-给博主通知的邮件模板" class="headerlink" title="5. 给博主通知的邮件模板"></a><strong>5. 给博主通知的邮件模板</strong></h4><ul><li>BLOGGER_EMAIL 就是博主的邮箱；</li><li>MAIL_SUBJECT_ADMIN 邮件标题；</li><li>MAIL_TEMPLATE_ADMIN 邮件正文，注意变量位置，其他完全是HTML标签，可自己重写：</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">head</span>&gt;</span><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"border-top:2px solid #12ADDB;box-shadow:0 1px 3px #AAAAAA;line-height:180%;padding:0 15px 12px;margin:50px auto;font-size:12px;"</span>&gt;</span> </span><br><span class="line">   <span class="tag">&lt;<span class="name">h2</span> <span class="attr">style</span>=<span class="string">"border-bottom:1px solid #DDD;font-size:14px;font-weight:normal;padding:13px 0 10px 0px;"</span>&gt;</span>您在<span class="tag">&lt;<span class="name">a</span> <span class="attr">style</span>=<span class="string">"text-decoration:none;color: #12ADDB;"</span> <span class="attr">href</span>=<span class="string">"$&#123;SITE_URL&#125;"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>$&#123;SITE_NAME&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span>上的文章有了新的评论<span class="tag">&lt;/<span class="name">h2</span>&gt;</span> </span><br><span class="line">   <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">strong</span>&gt;</span>$&#123;NICK&#125;<span class="tag">&lt;/<span class="name">strong</span>&gt;</span>回复说：<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"background-color: #f5f5f5;padding: 10px 15px;margin:18px 0;word-wrap:break-word;"</span>&gt;</span></span><br><span class="line">     $&#123;COMMENT&#125;</span><br><span class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">p</span>&gt;</span> 您可以点击<span class="tag">&lt;<span class="name">a</span> <span class="attr">style</span>=<span class="string">"text-decoration:none; color:#12addb"</span> <span class="attr">href</span>=<span class="string">"$&#123;POST_URL&#125;"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>查看回复的完整內容<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span> </span><br><span class="line">   <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">strong</span>&gt;</span>评论页面为<span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">strong</span>&gt;</span>$&#123;POST_URL&#125;<span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>效果：</strong></p><fancybox><img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200325231410.png"></fancybox><h4 id="6-给评论者通知的邮件模板"><a href="#6-给评论者通知的邮件模板" class="headerlink" title="6. 给评论者通知的邮件模板"></a><strong>6. 给评论者通知的邮件模板</strong></h4><ul><li>MAIL_SUBJECT 邮件标题，注意措辞；</li><li>MAIL_TEMPLATE 邮件正文，需要美化！</li><li><strong>不同于站长的通知邮件，这是给评论者看的，必须花里胡哨，这是面子工程！</strong></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">head</span>&gt;</span><span class="tag">&lt;/<span class="name">head</span>&gt;</span> </span><br><span class="line"> <span class="tag">&lt;<span class="name">body</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"border-radius: 10px 10px 10px 10px;font-size:13px; color: #555555;width: 666px;font-family:'Century Gothic','Trebuchet MS','Hiragino Sans GB',微软雅黑,'Microsoft Yahei',Tahoma,Helvetica,Arial,'SimSun',sans-serif;margin:50px auto;border:1px solid #eee;max-width:100%;background: #ffffff repeating-linear-gradient(-45deg,#fff,#fff 1.125rem,transparent 1.125rem,transparent 2.25rem);box-shadow: 0 1px 5px rgba(0, 0, 0, 0.15);"</span>&gt;</span> </span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"width:100%;background:#49BDAD;color:#ffffff;border-radius: 10px 10px 0 0;background-image: -moz-linear-gradient(0deg, rgb(67, 198, 184), rgb(255, 209, 244));background-image: -webkit-linear-gradient(0deg, rgb(67, 198, 184), rgb(255, 209, 244));height: 66px;"</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">b</span>&gt;</span><span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"font-size:15px;word-break:break-all;padding: 23px 32px;margin:0;background-color: hsla(0,0%,100%,.4);border-radius: 10px 10px 0 0;color:#257db9"</span>&gt;</span>您在<span class="tag">&lt;<span class="name">a</span> <span class="attr">style</span>=<span class="string">"text-decoration:none;color:#257db9"</span> <span class="attr">href</span>=<span class="string">"$&#123;SITE_URL&#125;"</span>&gt;</span>「长征部落格」<span class="tag">&lt;/<span class="name">a</span>&gt;</span>上的留言有新回复啦！<span class="tag">&lt;/<span class="name">p</span>&gt;</span> <span class="tag">&lt;/<span class="name">b</span>&gt;</span> </span><br><span class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span> </span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"margin:40px auto;width:90%"</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">b</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>尊敬的 <span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">"color:#7777ff"</span>&gt;</span>$&#123;PARENT_NICK&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span> 您好，您曾在该页面/文章：<span class="tag">&lt;/<span class="name">p</span>&gt;</span> <span class="tag">&lt;/<span class="name">b</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"background: #fafafa repeating-linear-gradient(-45deg,#fff,#fff 1.125rem,transparent 1.125rem,transparent 2.25rem);box-shadow: 0 2px 5px rgba(0, 0, 0, 0.15);margin:20px 0px;padding:15px;border-radius:5px;font-size:14px;color:#555555;"</span>&gt;</span> </span><br><span class="line">     <span class="tag">&lt;<span class="name">b</span>&gt;</span>$&#123;POST_URL&#125;<span class="tag">&lt;/<span class="name">b</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">b</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>发布了如下评论：<span class="tag">&lt;/<span class="name">p</span>&gt;</span> <span class="tag">&lt;/<span class="name">b</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"background: #fafafa repeating-linear-gradient(-45deg,#fff,#fff 1.125rem,transparent 1.125rem,transparent 2.25rem);box-shadow: 0 2px 5px rgba(0, 0, 0, 0.15);margin:20px 0px;padding:15px;border-radius:5px;font-size:14px;color:#555555;"</span>&gt;</span> </span><br><span class="line">     <span class="tag">&lt;<span class="name">b</span>&gt;</span>$&#123;PARENT_COMMENT&#125; <span class="tag">&lt;/<span class="name">b</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">b</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>刚刚，用户 <span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">"color:#7777ff"</span>&gt;</span>$&#123;NICK&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span> 给您的回复如下：<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">b</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"background: #fafafa repeating-linear-gradient(-45deg,#fff,#fff 1.125rem,transparent 1.125rem,transparent 2.25rem);box-shadow: 0 2px 5px rgba(0, 0, 0, 0.15);margin:20px 0px;padding:15px;border-radius:5px;font-size:14px;color:#555555;"</span>&gt;</span> </span><br><span class="line">     <span class="tag">&lt;<span class="name">b</span>&gt;</span>$&#123;COMMENT&#125;<span class="tag">&lt;/<span class="name">b</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">b</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>您可以点击 <span class="tag">&lt;<span class="name">a</span> <span class="attr">style</span>=<span class="string">"text-decoration:none; color:#d25353"</span> <span class="attr">href</span>=<span class="string">"$&#123;POST_URL&#125;#comments"</span>&gt;</span>查看回复的完整內容<span class="tag">&lt;/<span class="name">a</span>&gt;</span>，欢迎再次光临<span class="tag">&lt;<span class="name">a</span> <span class="attr">style</span>=<span class="string">"text-decoration:none; color:#257db9"</span> <span class="attr">href</span>=<span class="string">"$&#123;SITE_URL&#125;"</span>&gt;</span> $&#123;SITE_NAME&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span>。<span class="tag">&lt;/<span class="name">p</span>&gt;</span> <span class="tag">&lt;/<span class="name">b</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="css"><span class="selector-tag">a</span><span class="selector-pseudo">:link</span>&#123;<span class="attribute">text-decoration</span>:none&#125;<span class="selector-tag">a</span><span class="selector-pseudo">:visited</span>&#123;<span class="attribute">text-decoration</span>:none&#125;<span class="selector-tag">a</span><span class="selector-pseudo">:hover</span>&#123;<span class="attribute">text-decoration</span>:none&#125;<span class="selector-tag">a</span><span class="selector-pseudo">:active</span>&#123;<span class="attribute">text-decoration</span>:none&#125;</span><span class="tag">&lt;/<span class="name">style</span>&gt;</span> </span><br><span class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;<span class="name">center</span>&gt;</span> </span><br><span class="line">   <span class="tag">&lt;<span class="name">b</span>&gt;</span>由LeanCloud强力驱动<span class="tag">&lt;/<span class="name">b</span>&gt;</span> </span><br><span class="line">   <span class="tag">&lt;<span class="name">br</span> /&gt;</span> </span><br><span class="line">   <span class="tag">&lt;<span class="name">b</span>&gt;</span>Copyright <span class="symbol">&amp;copy;</span> 2017-2020 <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://www.cz5h.com"</span> <span class="attr">style</span>=<span class="string">"color:auto;"</span>&gt;</span>CZ5H.COM<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">b</span>&gt;</span> </span><br><span class="line">   <span class="tag">&lt;<span class="name">br</span> /&gt;</span> </span><br><span class="line">   <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://www.cz5h.com"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">style</span>=<span class="string">"height:25px !important;"</span> <span class="attr">src</span>=<span class="string">"https://i.loli.net/2020/03/25/NbrlqVpzLBj8Xta.png"</span> /&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;/<span class="name">center</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;<span class="name">br</span> /&gt;</span> </span><br><span class="line">  <span class="tag">&lt;<span class="name">br</span> /&gt;</span>  </span><br><span class="line"> <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>收到邮件的评论者看到的效果：</strong></p><fancybox><img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200325231904.png"></fancybox><h4 id="7-变量填写完毕后部署"><a href="#7-变量填写完毕后部署" class="headerlink" title="7. 变量填写完毕后部署"></a><strong>7. 变量填写完毕后部署</strong></h4><fancybox><img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200325230147.png"></fancybox><h4 id="完成之后的问题"><a href="#完成之后的问题" class="headerlink" title="完成之后的问题"></a><strong>完成之后的问题</strong></h4><p>以上全部完成，基本可以实现比较友善的评论系统，但仍然存在一个大问题：</p><p><strong>LeanCloud 的强制休眠！</strong></p><p>该休眠会导致有很大概率用户在评论时实例是休眠状态，从而导致邮件提醒的不可触发，即以上整个邮件系统并不是 100% 可用，迫切需要一种比较好的休眠策略。（好像每天必须休眠6小时）</p><p><strong>可能的解决措施：</strong></p><p>使用定时器激活：<code>*/20 7-23 * * *</code></p><fancybox><img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200326233829.png"></fancybox><h3 id="附录，文字版"><a href="#附录，文字版" class="headerlink" title="附录，文字版"></a><strong>附录，文字版</strong></h3><p><strong>自定义环境变量：</strong></p><table><thead><tr><th align="left">NAME</th><th align="left">VALUE</th><th align="left">备注</th><th align="right">NO.</th></tr></thead><tbody><tr><td align="left"><code>SITE_NAME</code></td><td align="left"><code>长征部落格(cz5h.com)</code></td><td align="left"><code>基本信息</code></td><td align="right"><code>01</code></td></tr><tr><td align="left"><code>SITE_URL</code></td><td align="left"><code>https://www.cz5h.com</code></td><td align="left"><code>基本信息</code></td><td align="right"><code>02</code></td></tr><tr><td align="left"><code>SENDER_NAME</code></td><td align="left"><code>胖五</code></td><td align="left"><code>SMTP配置</code></td><td align="right"><code>03</code></td></tr><tr><td align="left"><code>SENDER_EMAIL</code></td><td align="left"><code>tian*****@qq.com</code></td><td align="left"><code>SMTP配置</code></td><td align="right"><code>04</code></td></tr><tr><td align="left"><code>SMTP_USER</code></td><td align="left"><code>tian*****@qq.com</code></td><td align="left"><code>SMTP配置</code></td><td align="right"><code>05</code></td></tr><tr><td align="left"><code>SMTP_PASS</code></td><td align="left"><code>rekyxiqasdo*****</code></td><td align="left"><code>SMTP配置</code></td><td align="right"><code>06</code></td></tr><tr><td align="left"><code>SMTP_SERVICE</code></td><td align="left"><code>QQ</code></td><td align="left"><code>SMTP配置</code></td><td align="right"><code>07</code></td></tr><tr><td align="left"><code>SMTP_HOST</code></td><td align="left"><code>smtp.qq.com</code></td><td align="left"><code>SMTP配置</code></td><td align="right"><code>08</code></td></tr><tr><td align="left"><code>SMTP_PORT</code></td><td align="left"><code>465</code></td><td align="left"><code>SMTP配置</code></td><td align="right"><code>09</code></td></tr><tr><td align="left"><code>SMTP_SECURE</code></td><td align="left"><code>true</code></td><td align="left"><code>SMTP配置</code></td><td align="right"><code>10</code></td></tr><tr><td align="left"><code>BLOGGER_EMAIL</code></td><td align="left"><code>tian*****@qq.com</code></td><td align="left"><code>站长通知</code></td><td align="right"><code>11</code></td></tr><tr><td align="left"><code>MAIL_SUBJECT_ADMIN</code></td><td align="left"><code>${SITE_NAME}上有新评论！</code></td><td align="left"><code>站长通知</code></td><td align="right"><code>12</code></td></tr><tr><td align="left"><code>MAIL_TEMPLATE_ADMIN</code></td><td align="left"><a href="#5-%E7%BB%99%E5%8D%9A%E4%B8%BB%E9%80%9A%E7%9F%A5%E7%9A%84%E9%82%AE%E4%BB%B6%E6%A8%A1%E6%9D%BF">详见第五段代码</a></td><td align="left"><code>站长通知</code></td><td align="right"><code>13</code></td></tr><tr><td align="left"><code>MAIL_SUBJECT</code></td><td align="left"><code>尊敬的『${PARENT_NICK}』，您在${SITE_NAME}上的评论刚刚收到了一条新回复！</code></td><td align="left"><code>用户通知</code></td><td align="right"><code>14</code></td></tr><tr><td align="left"><code>MAIL_TEMPLATE</code></td><td align="left"><a href="#6-%E7%BB%99%E8%AF%84%E8%AE%BA%E8%80%85%E9%80%9A%E7%9F%A5%E7%9A%84%E9%82%AE%E4%BB%B6%E6%A8%A1%E6%9D%BF">详见第六段代码</a></td><td align="left"><code>用户通知</code></td><td align="right"><code>15</code></td></tr><tr><td align="left"><code>AKISMET_KEY</code></td><td align="left"><code>4b02d0d*****</code></td><td align="left"><code>评论过滤</code></td><td align="right"><code>16</code></td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在更换主题后的这一段时间里，博客运行良好，内容我也在不断完善，评论自然是继承原来的 Valine 也运行正常，但是，其实从上个主题开始，我就没有配置邮件的评论系统，所以对于评论的查看，我一直都是登陆 LeanCloud 后台来完成的。当然，默认的邮件提醒我是配置了的，但那个太简陋了，几乎没有使用价值。关于 ValineAdmin，群友早就配置过了，这次终于轮到自己来配一下了。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Hexo相关" scheme="https://www.cz5h.com/categories/Hexo%E7%9B%B8%E5%85%B3/"/>
    
    
      <category term="Valine" scheme="https://www.cz5h.com/tags/Valine/"/>
    
      <category term="LeanCloud" scheme="https://www.cz5h.com/tags/LeanCloud/"/>
    
      <category term="评论系统" scheme="https://www.cz5h.com/tags/%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>在中文维基百科新建用户框</title>
    <link href="https://www.cz5h.com/article/27ff.html"/>
    <id>https://www.cz5h.com/article/27ff.html</id>
    <published>2020-03-17T23:00:00.000Z</published>
    <updated>2020-03-19T18:45:48.656Z</updated>
    
    <content type="html"><![CDATA[<p>目前中文维基百科仍然由于某些原因无法在大陆被直接访问，但仍然有很多用户喜欢使用Wikipedia，关于Wiki，我的理解就是个协作的知识系统，可以多人编辑并且多人维护，这也是维基百科实际的壮大方式，非常浅显的方式但却在当时引领了一种新的内容组织方式，所以维基百科也就不断壮大。中文维基百科和原本的英文维基并不是镜像，属于交集模式，目前有专门的翻译小组做互相翻译的工作。</p><a id="more"></a><p>由以上我们也可以得知，其实维基百科的模式“可以被复制”，但这是个市场占有问题，你可以自建自己的Wiki服务，但不太可能壮大至维基百科的规模，但也有例外，比如 <a href="https://zh.moegirl.org/zh-hant/Mainpage" target="_blank" rel="external nofollow noopener noreferrer">萌娘百科</a>，但很显然，这是和普通百科几乎无交集的专业百科。扯远了…</p><p>对于用户框，就是种维基百科内自定义的显示框，可以直观的以词条的方式来展示用户的各方面，主要用来描述<strong>用户</strong>的属性，可以包罗万象，因为维基百科允许自建用户框，由此，各式各样的用户框被用户创造出来，一般你可以找到你想要的用户框。</p><h3 id="搜索现有用户框方式一"><a href="#搜索现有用户框方式一" class="headerlink" title="搜索现有用户框方式一"></a><strong>搜索现有用户框方式一</strong></h3><p><strong>注意：以下若出现Wiki或者维基百科均特指“中文维基百科”</strong></p><p><strong>1. 使用[Category:]来当种子</strong></p><ul><li>这样可以直接找到一类人，然后通过类别可以打开该类别下的全部用户<br><img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200319011030.png" alt><br><img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200319011237.png" alt></li></ul><p><strong>2. 拷贝该用户页面内的用户框</strong></p><ul><li>点击编辑找到对应内容即可，如果你偷懒，完全可以全部拷贝一份，然后再去掉你不需要的词条。<br><img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200319033335.png" alt></li></ul><h3 id="搜索现有用户框方式二"><a href="#搜索现有用户框方式二" class="headerlink" title="搜索现有用户框方式二"></a><strong>搜索现有用户框方式二</strong></h3><p>通过<a href="https://zh.wikipedia.org/wiki/Category:%E7%BB%B4%E5%9F%BA%E7%99%BE%E7%A7%91%E7%94%A8%E6%88%B7%E6%A1%86" target="_blank" rel="external nofollow noopener noreferrer">维基百科用户框</a>汇总类别进行搜寻。</p><br><hr><br><p>那么如果某个用户框并不存在怎么办呢？当然可以自建，因为现存的用户框都是不同的用户自建的，当然你也可以创建你自己想展示的用户框。</p><p>在创建的过程中，需要注意几点：</p><ul><li>图片资源必须是维基百科的内部资源，也就是说，你必须将图片传到维基百科上，使用维基百科的内链才可以。</li><li>创建后的用户框可以被全部用户所搜索到并使用</li></ul><h3 id="创建新用户框的简单版一"><a href="#创建新用户框的简单版一" class="headerlink" title="创建新用户框的简单版一"></a><strong>创建新用户框的简单版一</strong></h3><p><code>图片+文字模式</code></p><h4 id="学习简单例子“非吸烟者”"><a href="#学习简单例子“非吸烟者”" class="headerlink" title="学习简单例子“非吸烟者”"></a><strong>学习简单例子“非吸烟者”</strong></h4><p><a href="https://zh.wikipedia.org/wiki/Template:User_%E9%9D%9E%E5%90%B8%E7%85%99%E8%80%85" target="_blank" rel="external nofollow noopener noreferrer">Template:User 非吸烟者</a></p><p>以上是用户框的固定格式，Template:User 后跟空格，再跟用户框名称，填入搜索框就可以搜出该用户框详细内容：</p><p><img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200319014000.png" alt></p><p>点击编辑，即可看到这个用户框的源代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;Userbox</span><br><span class="line">|id&#x3D; [[File:No smoking symbol.svg|45px]]</span><br><span class="line">|id-c&#x3D; #FFFFFF</span><br><span class="line">|info&#x3D; 这个用户&#39;&#39;&#39;[[吸烟|&lt;span style&#x3D;&quot;color:#0000FF;&quot;&gt;不吸烟&lt;&#x2F;span&gt;]]&#39;&#39;&#39;。</span><br><span class="line">|info-c&#x3D; #789CFF</span><br><span class="line">|info-s&#x3D; 10</span><br><span class="line">|info-fc&#x3D; #2E2E2E</span><br><span class="line">|border-c&#x3D; #000000</span><br><span class="line">&#125;&#125;&lt;includeonly&gt;[[Category:不吸烟的维基人]]&lt;&#x2F;includeonly&gt;&lt;noinclude&gt;</span><br><span class="line">&#123;&#123;Documentation&#125;&#125;</span><br><span class="line">&lt;&#x2F;noinclude&gt;</span><br></pre></td></tr></table></figure><h4 id="代码解读"><a href="#代码解读" class="headerlink" title="代码解读"></a><strong>代码解读</strong></h4><p>现在我们就可以得出构建方法了，对应上述内容每条的意义如下。</p><p><code>File:No smoking symbol.svg|45px</code></p><p>左侧贴图和贴图大小，一般是45×45，这个图片必须是属于维基百科站内的图片链接，如果你要用自己的图片，可以先上传到维基百科上，但一般偷懒可以直接搜索维基百科内已有的图片，直接复制图片链接改为 File:XX 的形式即可。</p><p><img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200319014827.png" alt></p><p><code>id-c= #FFFFFF</code></p><p>左侧贴图图片的背景颜色（如果背景透明）。</p><p><code>info= AAA&#39;&#39;&#39;[[BBB|CCC]]&#39;&#39;&#39;</code></p><p>AAA：正常文本。</p><p>‘’’[[BBB|CCC]]’’’：这是维基百科的超链接语法，写BBB即表明超链接为 zh.wikipedia.org/wiki/BBB，竖线（|）之后的CCC是超链接的文本，可以写入html代码，比如用<span>控制文字的颜色。</span></p><p><code>info-c= #789CFF</code></p><p>右侧文本部分的背景颜色。</p><p><code>info-s= 10</code></p><p>右侧文本字体大小，一般是10。</p><p><code>info-fc= #2E2E2E</code></p><p>右侧普通文本字体颜色，使用html样式控制的字体的大小和颜色不受影响。</p><p><code>border-c= #000000</code></p><p>整个用户框的边框颜色，一般是黑色。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;Userbox</span><br><span class="line">  ...</span><br><span class="line">&#125;&#125;</span><br><span class="line">&lt;includeonly&gt;</span><br><span class="line">    [[Category:不吸烟的维基人]]</span><br><span class="line">&lt;&#x2F;includeonly&gt;&lt;noinclude&gt;</span><br><span class="line">&#123;&#123;Documentation&#125;&#125;</span><br><span class="line">&lt;&#x2F;noinclude&gt;</span><br></pre></td></tr></table></figure><p>以上内容是整体的必要的用户框结构。</p><h4 id="以此新建用户框"><a href="#以此新建用户框" class="headerlink" title="以此新建用户框"></a><strong>以此新建用户框</strong></h4><p>比如我现在新建<strong>“这个用户喜欢使用Hexo搭建博客”</strong>这个用户框，基本步骤有以下几步：</p><ul><li><strong>1. 获取图片链接</strong></li></ul><p>懒得找，直接上传一张Hexo图片，按照引导上传即可。</p><p><img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200319021539.png" alt></p><p>选择本地上传即可，即只上传至中文维基。</p><p><img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200319022139.png" alt></p><p>上传成功我们就可以拿到文件链接了，此处文本链接就是 <a href="https://zh.wikipedia.org/wiki/File:Hexo-logo.png" target="_blank" rel="external nofollow noopener noreferrer">https://zh.wikipedia.org/wiki/File:Hexo-logo.png</a>，我们构造用户框只需要使用最后的那部分，即 File:Hexo-logo.png。</p><p><img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200319022253.png" alt></p><ul><li><strong>2. 新建用户框词条</strong></li></ul><p>比如我们的用户框名称就叫<strong>Template:User 静态博客</strong>，那么就直接去搜索框搜索，然后进入新建页面。</p><p><img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200319023128.png" alt></p><ul><li><strong>3. 构造代码</strong></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;Userbox</span><br><span class="line">|id&#x3D; [[File:Hexo-logo.png|45px]]</span><br><span class="line">|id-c&#x3D; #FFFFFF</span><br><span class="line">|info&#x3D; 这个用户喜欢使用&#39;&#39;&#39;[[Github|&lt;span style&#x3D;&quot;color:#0000FF;&quot;&gt;HEXO&lt;&#x2F;span&gt;]]&#39;&#39;&#39;搭建博客。</span><br><span class="line">|info-c&#x3D; #66ccff</span><br><span class="line">|info-s&#x3D; 10</span><br><span class="line">|info-fc&#x3D; #2E2E2E</span><br><span class="line">|border-c&#x3D; #000000</span><br><span class="line">&#125;&#125;&lt;includeonly&gt;[[Category:使用hexo的维基人]]&lt;&#x2F;includeonly&gt;&lt;noinclude&gt;</span><br><span class="line">&#123;&#123;Documentation&#125;&#125;</span><br><span class="line">&lt;&#x2F;noinclude&gt;</span><br></pre></td></tr></table></figure><p>注意：以上内容的Category并非我新建的，这是已有的分类，当然也可以新建分类，但最好的选择是讲我们新建的用户框归入其他已有分类，这样可以使更多人发现我们的用户框。</p><ul><li><strong>4. 填入词条新建页面</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200319033547.png" alt></p><p>预览无误，点击发布即可获得最终的新鲜的用户框：<a href="https://zh.wikipedia.org/wiki/Template:User_%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2" target="_blank" rel="external nofollow noopener noreferrer">Template:User_静态博客</a>。</p><p><img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200319023802.png" alt></p><ul><li><strong>5. 使用</strong></li></ul><p>在所有的Wiki页面中，使用  {{User 静态博客}}  即可插入上述用户框了！</p><h3 id="创建新用户框的简单版二"><a href="#创建新用户框的简单版二" class="headerlink" title="创建新用户框的简单版二"></a><strong>创建新用户框的简单版二</strong></h3><p><strong>文字+文字模式</strong> </p><p>挖坑。</p><h3 id="进阶"><a href="#进阶" class="headerlink" title="进阶"></a><strong>进阶</strong></h3><p>挖坑。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;目前中文维基百科仍然由于某些原因无法在大陆被直接访问，但仍然有很多用户喜欢使用Wikipedia，关于Wiki，我的理解就是个协作的知识系统，可以多人编辑并且多人维护，这也是维基百科实际的壮大方式，非常浅显的方式但却在当时引领了一种新的内容组织方式，所以维基百科也就不断壮大。中文维基百科和原本的英文维基并不是镜像，属于交集模式，目前有专门的翻译小组做互相翻译的工作。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Daily_Life" scheme="https://www.cz5h.com/categories/Daily-Life/"/>
    
    
      <category term="中文维基" scheme="https://www.cz5h.com/tags/%E4%B8%AD%E6%96%87%E7%BB%B4%E5%9F%BA/"/>
    
      <category term="花里胡哨" scheme="https://www.cz5h.com/tags/%E8%8A%B1%E9%87%8C%E8%83%A1%E5%93%A8/"/>
    
      <category term="编程" scheme="https://www.cz5h.com/tags/%E7%BC%96%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>船新版本的个人博客</title>
    <link href="https://www.cz5h.com/article/6f83.html"/>
    <id>https://www.cz5h.com/article/6f83.html</id>
    <published>2020-02-26T23:00:00.000Z</published>
    <updated>2020-06-18T22:33:10.406Z</updated>
    
    <content type="html"><![CDATA[<p>终于花了些时间，把博客整体迁移到新主题Volantis了，原主题Indigo我还是非常喜欢，但感觉有点朴素，自己又瞎改主题改到无法更新最新版本，所以换个好看的主题就成了待办事项之一。</p><a id="more"></a><p>此外，原先的博客一直托管在Github Pages，在百度是0索引的，这就意味着国内搜索引擎是无法找到我的，所以换到Coding托管，也成了待办事项之一；最后，我也一直在物色好的域名，现在都快成米商了，不过还是找到了一个不错的域名，更新解析，也是待办事项之一。最终，昨天把三件事全做了，在这里记录下，顺便说一下博客一般需要的一些辅助显示模块。</p><h4 id="使用Volantis主题"><a href="#使用Volantis主题" class="headerlink" title="使用Volantis主题"></a><strong>使用Volantis主题</strong></h4><p>注意：我这里并不是单纯的“更新”，而是保留原站点的前提下用一个新主题而已，因为 Indigo 主题确实非常好用，并且自己也对其做了很多改动，已经比较稳定了，没必要丢弃不用，所以后面我用了二级域名 old.cz5h.com 来解析到原来的 Github 空间，对于新主题，我也只是把_post内的文章搞过来了而已，其他的小模块还需要慢慢完善，至于有哪些小模块，在文章最后会详细说明。</p><p>这次我换的主题是 Volantis，貌似是原先的 Materi-X （可能拼错了）主题，本来想用 butterfly 的，但是 bf 还是有点花哨，最终我感觉目前的这个主题比较不错，而且是有主页的主题哦！</p><p>新建个博客文件夹，hexo init，然后 clone 新主题，然后把 _post 复制过来，然后安装必要的主题插件，然后安装 deploy 插件，最后开始配置 yml 站点配置文件和主题配置文件（两个）：</p><ul><li>比对原站点的配置文件先修改一部分；</li><li>看到无关链接（主题自带的链接）或文字，要么注释掉要么改成你自己的；</li><li>修改 yml 配置文件后要 hexo s 本地测试下，如此反复；</li><li>填写一些和旧站点不一样的配置项，比如 deploy。</li></ul><p>完成之后，还要注意搜索并替换一下 post 文章文件夹中的旧域名，现在要统一换成新域名，虽然不换也可以访问到（做了重定向），但既然准备用这个新域名了，那就得做好逐渐清退旧域名的措施，首先就是文章内的链接内容。旧站点由于用 old.cz5h.com 来绑定了，所以也要把旧站点内（notepad++全局搜索替换）的 zonelyn.com 全部换成 old.cz5h.com。最终的解析托管示意图如下：</p><p><img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200228170857.png" alt></p><h4 id="换域名和旧域名重定向"><a href="#换域名和旧域名重定向" class="headerlink" title="换域名和旧域名重定向"></a><strong>换域名和旧域名重定向</strong></h4><p>目前手里的域名有六个，时间分先后，要是有看上的，欢迎联系我啊。</p><ul><li>whereareyou.site（301-&gt;zonelyn-&gt;cz5h）</li><li>z-tian.cn（未解析）</li><li>tzloop.cn（未解析）</li><li>zonelyn.com（301-&gt;cz5h）</li><li>cxmoe.com（挂了篇文章）</li><li>cz5h.com（主站）</li></ul><p>只用Github/Coding托管如何完成301重定向呢？答案是借助Pages服务+404页面，具体可以参见我之前写的 <a href="https://cz5h.com/article/2019-8-4%20Github%E6%89%98%E7%AE%A1%E7%AB%99%E7%82%B9%E7%9A%84%E5%9F%9F%E5%90%8D%E6%9B%B4%E6%8D%A2.html" target="_blank" rel="noopener">Github托管站点的域名更换</a>。</p><p>为了偷懒，我并没有更新最老的 whereareyou.site 这个域名的重定向，它还是被重定向到 zonelyn.com，因为我给 zonelyn 做了重定向，所以，最终连续两跳，whereareyou.site 还是能重定向到 cz5h.com。是的，你没猜错，两个域名重定向，我注册了两个Github小号。还有，虽然是从Github-&gt;重定向到了Coding的空间，但我实际体验完全感觉不出来，果然是单向墙。</p><p>Coding的域名绑定就很简单了，解析个A记录和WWW记录就OK了。</p><p><strong>二级域名 old.cz5h.com ：</strong>本来是不想动原来的域名的（因为用了新域名），但想了一下还是正规一点吧，而且也方便日后管理，所以就把 Github 托管的旧版本绑定了新域名的二级域名，最终域名的解析如下：</p><p><img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200227185839.png" alt></p><p>完成之后还要去 Github Pages 修改绑定的域名，同时注意需要将之前旧域名的解析一并删除，否则 Pages 服务会提醒报错的。</p><h4 id="博客模块之我见"><a href="#博客模块之我见" class="headerlink" title="博客模块之我见"></a><strong>博客模块之我见</strong></h4><p>本次也算是从零开始新建一个博客站点，当然对博客的美化也要从零开始，那么到底需要改动什么呢，简单写一下我的想法。（基本仅针对目前的Volantis主题）</p><h5 id="主题色调"><a href="#主题色调" class="headerlink" title="主题色调"></a><strong>主题色调</strong></h5><ul><li>背景图：深色调还是浅色调，决定着前景标签内容的浅色调还是深色调。鄙人非常喜欢深色调的背景色，更可以突出文章主体的文字部分。</li><li>各种语法的颜色搭配：例如 tab 缩进的 code 段落，不同的主题样式肯定不同，我又很喜欢用这种方式写，所以要修改下对应的颜色搭配。</li><li>滚动条的样式：又宽又粗的滚动条实在是太丑了，必须要换掉。</li><li>整个页面 content 的宽度：目前很多主题的文章页宽度很窄，在台式机上看着更严重，所以一定要调宽一些，还更利于图片的展示。</li></ul><h5 id="访问统计"><a href="#访问统计" class="headerlink" title="访问统计"></a><strong>访问统计</strong></h5><p>这是一个重要的功能，但比较好加入。一般添加个不蒜子就可以了，但我喜欢追踪自己网站的访客，所以，我添加了 Google Analyse、百度统计、CNZZ的统计，并且加入了 revolvermaps 可视化小插件来做实时显示。</p><p><strong>其他：</strong>注意SEO用的sitemap需要重新生成，还有robots.txt也要重新搞。</p><h5 id="Posts属性类显示"><a href="#Posts属性类显示" class="headerlink" title="Posts属性类显示"></a><strong>Posts属性类显示</strong></h5><p>博客必备的一个部分，这个包括标签云、分类统计等，可以方便的放在这个主题右侧的插件部分。</p><h5 id="文章页的署名信息"><a href="#文章页的署名信息" class="headerlink" title="文章页的署名信息"></a><strong>文章页的署名信息</strong></h5><p>这个要根据自己的调整，最好要包含这部分。</p><h5 id="评论部分"><a href="#评论部分" class="headerlink" title="评论部分"></a><strong>评论部分</strong></h5><p>思来想后，还是决定采用Valine做评论吧，Gitalk得登陆啊，可有人连Github是什么都不知道，我的博客又不是正经的技术博客，所以…Valine真香。</p><h5 id="站点的头脚"><a href="#站点的头脚" class="headerlink" title="站点的头脚"></a><strong>站点的头脚</strong></h5><p><strong>前置index：</strong>虽然不是纯首页，但基本起到首页的作用了，而且效果还不错，准备把一些社交链接放在首页上。</p><p><strong>Header：</strong>这里对应旧站点的自定义页面，由于原先旧站点有些主题的自定义语法，所以直接拿过来会解析出错误，得花时间重新写一下这些自定义页面。</p><p><strong>Footer：</strong>由于用了深色背景，目前的页脚全黑的基本看不到东西，准备还是类似旧站点那样，在页脚写上基本信息，以及友链的链接，然后放上<strong>访问人数统计</strong>和<strong>全站文字统计</strong>的文本。</p><h5 id="SEO完善"><a href="#SEO完善" class="headerlink" title="SEO完善"></a><strong>SEO完善</strong></h5><p>默认的新建站点是没有这些SEO相关的文件的，需要借助第三方插件在渲染时生成 sitemap.xml 和 baidu_sitemap.xml，然后还需要自己新建一个 robots.txt 文件，因为是 hexo 站点，所以在生成xml文件之后，这个 robots.txt 文件的内容基本上是固定的。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">User-agent: *</span><br><span class="line">Allow: &#x2F;</span><br><span class="line">Allow: &#x2F;archives&#x2F;</span><br><span class="line">Allow: &#x2F;categories&#x2F;</span><br><span class="line">Allow: &#x2F;tags&#x2F;</span><br><span class="line">Allow: &#x2F;about&#x2F;</span><br><span class="line">Disallow: &#x2F;vendors&#x2F;</span><br><span class="line">Disallow: &#x2F;js&#x2F;</span><br><span class="line">Disallow: &#x2F;css&#x2F;</span><br><span class="line">Disallow: &#x2F;fonts&#x2F;</span><br><span class="line">Disallow: &#x2F;fancybox&#x2F;</span><br><span class="line">Sitemap: https:&#x2F;&#x2F;你的域名&#x2F;sitemap.xml</span><br><span class="line">Sitemap: https:&#x2F;&#x2F;你的域名&#x2F;baidusitemap.xml</span><br></pre></td></tr></table></figure><p>注意：以上文件放在 hexo 的source文件夹或者主题的source文件夹里都可以；另外，这里如果有自定义的路径，比如 /friends/（友链），也需要将其加入进去（添加新的 Allow 项），否则蜘蛛是不能爬到相关页面的。</p><h5 id="恢复卡片的tags"><a href="#恢复卡片的tags" class="headerlink" title="恢复卡片的tags"></a><strong>恢复卡片的tags</strong></h5><p>这是后续的改进了，现在的首页文章卡片没有标签信息，但我想把标签信息加上，这样会更加详细一点，初步想法就是在卡片的底部加个footer，然后把当前文章的tags读出来放到上面，再把footer贴到原来的卡片最下面。</p><h5 id="进阶的功能"><a href="#进阶的功能" class="headerlink" title="进阶的功能"></a><strong>进阶的功能</strong></h5><p><strong>相关文章：</strong>貌似这个主题支持。<br><strong>热门文章：</strong>调用统计的接口把。</p><p>还有很多功能可能主题内就带着，毕竟只接触了这个主题一天而已，后续慢慢探索，初步的感觉是这个主题比较完善，支持非常多的扩展功能（已经写好了），而且貌似作者还在更新这个项目。</p><h4 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a><strong>写在最后</strong></h4><p>这也算半个新的开始吧，目前自己已经在博客里写了不少东西了，原先的主题也看厌烦了，本来是想用 typecho 的，但想了下还得备案，所以干脆不用了，还是用回老本行 hexo 吧，而且现在各种操作非常熟练了，写作模式也基本固定了（自从前几天确定用Github+jsdeliver当图床后）。搬回 coding 后，以后在百度就能见到我了，而且我在外网访问 coding 的站点没任何卡顿，希望 coding 的 pages 服务比以前提升了，可不要让我失望啊！</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;终于花了些时间，把博客整体迁移到新主题Volantis了，原主题Indigo我还是非常喜欢，但感觉有点朴素，自己又瞎改主题改到无法更新最新版本，所以换个好看的主题就成了待办事项之一。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Hexo相关" scheme="https://www.cz5h.com/categories/Hexo%E7%9B%B8%E5%85%B3/"/>
    
    
      <category term="Hexo" scheme="https://www.cz5h.com/tags/Hexo/"/>
    
      <category term="Indigo" scheme="https://www.cz5h.com/tags/Indigo/"/>
    
      <category term="Volantis" scheme="https://www.cz5h.com/tags/Volantis/"/>
    
      <category term="重定向" scheme="https://www.cz5h.com/tags/%E9%87%8D%E5%AE%9A%E5%90%91/"/>
    
  </entry>
  
  <entry>
    <title>优雅的备份博客内的外链图片</title>
    <link href="https://www.cz5h.com/article/509f.html"/>
    <id>https://www.cz5h.com/article/509f.html</id>
    <published>2020-02-24T23:00:00.000Z</published>
    <updated>2020-02-29T18:43:55.578Z</updated>
    
    <content type="html"><![CDATA[<p>这是我早就想做的一件事情了，但没想到不得不做这件事的这一天这么快就来临了。其实从一开始，我就对免费图床并不放心，在国内一直使用的是付费的作业部落的图片存储（阿里云的对象存储），但到外面以后作业部落已经实质性歇菜了，只得找其他的替代产品，这时我才真正意义上的接触并使用到了免费图床。先后用过sm.ms、微博图床、即刻图床（聚合性质的单一图床），直到有一天…</p><a id="more"></a><p>我的几篇文章的图片打不开了！于此，我是非常惊恐的，因为这些图片往往是信手拈来，上传即丢，本地并没有备份，这样显示突然显示不出来，你让我怎么找补，太难受了，遂将备份图片的事情提上日程。</p><h4 id="备份Hexo博客的全部图片"><a href="#备份Hexo博客的全部图片" class="headerlink" title="备份Hexo博客的全部图片"></a>备份Hexo博客的全部图片</h4><p>这是我感觉还算可以的、比较傻瓜式的一种解决方案。不需要安装任何软件和环境，全部借助Chrome插件完成。思路简单来说，就是先把全部的博客页面打开，然后使用图片抓取插件把打开的页面中的图片全部下载下来。很疯狂吧！</p><ul><li><a href="https://chrome.google.com/webstore/detail/linkclump/lfpjkncokllnfokkgpkobnkbkmelfefj" target="_blank" rel="external nofollow noopener noreferrer"><strong>Linkclump</strong></a></li></ul><p><img src="https://pic.imgdb.cn/item/5e55a9f96127cc0713bd2f39.jpg" alt></p><p>这是个批量打开链接的插件，可以在页面上框选，会自动识别网页链接（很棒的一点是可以过滤掉中转页面），然后同时在Chrome中打开，接下来就要用到图片抓取插件了。</p><ul><li><a href="https://chrome.google.com/webstore/detail/fatkun-batch-download-ima/nnjjahlikiabnchcpehcpkdeckfgnohf" target="_blank" rel="external nofollow noopener noreferrer"><strong>Fatkun图片批量下载</strong></a></li></ul><p><img src="https://pic.imgdb.cn/item/5e55b0176127cc0713be59d0.jpg" alt></p><p>这个插件可以直接搜刮浏览器内打开的页面内的全部图片，然后我们就可以下载这些图片了，注意这个工具可以按照像素值过滤图片，这样对一些很小的图片（比如恶心的百度统计的加载图hm）就可以排除在外。下载后的图片被放置在以页面命名的文件夹内，还是比较人性化的。</p><p>总结来说，其实上述操作相当于冷备份，可能我并不会用到这些图片，但当某些外链坏掉时，那么我就有本地备份可以替换，不然就像我这次一样，图片丢了找都找不回来了。</p><h4 id="找补缺损图片"><a href="#找补缺损图片" class="headerlink" title="找补缺损图片"></a>找补缺损图片</h4><p>这真的很难，我只能有部分重新截图了，还有小部分是存在微博相册的，这部分图片还在相册里，只是微博防盗链了。丢的那部分基本是用即刻图床传到阿里云的图床上了，但目前那批图片全挂了，涉及的文章可能有五六篇。</p><h4 id="目前使用的稳妥的方案"><a href="#目前使用的稳妥的方案" class="headerlink" title="目前使用的稳妥的方案"></a><strong>目前使用的稳妥的方案</strong></h4><p>目前所使用的是一款聚合图床，这个不同于“聚合性质的单一图床”，而应该是“分发多地的聚合图床”，即其会将图片分发到多个图床之上（没错，还是多个免费图床），这样虽然单一图床有挂掉的风险，但三个（其目前的分发数量）图床同时挂掉的风险基本很小，而且其还提供上传记录来允许用户进行追溯，当然也可以定期输出备份。</p><p><img src="https://pic.imgdb.cn/item/5e55a55d6127cc0713bcc207.jpg" alt></p><p>我不确定这个图床的存活时间，但理论上其不是个图床，只是个聚合索引平台，所以无论他倒不倒闭，只要把我上传历史的列表给我保留就OK。</p><p><img src="https://pic.imgdb.cn/item/5e55aa5c6127cc0713bd38c3.jpg" alt></p><p><strong>使用痛点：</strong>图片会压缩，上传慢，仍然看不到图片的原文件。</p><h4 id="GitHub-jsDelivr-PicGo"><a href="#GitHub-jsDelivr-PicGo" class="headerlink" title="GitHub+jsDelivr+PicGo"></a><strong>GitHub+jsDelivr+PicGo</strong></h4><p>先马一个<a href="https://segmentfault.com/a/1190000020240864" target="_blank" rel="external nofollow noopener noreferrer">教程</a>。</p><p>貌似这是我所追求的终极方案：我可以忍受图片挂掉（jsDelivr过滤了），但同时全部图片在GitHub的仓库里，图片的安全性不用担心，备份+外链一举两得。</p><p><strong>但目前我的使用痛点是：</strong>PicGo貌似只能以桌面客户端的形式进行配置，然后才能进行图床的搭建，但我目前用了两台台式+一台笔记本三个电脑，且Linux和Windows混用，或者说，我想在任何一台机器上不用配置就完成上传，显然目前好像是实现不了的。所以暂时观望一下，不过仍然是未来的尝试方向，Githuh仓库存图片太适合我这种小博客了，图不多，又安全。</p><h4 id="后记"><a href="#后记" class="headerlink" title="后记"></a><strong>后记</strong></h4><p>不用纠结了，直接用上了，花了十几分钟就配置好了，好像很简单。具体步骤如下：</p><ul><li>下载安装<a href="https://github.com/Molunerfinn/picgo/releases" target="_blank" rel="external nofollow noopener noreferrer">PicGO</a>，</li><li>新建个Github仓库，专门用来存储图片，</li><li>新建token，在 Setting/Developer Setting 里，<br><img src="https://pic.imgdb.cn/item/5e55b5486127cc0713befdcf.jpg" alt></li><li>打开安装好的PicGo，选择上传图床为 Github图床，然后进行配置，<br><img src="https://pic.imgdb.cn/item/5e55b7e46127cc0713bf3e58.jpg" alt></li><li>完毕。</li></ul><p>实验了一下，简直不要太好用，海外党的福音啊，上传非常快，而且比较易用，最关键的是不压缩！！没有质量损失！！下面这张图片就是放在Github图床的。</p><p><img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/20200226013518.png" alt></p><p><strong>感受一下 Github + jsDelivr 的绝佳体验吧</strong></p><p>下图就是放在Github的19.8M的长幅：</p><p><img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/IMG_20191026_141350-2.jpg" alt></p><p>第二个例子：带文字的QQ截图：</p><p><img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200226014944.png" alt></p><p><strong>放在我用的聚合图床的体验如下</strong></p><p>所使用的图床给他压缩成了3.9M：</p><p><img src="https://pic.imgdb.cn/item/5e55ba166127cc0713bf7272.jpg" alt></p><p>第二个例子：带文字的QQ截图：</p><p><img src="https://pic.imgdb.cn/item/5e55c0a46127cc0713c0447e.jpg" alt></p><p><strong>直观的比较（肉眼其实看不太出来，但某些图片差异会比较明显）</strong></p><p><img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200226020006.png" alt></p><p><strong>总结：从今天开始，Github + jsDelivr 就是我的御用图床了，除非它俩死一个，否则我不会再换图床了！还有个漫长的工作，就是把图片全部迁移到 Github 上！</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这是我早就想做的一件事情了，但没想到不得不做这件事的这一天这么快就来临了。其实从一开始，我就对免费图床并不放心，在国内一直使用的是付费的作业部落的图片存储（阿里云的对象存储），但到外面以后作业部落已经实质性歇菜了，只得找其他的替代产品，这时我才真正意义上的接触并使用到了免费图床。先后用过sm.ms、微博图床、即刻图床（聚合性质的单一图床），直到有一天…&lt;/p&gt;
    
    </summary>
    
    
      <category term="Hexo相关" scheme="https://www.cz5h.com/categories/Hexo%E7%9B%B8%E5%85%B3/"/>
    
    
      <category term="Hexo" scheme="https://www.cz5h.com/tags/Hexo/"/>
    
      <category term="图床" scheme="https://www.cz5h.com/tags/%E5%9B%BE%E5%BA%8A/"/>
    
      <category term="Chrome插件" scheme="https://www.cz5h.com/tags/Chrome%E6%8F%92%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>构建CUDA项目二周目翻车记录</title>
    <link href="https://www.cz5h.com/article/c85a.html"/>
    <id>https://www.cz5h.com/article/c85a.html</id>
    <published>2020-02-21T23:00:00.000Z</published>
    <updated>2020-02-29T18:43:55.576Z</updated>
    
    <content type="html"><![CDATA[<p>继上次的翻车之后，我算是有了些经验，同时机器上也装了些共通的依赖库，由于上项目最后的错误解决不了就放那里了，开始搞一下这个项目，这和上一个项目的目的是一样的，都是借助GPU进行加速计算的可视化工具，但此项目是用netbeans开发的，在文件结构上要比上一个复杂的多，而且采用的是CMakeList.txt的方式，应该算比较正式的C++项目了吧。</p><a id="more"></a><h4 id="题外话：nvcc和nvidia-smi显示的cuda版本不一样"><a href="#题外话：nvcc和nvidia-smi显示的cuda版本不一样" class="headerlink" title="题外话：nvcc和nvidia-smi显示的cuda版本不一样"></a><strong>题外话：nvcc和nvidia-smi显示的cuda版本不一样</strong></h4><p>这个问题最终被确定和程序运行的错误无关，但碰巧发现了，总觉得不一样怪怪的，而不一样的原因其实很简单，可以理解为一个版本是程序用的软件运行的Cuda版本，而另一个是开发用的Cuda版本。更多内容可以参见<a href="https://xbuba.com/questions/53422407" target="_blank" rel="external nofollow noopener noreferrer">这个帖子</a></p><p><img src="https://pic.imgdb.cn/item/5e554c3b6127cc0713b34bbb.jpg" alt></p><p>具体来说，就是确保Cuda安装后添加PATH：添加Cuda Bin的$PATH（即将以下行添加到您的~/.bashrc）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export PATH&#x3D;&#x2F;usr&#x2F;local&#x2F;cuda-10.1&#x2F;bin:&#x2F;usr&#x2F;local&#x2F;cuda-10.1&#x2F;NsightCompute-2019.1$&#123;PATH:+:$&#123;PATH&#125;&#125;</span><br></pre></td></tr></table></figure><p>注意：确保首先存在以下两个路径：/usr/local/cuda-10.1/bin和/usr/local/cuda-10.1/NsightCompute-2019.1（NsightCompute路径的结尾可能略有不同，具体取决于安装的Nsight计算版本。<br>然后，更新$LD_LIBRARY_PATH（即添加以下行，在~/bashrc内）。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export LD_LIBRARY_PATH&#x3D;&#x2F;usr&#x2F;local&#x2F;cuda-10.1&#x2F;lib64\$&#123;LD_LIBRARY_PATH:+:$&#123;LD_LIBRARY_PATH&#125;&#125;</span><br></pre></td></tr></table></figure><p>在此之后，两者nvcc和nvidia-smi（或nvtop）就应该打印相同版本的Cuda了</p><h4 id="尝试运行项目"><a href="#尝试运行项目" class="headerlink" title="尝试运行项目"></a><strong>尝试运行项目</strong></h4><p>构建这个项目，首先需要新建个cmake文件夹，然后进入该文件夹内，执行cmake命令，结果报错了，找不到Cuda（found 9.1），隐约感到这不是简单的路径问题，后来得到证实，这是在编译时没有指定版本导致的。</p><p><img src="https://pic.imgdb.cn/item/5e554c476127cc0713b34e06.jpg" alt></p><p>解决方案：在cmake时添加编译参数（参见<a href="https://groups.google.com/forum/#!topic/torch7/QkRk8eKAJLw" target="_blank" rel="external nofollow noopener noreferrer">这里</a>），如下所示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cmake -DCUDA_TOOLKIT_ROOT_DIR&#x3D;&#x2F;usr&#x2F;local&#x2F;cuda-10.2</span><br></pre></td></tr></table></figure><h4 id="常规的配置修改"><a href="#常规的配置修改" class="headerlink" title="常规的配置修改"></a><strong>常规的配置修改</strong></h4><p>修改arch参数，改为compute_50，由于是CMakeList.txt构建的，所以这次在这里修改。之后，修改对应的模块路径，修改简单的引用错误。</p><p><img src="https://pic.imgdb.cn/item/5e554c4a6127cc0713b34eae.jpg" alt></p><h4 id="make系列错误"><a href="#make系列错误" class="headerlink" title="make系列错误"></a><strong>make系列错误</strong></h4><p>做完以上操作后，cmake命令就基本没问题了，这里我们需要继续make，但是make到[66%]左右时会出现错误如下，我以为又是什么难以解决的问题，结果在make之前clean一下就ok了。</p><p>注意make之前一定要make -clean，不然会出错，详见<a href="https://stackoverflow.com/questions/38659115/make-fails-with-error-cannot-convert-stdistream-aka-stdbasic-istreamchar/48648056" target="_blank" rel="external nofollow noopener noreferrer">这里</a>，修改玩上述报错后会有新错误：</p><p><img src="https://pic.imgdb.cn/item/5e554c4d6127cc0713b34f27.jpg" alt></p><h4 id="链接时的recompile-with-fPTC"><a href="#链接时的recompile-with-fPTC" class="headerlink" title="链接时的recompile with -fPTC"></a><strong>链接时的recompile with -fPTC</strong></h4><p><img src="https://pic.imgdb.cn/item/5e554c576127cc0713b350f3.jpg" alt></p><p>可以看到已经编译完成了，但链接linking出错，在此，我推测是原有的静态链接文件（源代码带的）并不能在我的机器上正常工作，我需要重新编译生成一遍，之后我重新编译了ANN、Wordcloud、Cubu模块，发现大部分错误消失了，但又出现新错误，如下：</p><h4 id="恼人的Cubu模块"><a href="#恼人的Cubu模块" class="headerlink" title="恼人的Cubu模块"></a><strong>恼人的Cubu模块</strong></h4><p><img src="https://pic.imgdb.cn/item/5e554c616127cc0713b35299.jpg" alt></p><p>定位：graphdrawing 有问题，进而定位到Cubu，非常怀疑是libcubu.a这个静态链接库有问题，但我重新编译后生成的新文件去替换它之后，会出现以下错误，</p><p><img src="https://pic.imgdb.cn/item/5e554c656127cc0713b35339.jpg" alt></p><p>怀疑是Cubu的版本不对应，编译都不通过。用原来Cubu的include文件夹+新的libcubu.a，错误依旧：</p><p><img src="https://pic.imgdb.cn/item/5e554c616127cc0713b35299.jpg" alt></p><p>用新的include文件夹＋原来的libcubu.a，错误又会复现。基本确定是cubu重新编译的问题。原来的libcubu.a需要重新编译，但我现在编译出的静态链接文件libcubu.ａ又和原先的Cubu的版本好像不一样，所以导致上述错误。</p><p><strong>卡壳了。</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;继上次的翻车之后，我算是有了些经验，同时机器上也装了些共通的依赖库，由于上项目最后的错误解决不了就放那里了，开始搞一下这个项目，这和上一个项目的目的是一样的，都是借助GPU进行加速计算的可视化工具，但此项目是用netbeans开发的，在文件结构上要比上一个复杂的多，而且采用的是CMakeList.txt的方式，应该算比较正式的C++项目了吧。&lt;/p&gt;
    
    </summary>
    
    
      <category term="研究方向" scheme="https://www.cz5h.com/categories/%E7%A0%94%E7%A9%B6%E6%96%B9%E5%90%91/"/>
    
    
      <category term="C/C++" scheme="https://www.cz5h.com/tags/C-C/"/>
    
      <category term="调试" scheme="https://www.cz5h.com/tags/%E8%B0%83%E8%AF%95/"/>
    
      <category term="Cuda" scheme="https://www.cz5h.com/tags/Cuda/"/>
    
      <category term="CMakeList" scheme="https://www.cz5h.com/tags/CMakeList/"/>
    
  </entry>
  
  <entry>
    <title>重新编译运行C++/Cuda混编项目</title>
    <link href="https://www.cz5h.com/article/38ca.html"/>
    <id>https://www.cz5h.com/article/38ca.html</id>
    <published>2020-02-12T23:00:00.000Z</published>
    <updated>2020-02-29T18:43:55.574Z</updated>
    
    <content type="html"><![CDATA[<p>由于需要，最近得重新运行一个CUDA项目，但我苦于没有经验，只能从编译开始入门一下，不过还是不算难的，难的是原项目代码不保证质量，而且有若干无关文件，且运行环境未知、各模块的运行版本也不是很清楚，导致搞了一大堆操作（应该是正确的）最后却没跑起来，是的，这是一篇翻车笔记。</p><a id="more"></a><h4 id="从最简单的CMAKE示例开始"><a href="#从最简单的CMAKE示例开始" class="headerlink" title="从最简单的CMAKE示例开始"></a><strong>从最简单的CMAKE示例开始</strong></h4><p>为了打印文件结构，我们要先装一个tree来做准备。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tzloop@tzloop-GE62-6QC:~&#x2F;Desktop&#x2F;test1$ sudo apt install tree</span><br></pre></td></tr></table></figure><p>当前的例子的文件结构如下所示，这不是最简单的形式，但却是最接近项目结构的形式。具体的文件内容在<a href="https://blog.csdn.net/whahu1989/article/details/82078563" target="_blank" rel="external nofollow noopener noreferrer">这里</a>可以找到，在此仅做示例。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">tzloop@tzloop-GE62-6QC:~&#x2F;Desktop&#x2F;test1$ tree -C -L 2</span><br><span class="line">.</span><br><span class="line">├── bin</span><br><span class="line">├── build</span><br><span class="line">├── CMakeLists.txt</span><br><span class="line">├── include</span><br><span class="line">│   ├── testFunc1.h</span><br><span class="line">│   └── testFunc.h</span><br><span class="line">└── src</span><br><span class="line">    ├── CMakeLists.txt</span><br><span class="line">    ├── main.cpp</span><br><span class="line">    ├── testFunc1.cpp</span><br><span class="line">    └── testFunc.cpp</span><br></pre></td></tr></table></figure><p><strong>构建项目的步骤如下：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">tzloop@tzloop-GE62-6QC:~&#x2F;Desktop&#x2F;test1$ cd build&#x2F;</span><br><span class="line">tzloop@tzloop-GE62-6QC:~&#x2F;Desktop&#x2F;test1&#x2F;build$ cmake ..</span><br><span class="line">... ... </span><br><span class="line">-- Configuring done</span><br><span class="line">-- Generating done</span><br><span class="line">-- Build files have been written to: &#x2F;home&#x2F;tzloop&#x2F;Desktop&#x2F;test1&#x2F;build</span><br></pre></td></tr></table></figure><p>会发现：</p><ul><li>在build文件夹下已经出现一众的Cmake文件的src文件夹</li><li>并生成了Makefile文件，这是我们接下来进行cmake的保证</li><li>对于CmakeCache.txt，如果我们要重新cmake，则需要删除之</li></ul><p><img src="https://p.pstatp.com/origin/fe9d0001795727507df6" alt="image.png"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">tzloop@tzloop-GE62-6QC:~&#x2F;Desktop&#x2F;test1&#x2F;build$ make</span><br><span class="line">Scanning dependencies of target main</span><br><span class="line">[ 25%] Building CXX object src&#x2F;CMakeFiles&#x2F;main.dir&#x2F;main.cpp.o</span><br><span class="line">[ 50%] Building CXX object src&#x2F;CMakeFiles&#x2F;main.dir&#x2F;testFunc.cpp.o</span><br><span class="line">[ 75%] Building CXX object src&#x2F;CMakeFiles&#x2F;main.dir&#x2F;testFunc1.cpp.o</span><br><span class="line">[100%] Linking CXX executable ..&#x2F;..&#x2F;bin&#x2F;main</span><br><span class="line">[100%] Built target main</span><br></pre></td></tr></table></figure><p>在make（有百分比阶段）完成后，会发现编译完的o文件，被link（链接）完成，最后输出可执行的文件到bin目录，我们进入bin目录运行main会打印出正常结果。</p><p><img src="https://p.pstatp.com/origin/fed200015cf8f6ca112f" alt="image.png"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tzloop@tzloop-GE62-6QC:~&#x2F;Desktop&#x2F;test1&#x2F;build$ cd ..&#x2F;bin</span><br><span class="line">tzloop@tzloop-GE62-6QC:~&#x2F;Desktop&#x2F;test1&#x2F;bin$ .&#x2F;main</span><br><span class="line">data is 100</span><br><span class="line">data is 200</span><br></pre></td></tr></table></figure><h4 id="开始调试项目"><a href="#开始调试项目" class="headerlink" title="开始调试项目"></a><strong>开始调试项目</strong></h4><p>项目简介：一个CUDA项目，使用GLUI构建的操作界面，使用OPENGL来利用GPU加速计算，整体上是C++混编CUDA程序，采用Makefile构建。按道理直接make即可，但遇到的错误没想到一大堆！</p><p><img src="https://p.pstatp.com/origin/fe42000182f8a15e83fe" alt="image.png"></p><h4 id="Error1-clang-not-found"><a href="#Error1-clang-not-found" class="headerlink" title="Error1: clang++: not found"></a><strong>Error1: clang++: not found</strong></h4><p><strong>解决方法，</strong>安装clang即可：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tzloop@tzloop-GE62-6QC:sudo apt-get update</span><br><span class="line">tzloop@tzloop-GE62-6QC:sudo apt-get install clang</span><br></pre></td></tr></table></figure><h4 id="Error2-依赖的头文件找不到"><a href="#Error2-依赖的头文件找不到" class="headerlink" title="Error2: 依赖的头文件找不到"></a><strong>Error2: 依赖的头文件找不到</strong></h4><p>分析下Cmake文件，这里主要有三个模块需要引入到源文件中，分别是：ANN、TRIANGLE、CUBU。</p><p><img src="https://p.pstatp.com/origin/ff0e0000cceb02a06a34" alt="image.png"></p><p><strong>解决方法：</strong>重新安装。<br>要注意查看项目的源代码，是直接调用的，还是依赖编译环境的。前者需要将模块构建完成后放到项目中，而后者只需要在系统中安装相应模块，程序运行时会调用系统的库。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">tzloop@tzloop-GE62-6QC:~&#x2F;Desktop&#x2F;ProjectionExplain$ make</span><br><span class="line">clang++ -c -I. -Iinclude -O3 -g -m64 -I..&#x2F;CUBu -I..&#x2F;Geometry&#x2F;tsANN&#x2F;include -I..&#x2F;Geometry&#x2F;Triangle -I&#x2F;Developer&#x2F;NVIDIA&#x2F;CUDA-6.0&#x2F;include -I&#x2F;Developer&#x2F;NVIDIA&#x2F;CUDA-6.0&#x2F;samples&#x2F;common&#x2F;inc  -stdlib&#x3D;libstdc++  -o main.o main.cpp</span><br><span class="line">In file included from main.cpp:2:</span><br><span class="line">In file included from .&#x2F;include&#x2F;vis.h:9:</span><br><span class="line">.&#x2F;include&#x2F;pointcloud.h:4:10: fatal error: &#39;ANN&#x2F;ANN.h&#39; file not found</span><br><span class="line">#include &quot;ANN&#x2F;ANN.h&quot;</span><br><span class="line">         ^~~~~~~~~~~</span><br><span class="line">1 error generated.</span><br><span class="line">Makefile:32: recipe for target &#39;main.o&#39; failed</span><br><span class="line">make: *** [main.o] Error 1</span><br></pre></td></tr></table></figure><p>相关链接：<a href="https://blog.csdn.net/RobertChenGuangzhi/article/details/39995833" target="_blank" rel="external nofollow noopener noreferrer">Ubuntu中c++项目引用第三方包库的方法</a></p><h4 id="粗体文本Error3-Cubu-cmake-failed粗体文本"><a href="#粗体文本Error3-Cubu-cmake-failed粗体文本" class="headerlink" title="粗体文本Error3: Cubu cmake failed粗体文本"></a><strong>粗体文本</strong>Error3: Cubu cmake failed<strong>粗体文本</strong></h4><p>Cubu的安装要先下载，然后手动构建完后放到项目中，<a href="https://bitbucket.org/rmmartins/cubu/downloads/" target="_blank" rel="external nofollow noopener noreferrer">下载地址</a>。</p><p><strong>出现错误： missing: GLUI_INCLUDE_DIR GLUI_LIBRARY</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">tzloop@tzloop-GE62-6QC:~&#x2F;Desktop&#x2F;rmmartins-cubu-ee034cafdaa2$ mkdir -p build &amp;&amp; cd build &amp;&amp; cmake .. &amp;&amp; make install</span><br><span class="line">-- The C compiler identification is GNU 7.4.0</span><br><span class="line">-- The CXX compiler identification is GNU 7.4.0</span><br><span class="line">-- Check for working C compiler: &#x2F;usr&#x2F;bin&#x2F;cc</span><br><span class="line">-- Check for working C compiler: &#x2F;usr&#x2F;bin&#x2F;cc -- works</span><br><span class="line">-- Detecting C compiler ABI info</span><br><span class="line">-- Detecting C compiler ABI info - done</span><br><span class="line">-- Detecting C compile features</span><br><span class="line">-- Detecting C compile features - done</span><br><span class="line">-- Check for working CXX compiler: &#x2F;usr&#x2F;bin&#x2F;c++</span><br><span class="line">-- Check for working CXX compiler: &#x2F;usr&#x2F;bin&#x2F;c++ -- works</span><br><span class="line">-- Detecting CXX compiler ABI info</span><br><span class="line">-- Detecting CXX compiler ABI info - done</span><br><span class="line">-- Detecting CXX compile features</span><br><span class="line">-- Detecting CXX compile features - done</span><br><span class="line">-- Found OpenGL: &#x2F;usr&#x2F;lib&#x2F;x86_64-linux-gnu&#x2F;libOpenGL.so   </span><br><span class="line">-- Found GLUT: &#x2F;usr&#x2F;lib&#x2F;x86_64-linux-gnu&#x2F;libglut.so  </span><br><span class="line">CMake Error at &#x2F;usr&#x2F;share&#x2F;cmake-3.10&#x2F;Modules&#x2F;FindPackageHandleStandardArgs.cmake:137 (message):</span><br><span class="line">  Could NOT find GLUI (missing: GLUI_INCLUDE_DIR GLUI_LIBRARY)</span><br><span class="line">Call Stack (most recent call first):</span><br><span class="line">  &#x2F;usr&#x2F;share&#x2F;cmake-3.10&#x2F;Modules&#x2F;FindPackageHandleStandardArgs.cmake:378 (_FPHSA_FAILURE_MESSAGE)</span><br><span class="line">  cmake&#x2F;FindGLUI.cmake:106 (find_package_handle_standard_args)</span><br><span class="line">  CMakeLists.txt:8 (find_package)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-- Configuring incomplete, errors occurred!</span><br><span class="line">See also &quot;&#x2F;home&#x2F;tzloop&#x2F;Desktop&#x2F;rmmartins-cubu-ee034cafdaa2&#x2F;build&#x2F;CmakeFiles&#x2F;CmakeOutput.log&quot;.</span><br></pre></td></tr></table></figure><p><strong>解决方法：</strong>Cubu有其他模块的依赖，最好是先安装其他模块。对于只需要在系统安装的模块，可以直接一条命令安装：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tzloop@tzloop-GE62-6QC:~$ sudo apt-get install libtriangle-dev libann-dev libann-dev libfreeimage-dev libglew-dev libboost-all-dev libftgl-dev libfreetype6-dev libeigen3-dev</span><br></pre></td></tr></table></figure><h4 id="粗体文本Error4-glui-install-failed"><a href="#粗体文本Error4-glui-install-failed" class="headerlink" title="粗体文本Error4: glui install failed**"></a><strong>粗体文本</strong>Error4: glui install failed**</h4><p><strong>解决方法：</strong>我这里出现了安装 libglui-dev失败的提示，搜索后发现是Ubuntu不提供这个模块了，所以只能去github下载源代码手动构建。下载版本为glui-2.35，这里是<a href="https://github.com/libglui/glui/releases" target="_blank" rel="external nofollow noopener noreferrer">下载链接</a></p><p><img src="https://p.pstatp.com/origin/fed00000e7976cb49c5f" alt="image.png"></p><p>下载完成后进入目录，因为也是Makefile构建的，所以直接make：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">tzloop@tzloop-GE62-6QC:~&#x2F;Desktop&#x2F;glui-2.35$ make</span><br><span class="line">mkdir -p bin</span><br><span class="line">mkdir -p lib</span><br><span class="line">g++ -O0 -Wall -pedantic -I.&#x2F; -I.&#x2F;include -I&#x2F;usr&#x2F;X11R6&#x2F;include -c glui_add_controls.cpp</span><br><span class="line">… …</span><br></pre></td></tr></table></figure><p><img src="https://p.pstatp.com/origin/fed400011de7745d897c" alt="image.png"></p><p><strong>ANN模块同理</strong>，下载源文件tar.gz，在<a href="https://launchpad.net/ubuntu/+source/ann/1.1.2+doc-4.1" target="_blank" rel="external nofollow noopener noreferrer">这里下载</a> ，然后注意编译的方式，使用linux-g++</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tzloop@tzloop-GE62-6QC:~&#x2F;Desktop&#x2F;ann-1.1.2+doc$ make linux-g++</span><br><span class="line">… …</span><br></pre></td></tr></table></figure><p><strong>Triangle模块同理</strong>，在<a href="https://launchpad.net/ubuntu/+source/triangle/1.6-2" target="_blank" rel="external nofollow noopener noreferrer">这里下载</a> ，最后Cubu也要放进来（项目lib目录），然后改下名字（随意），这里把版本号去掉了。然后修改Malefile的对应的模块路径。</p><p><img src="https://p.pstatp.com/origin/ff8d000126fdf275af26" alt="image.png"></p><h4 id="穿插GLUT教程"><a href="#穿插GLUT教程" class="headerlink" title="穿插GLUT教程"></a><strong>穿插GLUT教程</strong></h4><p>教程在，<a href="https://ywnz.com/linuxbc/2371.html" target="_blank" rel="external nofollow noopener noreferrer">这里</a>，按照教程，我成功的运行了所给的demo，这表明我的Glut模块是安装正常的。</p><p><img src="https://p.pstatp.com/origin/ffa700009088e087c3c2" alt="image.png"></p><h4 id="Error5-Unsupported-gpu-architecture-‘compute-12’"><a href="#Error5-Unsupported-gpu-architecture-‘compute-12’" class="headerlink" title="Error5: Unsupported gpu architecture ‘compute_12’"></a><strong>Error5: Unsupported gpu architecture ‘compute_12’</strong></h4><p><img src="https://p.pstatp.com/origin/ffc80000c1265f013f50" alt="image.png"></p><p>问题的详细 <a href="https://askubuntu.com/questions/960238/nvcc-fatal-unsupported-gpu-architecture-compute-20" target="_blank" rel="external nofollow noopener noreferrer">纠错指导</a></p><p><strong>解决方法：</strong>这里需要修改Makefile中的arch参数，看自己的Cuda参数而定，这里我使用compute_50即正常。</p><h4 id="Error6-skelf-cu-pointcloud-not-found"><a href="#Error6-skelf-cu-pointcloud-not-found" class="headerlink" title="Error6: skelf.cu: pointcloud not found"></a><strong>Error6: skelf.cu: pointcloud not found</strong></h4><p><strong>解决方法：</strong>修改skelf.cu内部的头文件引用名称。</p><p><img src="https://p.pstatp.com/origin/fff20000b5d1c7149863" alt="image.png"></p><h4 id="Error7-cuda-ruantime-h-not-found"><a href="#Error7-cuda-ruantime-h-not-found" class="headerlink" title="Error7: cuda_ruantime.h not found"></a><strong>Error7: cuda_ruantime.h not found</strong></h4><p><img src="https://p.pstatp.com/origin/ff480000bfdc7b40260b" alt="image.png"></p><p><strong>解决方法：</strong>这是Cuda路径配置错误导致的，查看makefile中对应cuda的路径CUDAROOT，修改成本地环境对应的cuda路径。相应的也要修改CUDALIB路径。</p><p><img src="https://p.pstatp.com/origin/ff4f0000edc20cee8f64" alt="image.png"></p><p><img src="https://p.pstatp.com/origin/ffd7000096b052d952ef" alt="image.png"></p><h4 id="Error8-undeclared-identifier-of-xxEXT"><a href="#Error8-undeclared-identifier-of-xxEXT" class="headerlink" title="Error8: undeclared identifier of xxEXT"></a><strong>Error8: undeclared identifier of xxEXT</strong></h4><p><img src="https://p.pstatp.com/origin/fecc00010e896c8994bd" alt="image.png"></p><p>因为上面是vis.app报错，所以找到vis.h，修改其头文件的引用方式：</p><p><img src="https://p.pstatp.com/origin/fe550001cfc67a5149a0" alt="image.png"></p><p>之后，出现找不到glui.h</p><p><img src="https://p.pstatp.com/origin/ff3700007716ed0f838d" alt="image.png"></p><p>拷贝libglui.a和glui.h到usr相应目录，之后再运行仍然又重复undeclared错误。</p><h4 id="总结重新构建的步骤"><a href="#总结重新构建的步骤" class="headerlink" title="总结重新构建的步骤"></a><strong>总结重新构建的步骤</strong></h4><p>首先是添加依赖模块，然后修改Makefile中对应的依赖模块的路径和Cuda的相关路径，顺带把arch的参数改为合适自己的compute_xx，之后修改一些头文件的引用错误（有的可能单纯是头文件名称错了），有的在不同系统下的路径不同，要改成对应的引用路径（比如glui在mac可能是GLUI/glui但在ubuntu是GL/glui），最后就到达这个错误了。。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">vis.cpp:343:2: error: use of undeclared identifier &#39;glGenFramebuffersEXT&#39;</span><br><span class="line">        glGenFramebuffersEXT(2,framebuffers);                   &#x2F;&#x2F;Make t...</span><br><span class="line">        ^</span><br><span class="line">vis.cpp:347:2: error: use of undeclared identifier &#39;glBindFramebufferEXT&#39;</span><br><span class="line">        glBindFramebufferEXT(GL_FRAMEBUFFER_EXT,framebuffer_lum);</span><br><span class="line">        ^</span><br><span class="line">vis.cpp:352:2: error: use of undeclared identifier &#39;glFramebufferTexture2DEXT&#39;</span><br><span class="line">        glFramebufferTexture2DEXT(GL_FRAMEBUFFER_EXT,GL_COLOR_ATTACHMENT...</span><br><span class="line">        ^</span><br><span class="line">vis.cpp:354:2: error: use of undeclared identifier &#39;glBindFramebufferEXT&#39;</span><br><span class="line">        glBindFramebufferEXT(GL_FRAMEBUFFER_EXT,framebuffer_rgba);</span><br><span class="line">        ^</span><br><span class="line">vis.cpp:359:2: error: use of undeclared identifier &#39;glFramebufferTexture2DEXT&#39;</span><br><span class="line">        glFramebufferTexture2DEXT(GL_FRAMEBUFFER_EXT,GL_COLOR_ATTACHMENT...</span><br><span class="line">        ^</span><br><span class="line">... ...</span><br></pre></td></tr></table></figure><p>貌似是某模块的EXT扩展引用错误，但目前暂时不知道怎么改，难顶…</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;由于需要，最近得重新运行一个CUDA项目，但我苦于没有经验，只能从编译开始入门一下，不过还是不算难的，难的是原项目代码不保证质量，而且有若干无关文件，且运行环境未知、各模块的运行版本也不是很清楚，导致搞了一大堆操作（应该是正确的）最后却没跑起来，是的，这是一篇翻车笔记。&lt;/p&gt;
    
    </summary>
    
    
      <category term="研究方向" scheme="https://www.cz5h.com/categories/%E7%A0%94%E7%A9%B6%E6%96%B9%E5%90%91/"/>
    
    
      <category term="C/C++" scheme="https://www.cz5h.com/tags/C-C/"/>
    
      <category term="调试" scheme="https://www.cz5h.com/tags/%E8%B0%83%E8%AF%95/"/>
    
      <category term="Cuda" scheme="https://www.cz5h.com/tags/Cuda/"/>
    
      <category term="Makefile" scheme="https://www.cz5h.com/tags/Makefile/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu的基本配置及界面美化</title>
    <link href="https://www.cz5h.com/article/a441.html"/>
    <id>https://www.cz5h.com/article/a441.html</id>
    <published>2020-01-31T23:00:00.000Z</published>
    <updated>2020-02-29T18:43:55.575Z</updated>
    
    <content type="html"><![CDATA[<p>本文介绍针对Ubuntu系统的一般操作，包括一些基本配置和界面美化，以及中间可能出现的一些问题。可能以后会比较多的用笔记本来做实验，虽然台式机性能更好，但是毕竟不能背来背去，所以还是用笔记本会好很多，正因为如此，所以把Ubuntu整的好看一点还是很重要的，因为实在找不到比较好的Win10美化主题，所以最终还是决定向MacOS方向美化，网上已经有很多资料了，这里只是记录下自己系统的配置及美化过程。</p><a id="more"></a><p><img src="https://ae03.alicdn.com/kf/U73008d1a0b404055b863f23ff040b5071.png" alt="image.png"></p><h3 id="基本配置和软件"><a href="#基本配置和软件" class="headerlink" title="基本配置和软件"></a><strong>基本配置和软件</strong></h3><h4 id="修改root密码"><a href="#修改root密码" class="headerlink" title="修改root密码"></a><strong>修改root密码</strong></h4><p>为了方便的执行命令，不用每次都sudo，我们可以直接修改root账户的密码，继而切换到root账户执行相关操作，并且在后续过程中，一旦出现开机异常，在具有root账户密码的情况下，我们可以方便的通过<code>Ctrl+Alt+F4</code>（或其他F1~F6）进入tty4通过命令行的方式修复相关的配置文件，从而修复开机失败的情况。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tzloop@tzloop-GE62-6QC:~$ sudo passwd root</span><br><span class="line"><span class="meta">#</span><span class="bash"> 输入你的新密码</span></span><br></pre></td></tr></table></figure><p>注意：初始密码是随机的，只能通过重置来给定一个新密码。</p><h4 id="QQ-for-Linux"><a href="#QQ-for-Linux" class="headerlink" title="QQ for Linux"></a><strong>QQ for Linux</strong></h4><p><a href="https://im.qq.com/linuxqq/download.html" target="_blank" rel="external nofollow noopener noreferrer">https://im.qq.com/linuxqq/download.html</a></p><h4 id="Sogou-for-Linux"><a href="#Sogou-for-Linux" class="headerlink" title="Sogou for Linux"></a><strong>Sogou for Linux</strong></h4><p><a href="https://pinyin.sogou.com/linux/" target="_blank" rel="external nofollow noopener noreferrer">https://pinyin.sogou.com/linux/</a></p><p>在使用过程中有个问题，那就是使用输入法输入数字和英文字母的时候会出现异常的字符，“ｌｉｋｅ　ｔｈｉｓ”。</p><h4 id="重启报错的问题"><a href="#重启报错的问题" class="headerlink" title="重启报错的问题"></a><strong>重启报错的问题</strong></h4><p>如果每次开机重启都会出现“System program problem detected”的问题，我们可以通过配置忽略这个弹窗，其本身系统运行没有影响。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tzloop@tzloop-GE62-6QC:~$ sudo gedit /etc/default/apport </span><br><span class="line"><span class="meta">#</span><span class="bash"> 将 enabled=1 改为 enabled=0</span></span><br></pre></td></tr></table></figure><h3 id="主题和Dock"><a href="#主题和Dock" class="headerlink" title="主题和Dock"></a><strong>主题和Dock</strong></h3><p>这里包括两部分内容：</p><ul><li>一个是在Chrome插件中配置使用gnome插件，这可以调节一些细微的细节</li><li>一个是材质包的下载（包括主题资源、光标、图标）以及配合<strong>gnome-tweaks</strong>工具完成主要的主题配置</li></ul><h4 id="Chrome插件，修改细节"><a href="#Chrome插件，修改细节" class="headerlink" title="Chrome插件，修改细节"></a><strong>Chrome插件，修改细节</strong></h4><p>下载gnome管理插件，可以方便的下载并启用相关的gnome插件。下载地址<a href="https://chrome.google.com/webstore/search/gnome" target="_blank" rel="external nofollow noopener noreferrer">在这</a> ，之后可以在Chrome中打开<a href="https://extensions.gnome.org/" target="_blank" rel="external nofollow noopener noreferrer">插件主页</a>进行配置。</p><p><img src="https://ae05.alicdn.com/kf/U97dfea5c7ad04ac58bbf6c5c79d478cdX.png" alt="image.png"></p><p>这里列举几个用到的插件：</p><ul><li><strong>Top bar script executer</strong>：顶栏快捷方式运行自定义命令</li><li><strong>Keys indicator</strong>：顶栏显示当前按下了Caps Lock, Num Lock, Ctrl, Shift, Alt中的哪些键</li><li><strong>Hide activities button</strong>：隐藏顶栏活动按钮</li><li><strong>Launch</strong>：替换顶栏活动按钮为所有应用程序（9个点）</li><li><strong>Hide top bar</strong>：自动隐藏顶栏</li><li><strong>No title bar</strong>：直接将应用的标题栏和顶栏结合为一体，窗口操作按钮也被放在顶栏上（不推荐使用）</li></ul><h4 id="美化Dock也就是底部程序托盘"><a href="#美化Dock也就是底部程序托盘" class="headerlink" title="美化Dock也就是底部程序托盘"></a><strong>美化Dock也就是底部程序托盘</strong></h4><p><strong>第一步：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 添加软件源</span></span><br><span class="line">tzloop@tzloop-GE62-6QC:~$ sudo add-apt-repository ppa:noobslab/macbuntu</span><br><span class="line"><span class="meta">#</span><span class="bash"> 安装Plank</span></span><br><span class="line">tzloop@tzloop-GE62-6QC:~$ sudo apt-get install plank</span><br></pre></td></tr></table></figure><p>将Plank固定在Dock上，可以进入文件夹/usr/share/applications，找到相关软件，拖到Dock上就OK。</p><p><strong>第二步：</strong></p><p><a href="https://zimocp.github.io/upload/Ubuntu-18-04-LTS-%E7%BE%8E%E5%8C%96-%E4%BB%BFMac-OS-X/frost-plank-theme-2.2.1.zip" target="_blank" rel="external nofollow noopener noreferrer">下载Frost</a>：在解压后的文件夹里找到名为Frost的文件夹，将他复制到<del>/.local/share/plank/themes里（没有就创建）<br><a href="https://zimocp.github.io/upload/Ubuntu-18-04-LTS-%E7%BE%8E%E5%8C%96-%E4%BB%BFMac-OS-X/plank-macOS-Themes-Pack.zip" target="_blank" rel="external nofollow noopener noreferrer">下载Mac OS Themes</a>：解压后进入文件夹，你会看到一大堆主题，根据名字复制你需要的文件夹到</del>/.local/share/plank/themes里（没有就创建）<br>最后在Plank上Ctrl+右键，点击首选项，选择相关主题。</p><p><img src="https://ae02.alicdn.com/kf/U3c5f3a38369a414dbfd6e562fbb9b6889.png" alt="image.png"></p><p><strong>第三步：隐藏原Dash</strong></p><p><a href="https://extensions.gnome.org/extension/307/dash-to-dock/" target="_blank" rel="external nofollow noopener noreferrer">安装Dash to Dock</a></p><ul><li>安装好之后进入GNOME Tweaks，进入左侧栏插件，将Dash to Dock打开，之后关闭之，如果发现没有变回Ubuntu默认dash，那么就完成关闭了。</li><li>点击Dash to Dock的设置按钮，打开自动隐藏，把两个开关都关掉，你会发现你找不到Dash了</li><li>设置Dock开机启动：打开GNOME Tweaks，左侧栏进入开机启动程序，</li></ul><p><strong>其他配置</strong></p><p>安装Slingscold，Slingscold是一个比GNOME原生启动器更轻量的全屏启动器。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tzloop@tzloop-GE62-6QC:~$ sudo apt-get install slingscold</span><br></pre></td></tr></table></figure><p>将Slingscold固定在Dock上，可以进入文件夹/usr/share/applications，找到相关软件，拖到Dock上就OK。</p><h4 id="使用Tweaks修改主题"><a href="#使用Tweaks修改主题" class="headerlink" title="使用Tweaks修改主题"></a><strong>使用Tweaks修改主题</strong></h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tzloop@tzloop-GE62-6QC:~$ sudo apt-get install macbuntu-os-icons-v1804 macbuntu-os-ithemes-v1804 macbuntu-os-plank-theme-v1804</span><br></pre></td></tr></table></figure><p>通过以上命令安装Macbuntu的主题、图标和Plank主题，打开GNOME Tweaks，将左侧栏外观中的应用程序 光标 图标设成Macbuntu即可。</p><p><img src="https://ae05.alicdn.com/kf/Uad2412d3bd03446b8feb0f3eeebe5b34i.png" alt="image.png"></p><p><strong>最终的美化效果</strong></p><p><img src="https://ae02.alicdn.com/kf/U58f40493e8fb4873874cb4a915023acf3.png" alt="image.png"></p><h3 id="修改字体"><a href="#修改字体" class="headerlink" title="修改字体"></a><strong>修改字体</strong></h3><p>Ubuntu系统的英文字体很好看，但中文字体有时会觉得不是那么好看，所以可以自己替换相应的字体。这里首先需要检查是否安装了中文字体，在终端上输入下面指令查看已安装字体</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tzloop@tzloop-GE62-6QC:~$ fc-list :lang=zh</span><br></pre></td></tr></table></figure><p>如果没有中文字体可以到网络中下载，或者直接到windows系统中拷贝。中文字体安装完成后，需要修改默认的字体设置文件，修改默认字体找不到的时候的默认替代字体，进入下面路径找到配置文件：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tzloop@tzloop-GE62-6QC:~$ vim /etc/fonts/conf.d/64-language-selector-prefer.conf</span><br></pre></td></tr></table></figure><p>修改（添加）文件中的字体配置信息，每个<prefer>后面的第一行都是添加的默认新字体。</prefer></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0"?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">fontconfig</span> <span class="meta-keyword">SYSTEM</span> <span class="meta-string">"fonts.dtd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">fontconfig</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">alias</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">family</span>&gt;</span>sans-serif<span class="tag">&lt;/<span class="name">family</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">prefer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">family</span>&gt;</span>Microsoft YaHei<span class="tag">&lt;/<span class="name">family</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">family</span>&gt;</span>Noto Sans CJK JP<span class="tag">&lt;/<span class="name">family</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">family</span>&gt;</span>Noto Sans CJK KR<span class="tag">&lt;/<span class="name">family</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">family</span>&gt;</span>Noto Sans CJK SC<span class="tag">&lt;/<span class="name">family</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">family</span>&gt;</span>Noto Sans CJK TC<span class="tag">&lt;/<span class="name">family</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">family</span>&gt;</span>Noto Sans CJK HK<span class="tag">&lt;/<span class="name">family</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">prefer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">alias</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">alias</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">family</span>&gt;</span>serif<span class="tag">&lt;/<span class="name">family</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">prefer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">family</span>&gt;</span>Microsoft YaHei<span class="tag">&lt;/<span class="name">family</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">family</span>&gt;</span>Noto Serif CJK JP<span class="tag">&lt;/<span class="name">family</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">family</span>&gt;</span>Noto Serif CJK KR<span class="tag">&lt;/<span class="name">family</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">family</span>&gt;</span>Noto Serif CJK SC<span class="tag">&lt;/<span class="name">family</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">family</span>&gt;</span>Noto Serif CJK TC<span class="tag">&lt;/<span class="name">family</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">prefer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">alias</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">alias</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">family</span>&gt;</span>monospace<span class="tag">&lt;/<span class="name">family</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">prefer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">family</span>&gt;</span>Microsoft YaHei<span class="tag">&lt;/<span class="name">family</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">family</span>&gt;</span>Noto Sans Mono CJK JP<span class="tag">&lt;/<span class="name">family</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">family</span>&gt;</span>Noto Sans Mono CJK KR<span class="tag">&lt;/<span class="name">family</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">family</span>&gt;</span>Noto Sans Mono CJK SC<span class="tag">&lt;/<span class="name">family</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">family</span>&gt;</span>Noto Sans Mono CJK TC<span class="tag">&lt;/<span class="name">family</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">family</span>&gt;</span>Noto Sans Mono CJK HK<span class="tag">&lt;/<span class="name">family</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">prefer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">alias</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">fontconfig</span>&gt;</span></span><br></pre></td></tr></table></figure><p>使用sudo权限保存后重启即可生效，原来的字体就会变为中文字体默认的繁体字体就变成了新的简体中文。</p><h3 id="调节Ubuntu亮度"><a href="#调节Ubuntu亮度" class="headerlink" title="调节Ubuntu亮度"></a><strong>调节Ubuntu亮度</strong></h3><p>这部分比较麻烦，可能出现很多种情况，下面分别讲解一下。</p><ol><li><strong>如果是Fn+亮度调节按钮可以出现亮度调节图标，但调节无效，那么可以使用如下方法：</strong></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">tzloop@tzloop-GE62-6QC:~$ sudo gedit /etc/default/grub</span><br><span class="line"><span class="meta">#</span><span class="bash"> 修改文件中的字段：</span></span><br><span class="line">GRUB_CMDLINE_LINUX="" 改成　GRUB_CMDLINE_LINUX="acpi_backlight=vendor"</span><br><span class="line"><span class="meta">#</span><span class="bash"> 更新</span></span><br><span class="line">tzloop@tzloop-GE62-6QC:~$ sudo update-grub</span><br><span class="line"><span class="meta">#</span><span class="bash"> 重启</span></span><br><span class="line">tzloop@tzloop-GE62-6QC:~$ reboot</span><br></pre></td></tr></table></figure><p>如果想设置亮度的初始值，可以直接修改文件内的数值。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">tzloop@tzloop-GE62-6QC:~$ sudo gedit /etc/rc.local</span><br><span class="line"><span class="meta">#</span><span class="bash"> 在打开文件里增加以下代码（加在<span class="built_in">exit</span> 0之前）</span></span><br><span class="line">echo 500 &gt; /sys/class/backlight/intel_backlight/brightness</span><br></pre></td></tr></table></figure><p><strong>2. 如果/sys/class/backlight/目录下是空的</strong></p><p><img src="https://ae02.alicdn.com/kf/U476af81a37864823ae59ef772d99f203y.png" alt="image.png"></p><p>可以通过安装第三方软件的方法来调节亮度，安装brightness-controller或者brightness-controller-sample这两个软件，</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tzloop@tzloop-GE62-6QC:~$ sudo add-apt-repository ppa:apandada1/brightness-controller</span><br><span class="line">tzloop@tzloop-GE62-6QC:~$ sudo apt-get update</span><br><span class="line">tzloop@tzloop-GE62-6QC:~$ sudo apt-get install brightness-controller</span><br><span class="line">tzloop@tzloop-GE62-6QC:~$ brightness-controler</span><br></pre></td></tr></table></figure><p><img src="https://ae03.alicdn.com/kf/U6584a1e78a0942bd9d9682fbb7ced29av.png" alt="image.png"></p><p>左侧是正常版的调节软件，右侧是simple版本。</p><p><strong>3. 如仍然无效可以采用以下危险方案</strong></p><p>以下修改可能造成重启后无法进入系统，因为新增的驱动配置可能导致显示不正常，所以慎用，不过如果重启后进不去系统，也不要害怕，通过Ctrl+Alt+F4（或者F1~F6）进入tty4把新增的配置文件s删除即可，这里直接要用root用户登录，然后删除conf文件重启即可恢复。</p><p>进入/etc/X11/路径，如果没有xorg.conf文件的话，就自己新建一个，输入下面的内容，保存退出。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Section <span class="string">"Screen"</span></span><br><span class="line">Identifier<span class="string">"Default Screen"</span></span><br><span class="line">DefaultDepth<span class="number">24</span></span><br><span class="line">EndSection</span><br><span class="line">Section <span class="string">"Module"</span></span><br><span class="line">Load<span class="string">"glx"</span></span><br><span class="line">EndSection</span><br><span class="line">Section <span class="string">"Device"</span></span><br><span class="line">Identifier<span class="string">"Default Device"</span></span><br><span class="line">Driver<span class="string">"nvidia"</span></span><br><span class="line">Option<span class="string">"NoLogo"</span><span class="string">"True"</span></span><br><span class="line">Option <span class="string">"RegistryDwords"</span> <span class="string">"EnableBrightnessControl=1"</span></span><br><span class="line">EndSection</span><br></pre></td></tr></table></figure><p>如果有这个文件的话在终端中输入：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">tzloop@tzloop-GE62-6QC:~$ sudo gedit /etc/X11/xorg.conf</span><br><span class="line"><span class="meta">#</span><span class="bash"> 把fuiying对应内容改成以下内容</span></span><br><span class="line">Section "Device"</span><br><span class="line">Identifier "Device0"</span><br><span class="line">Driver "nvidia"</span><br><span class="line">VendorName "NVIDIA Corporation"</span><br><span class="line">Option "RegistryDwords" "EnableBrightnessControl=1"</span><br><span class="line">EndSection</span><br></pre></td></tr></table></figure><p>然后保存，退出，重启之后，或许正常，如果进不去系统了，那么请看本段开头的解决方案，命令行进入系统删除conf文件即可。</p><p><img src="https://ae04.alicdn.com/kf/U7278e9361e104a62af69e3baf5f839abn.png" alt="image.png"></p><p><strong>4. 如果还是没有效果</strong></p><p>合理的怀疑是因为显卡驱动的问题，我们知道在双显卡（独显加集显）的电脑上安装显卡驱动时，需要修改grub文件，添加nomodeset字段在slpash之后，这是为了禁止系统使用GTX的N卡驱动，具体在前一篇文章中详细说明，这里如果仍然无法调节亮度，请务必参看一下文件中是否仍然存在nomodeset字段。要将其删掉。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tzloop@tzloop-GE62-6QC:~$ sudo vim /etc/default/grub</span><br><span class="line"><span class="meta">#</span><span class="bash"> 删除nomodeset字段，保存退出</span></span><br><span class="line">tzloop@tzloop-GE62-6QC:~$ sudo update-grub</span><br><span class="line">tzloop@tzloop-GE62-6QC:~$ reboot</span><br></pre></td></tr></table></figure><p>这是我的最终错误定位，去掉nomodeset之后，其实才是真正使用独显显示，重启后会发现一些变化，比如打开程序会出现动画，点击程序菜单也会出现动画，亮度随意调节，网页或程序渲染速度也变得更快，而且上述的两个亮度调节软件也可以使用了。</p><h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a><strong>参考资料</strong></h3><p><a href="https://zimocp.github.io/2019/05/20/Ubuntu-18-04-LTS-%E7%BE%8E%E5%8C%96/" target="_blank" rel="external nofollow noopener noreferrer">https://zimocp.github.io/2019/05/20/Ubuntu-18-04-LTS-%E7%BE%8E%E5%8C%96/</a><br><a href="https://www.jianshu.com/p/4c95b708ae1d" target="_blank" rel="external nofollow noopener noreferrer">https://www.jianshu.com/p/4c95b708ae1d</a><br><a href="https://blog.csdn.net/redstone0001/article/details/17042011" target="_blank" rel="external nofollow noopener noreferrer">https://blog.csdn.net/redstone0001/article/details/17042011</a><br><a href="https://blog.csdn.net/u013406197/article/details/80773820" target="_blank" rel="external nofollow noopener noreferrer">https://blog.csdn.net/u013406197/article/details/80773820</a><br><a href="https://blog.csdn.net/TianliangQiu/article/details/51585398" target="_blank" rel="external nofollow noopener noreferrer">https://blog.csdn.net/TianliangQiu/article/details/51585398</a><br><a href="https://blog.csdn.net/HedWater/article/details/75465110" target="_blank" rel="external nofollow noopener noreferrer">https://blog.csdn.net/HedWater/article/details/75465110</a><br><a href="https://blog.csdn.net/weixin_41490463/article/details/80987654" target="_blank" rel="external nofollow noopener noreferrer">https://blog.csdn.net/weixin_41490463/article/details/80987654</a><br><a href="https://blog.csdn.net/gengyuchao/article/details/101215243" target="_blank" rel="external nofollow noopener noreferrer">https://blog.csdn.net/gengyuchao/article/details/101215243</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文介绍针对Ubuntu系统的一般操作，包括一些基本配置和界面美化，以及中间可能出现的一些问题。可能以后会比较多的用笔记本来做实验，虽然台式机性能更好，但是毕竟不能背来背去，所以还是用笔记本会好很多，正因为如此，所以把Ubuntu整的好看一点还是很重要的，因为实在找不到比较好的Win10美化主题，所以最终还是决定向MacOS方向美化，网上已经有很多资料了，这里只是记录下自己系统的配置及美化过程。&lt;/p&gt;
    
    </summary>
    
    
      <category term="研究方向" scheme="https://www.cz5h.com/categories/%E7%A0%94%E7%A9%B6%E6%96%B9%E5%90%91/"/>
    
    
      <category term="总结" scheme="https://www.cz5h.com/tags/%E6%80%BB%E7%BB%93/"/>
    
      <category term="Ubuntu" scheme="https://www.cz5h.com/tags/Ubuntu/"/>
    
      <category term="Linux" scheme="https://www.cz5h.com/tags/Linux/"/>
    
      <category term="系统设置" scheme="https://www.cz5h.com/tags/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E7%BD%AE/"/>
    
  </entry>
  
</feed>
